[{"id":"ZmlsZS0vbW50L2Mv","type":"file","name":"tarot-app.js","qualifiedName":"/mnt/c/dev/tarot/tarot-app.js","file":"/mnt/c/dev/tarot/tarot-app.js","startLine":0,"endLine":2636,"lines":2637,"code":"// Tarot Reader - Professional Edition\nclass TarotReader {\n    constructor() {\n        this.currentDeck = [];\n        this.drawnCards = [];\n        th...","mtime":1752833064608.3948,"doc":"Tarot Reader - Professional Edition","children":["Y2xhc3MtVGFyb3RS"],"exports":[],"embedding":[-0.04097229614853859,0.09115506708621979,0.002947404282167554,-0.042532093822956085,0.033807434141635895,0.004997554700821638,0.04281749948859215,0.053636375814676285,-0.009046981111168861,-0.06626368314027786,-0.06861703842878342,0.04347948729991913,-0.08743411302566528,0.022302867844700813,-0.02670675329864025,-0.00046957694576121867,-0.0807487964630127,0.025921141728758812,0.0697220042347908,-0.009173287078738213,0.07023394107818604,0.007762251887470484,0.05109617859125137,0.018774772062897682,-0.0008471862529404461,0.03793766722083092,-0.0404558926820755,-0.012214863672852516,0.015878383070230484,-0.05361989513039589,-0.02704736590385437,0.04546733573079109,-0.04747324436903,0.0023815445601940155,0.0026510218158364296,0.012597715482115746,-0.02108037658035755,0.06467361003160477,0.010622898116707802,0.03127887099981308,0.08231985569000244,0.03882206976413727,-0.05636034905910492,0.012324482202529907,-0.006548802834004164,-0.08901982009410858,-0.08926049619913101,0.019219674170017242,-0.019146323204040527,0.06213168054819107,-0.08544816821813583,-0.04352859780192375,-0.013144192285835743,-0.02889787033200264,-0.013526923023164272,-0.03190719336271286,0.023301107808947563,-0.05041038244962692,0.0022622591350227594,-0.04629386216402054,-0.007687351666390896,0.016423434019088745,0.04069676250219345,0.018702199682593346,0.03639688715338707,-0.0059271035715937614,-0.01264998596161604,0.08343064039945602,0.01620505563914776,-0.04451029375195503,-0.04837126284837723,0.02156643010675907,0.10605622828006744,-0.010873167775571346,0.013162164948880672,-0.0217745378613472,0.015208198688924313,0.09879790991544724,0.009922823868691921,-0.06931045651435852,-0.09836173057556152,-0.055579978972673416,0.04996901750564575,0.04673229530453682,-0.019232438877224922,0.06512544304132462,0.05510846525430679,0.02164115570485592,0.06507672369480133,-0.016325609758496284,-0.015112101100385189,-0.046151962131261826,-0.00859909038990736,0.07309279590845108,-0.0637880265712738,0.04623018950223923,0.04199707880616188,-0.03651038557291031,-0.09161001443862915,0.022757552564144135,-0.020607171580195427,0.009642040356993675,0.07073984295129776,-0.07168574631214142,0.05354505404829979,-0.027380982413887978,0.007539798505604267,-0.05975719541311264,-0.02037716470658779,-0.012022892013192177,0.0012663058005273342,-0.005963217932730913,-0.05829406902194023,-0.05412708595395088,0.02415204793214798,-0.005208054557442665,-0.09219414740800858,0.021387066692113876,0.08986090868711472,0.18004995584487915,0.1167650893330574,0.05413869768381119,0.010341721586883068,-0.0704755038022995,-0.03849197179079056,-0.10273878276348114,0.0298742838203907,-1.150751755940913e-33,0.025337137281894684,0.026310749351978302,-0.01914902962744236,0.06763731688261032,0.033483922481536865,-0.042786289006471634,-0.026371771469712257,0.08033653348684311,-0.1295459121465683,0.0004218599933665246,-0.018836529925465584,0.02597847208380699,0.021512676030397415,0.09157129377126694,-0.096812903881073,-0.008493756875395775,-0.06236918643116951,-0.005864831153303385,0.026447132229804993,-0.08252844214439392,-0.05428362637758255,0.046336784958839417,-0.006091281771659851,-0.015498960390686989,-0.0990123301744461,0.10586615651845932,0.006766773294657469,-0.027003100141882896,-0.022097578272223473,0.03296913206577301,0.10021461546421051,-0.061108335852622986,-0.01288716308772564,-0.015588020905852318,0.027689117938280106,0.05377940088510513,-0.03937047719955444,0.029030539095401764,-0.021428825333714485,-0.004330845084041357,-0.03147975355386734,-0.0662606731057167,0.03713829070329666,-0.05713360011577606,-0.026969226077198982,-0.05220939218997955,0.07049296051263809,-0.0218647513538599,-0.014538561925292015,0.030679641291499138,-0.07277719676494598,0.021608475595712662,0.010987045243382454,-0.007484278175979853,0.03806183859705925,-0.08364763110876083,0.04467809572815895,0.04885402321815491,-0.02008056826889515,-0.11217904835939407,0.051883090287446976,0.10220491886138916,-0.013669721782207489,0.006012533791363239,-0.06638309359550476,-0.007148491218686104,-0.08050220459699631,-0.09164511412382126,0.01128309965133667,-0.01479439064860344,-0.03391813114285469,0.02916872501373291,0.059350285679101944,0.04591144248843193,-0.031096313148736954,0.005103114061057568,-0.055114272981882095,-0.023711616173386574,-0.01137399859726429,-0.04809876158833504,-0.14296723902225494,-0.06528542190790176,-0.06051334738731384,-0.020818885415792465,-0.013119879178702831,0.015613071620464325,0.04303639382123947,-0.015069326385855675,0.007124938070774078,0.04075377807021141,-0.05278031900525093,-0.0048856656067073345,-0.014900311827659607,-0.08454969525337219,0.036360759288072586,-1.524143036540301e-33,0.04532092437148094,0.001821688492782414,-0.05981289967894554,-0.023516859859228134,0.005079968832433224,-0.045172665268182755,0.013252830132842064,0.02470306120812893,0.06574299186468124,-0.029250802472233772,-0.03777548670768738,0.06320824474096298,0.01797301508486271,0.05798938125371933,0.07210634648799896,0.0728563442826271,-0.062432777136564255,-0.028933824971318245,0.03742929920554161,-0.07061264663934708,-0.026351433247327805,-0.0025000940077006817,-0.03529493138194084,0.12170281261205673,-0.05542003735899925,0.00048736497410573065,0.08569180220365524,-0.012109464034438133,0.021949701011180878,-0.08708217740058899,0.04184843227267265,-0.04468470811843872,-0.01940116100013256,0.06683655828237534,-0.030350813642144203,0.025760004296898842,0.05833272635936737,-0.0306868813931942,-0.03360031917691231,-0.029974572360515594,0.004582986701279879,-0.0004399591125547886,-0.04513832554221153,-0.084861621260643,0.015315921977162361,-0.019464626908302307,-0.0068556745536625385,0.014301298186182976,0.042174648493528366,0.02292064018547535,-0.008892381563782692,-0.0824260264635086,-0.009178581647574902,-0.07166241854429245,-0.0005231179529801011,0.08096873015165329,0.005344870500266552,-0.0018918326823040843,-0.034051913768053055,0.06250899285078049,0.0028280336409807205,-0.053249090909957886,-0.017470255494117737,-0.08325120806694031,-0.015350565314292908,-0.06611167639493942,-0.05899317190051079,-0.03468366712331772,-0.004330949392169714,0.021544231101870537,-0.02198105864226818,0.046564579010009766,-0.06080465391278267,-0.05231073498725891,-0.013842343352735043,0.05195976048707962,0.11624685674905777,0.03029109165072441,0.029883921146392822,-0.13937553763389587,0.05046767368912697,0.0040204585529863834,-0.0045447456650435925,0.05396726354956627,0.06914535909891129,0.019875140860676765,0.0016818080330267549,-0.05943872407078743,0.020723365247249603,-0.03974455967545509,0.041476331651210785,0.02173454314470291,-0.0046147871762514114,0.02720041573047638,0.011370466090738773,-3.4870538456743816e-8,-0.0771360769867897,0.006789071951061487,-0.051805198192596436,-0.009654675610363483,-0.0032278706785291433,0.007833259180188179,0.03745574504137039,-0.022014910355210304,-0.059229712933301926,-0.001959283137694001,0.08212731033563614,0.040290363132953644,0.037850022315979004,-0.008956030011177063,0.10426311194896698,0.038468364626169205,-0.009945085272192955,0.1010834202170372,-0.05542199686169624,-0.007012708578258753,0.06843267381191254,-0.052663978189229965,0.03546488285064697,0.00015312960022129118,-0.006278861779719591,0.012477925978600979,0.01904977671802044,-0.07789409160614014,0.019172335043549538,0.0034344203304499388,0.028186781331896782,0.10430793464183807,0.09191356599330902,-0.09274560958147049,0.053137097507715225,0.061680715531110764,0.011445097625255585,0.008516180329024792,0.07551685720682144,0.16541527211666107,0.047599323093891144,-0.043209586292505264,-0.09758991003036499,-0.037928976118564606,-0.046882979571819305,-0.04496372118592262,-0.04659664258360863,-0.02641553245484829,-0.06833751499652863,-0.01115435641258955,-0.00812373124063015,0.04801720008254051,0.007215672638267279,0.012367196381092072,-0.01689099706709385,0.058646682649850845,0.025847509503364563,-0.046645741909742355,-0.010836274363100529,-0.02250148542225361,0.09540411829948425,0.04770468920469284,0.07865279912948608,0.05487869679927826]},{"id":"Y2xhc3MtQW5hbHlz","type":"class","name":"AnalysisEngine","qualifiedName":"AnalysisEngine","parentClass":null,"file":"/mnt/c/dev/tarot/js/analysis-engine.js","startLine":3,"endLine":1583,"lines":1581,"code":"class AnalysisEngine {\n    constructor() {\n        this.analysisCache = new Map();\n        this.initializeReferenceData();\n    }\n\n    initializeReferenceData() {\n        // Jungian Archetypes mapping\n        this.jungianArchetypes = {\n            \"The Fool\": \"The Innocent\",\n            \"The Magician\": \"The Magician\",\n            \"The High Priestess\": \"The Wise Woman\",\n            \"The Empress\": \"The Mother\",\n            \"The Emperor\": \"The Father\",\n            \"The Hierophant\": \"The Sage\",\n            \"The Lovers\": \"The Lover\",\n            \"The Chariot\": \"The Hero\",\n            \"Strength\": \"The Warrior\",\n            \"The Hermit\": \"The Hermit\",\n            \"Wheel of Fortune\": \"The Seeker\",\n            \"Justice\": \"The Judge\",\n            \"The Hanged Man\": \"The Sacrifice\",\n            \"Death\": \"The Destroyer\",\n            \"Temperance\": \"The Healer\",\n            \"The Devil\": \"The Shadow\",\n            \"The Tower\": \"The Rebel\",\n            \"The Star\": \"The Visionary\",\n            \"The Moon\": \"The Mystic\",\n            \"The Sun\": \"The Child\",\n            \"Judgement\": \"The Transformer\",\n            \"The World\": \"The Sage\"\n        };\n\n        // Kabbalistic Tree of Life correspondences\n        this.kabbalisticPaths = {\n            \"The Fool\": { path: 11, sephiroth: [\"Kether\", \"Chokmah\"], hebrew: \"Aleph\" },\n            \"The Magician\": { path: 12, sephiroth: [\"Kether\", \"Binah\"], hebrew: \"Beth\" },\n            \"The High Priestess\": { path: 13, sephiroth: [\"Kether\", \"Tiphereth\"], hebrew: \"Gimel\" },\n            \"The Empress\": { path: 14, sephiroth: [\"Chokmah\", \"Binah\"], hebrew: \"Daleth\" },\n            \"The Emperor\": { path: 15, sephiroth: [\"Chokmah\", \"Tiphereth\"], hebrew: \"Heh\" },\n            \"The Hierophant\": { path: 16, sephiroth: [\"Chokmah\", \"Chesed\"], hebrew: \"Vav\" },\n            \"The Lovers\": { path: 17, sephiroth: [\"Binah\", \"Tiphereth\"], hebrew: \"Zayin\" },\n            \"The Chariot\": { path: 18, sephiroth: [\"Binah\", \"Geburah\"], hebrew: \"Cheth\" },\n            \"Strength\": { path: 19, sephiroth: [\"Chesed\", \"Geburah\"], hebrew: \"Teth\" },\n            \"The Hermit\": { path: 20, sephiroth: [\"Chesed\", \"Tiphereth\"], hebrew: \"Yod\" },\n            \"Wheel of Fortune\": { path: 21, sephiroth: [\"Chesed\", \"Netzach\"], hebrew: \"Kaph\" },\n            \"Justice\": { path: 22, sephiroth: [\"Geburah\", \"Tiphereth\"], hebrew: \"Lamed\" },\n            \"The Hanged Man\": { path: 23, sephiroth: [\"Geburah\", \"Hod\"], hebrew: \"Mem\" },\n            \"Death\": { path: 24, sephiroth: [\"Tiphereth\", \"Netzach\"], hebrew: \"Nun\" },\n            \"Temperance\": { path: 25, sephiroth: [\"Tiphereth\", \"Yesod\"], hebrew: \"Samech\" },\n            \"The Devil\": { path: 26, sephiroth: [\"Tiphereth\", \"Hod\"], hebrew: \"Ayin\" },\n            \"The Tower\": { path: 27, sephiroth: [\"Netzach\", \"Hod\"], hebrew: \"Peh\" },\n            \"The Star\": { path: 28, sephiroth: [\"Netzach\", \"Yesod\"], hebrew: \"Tzaddi\" },\n            \"The Moon\": { path: 29, sephiroth: [\"Netzach\", \"Malkuth\"], hebrew: \"Qoph\" },\n            \"The Sun\": { path: 30, sephiroth: [\"Hod\", \"Yesod\"], hebrew: \"Resh\" },\n            \"Judgement\": { path: 31, sephiroth: [\"Hod\", \"Malkuth\"], hebrew: \"Shin\" },\n            \"The World\": { path: 32, sephiroth: [\"Yesod\", \"Malkuth\"], hebrew: \"Tav\" }\n        };\n\n        // Chakra correspondences\n        this.chakraCorrespondences = {\n            \"Root\": [\"Emperor\", \"Empress\", \"King of Pentacles\", \"Queen of Pentacles\"],\n            \"Sacral\": [\"Lovers\", \"Two of Cups\", \"King of Cups\", \"Queen of Cups\"],\n            \"Solar Plexus\": [\"Strength\", \"Magician\", \"King of Wands\", \"Queen of Wands\"],\n            \"Heart\": [\"Temperance\", \"Two of Cups\", \"Six of Cups\", \"Ten of Cups\"],\n            \"Throat\": [\"Hierophant\", \"King of Swords\", \"Queen of Swords\", \"Justice\"],\n            \"Third Eye\": [\"High Priestess\", \"Hermit\", \"Moon\", \"Star\"],\n            \"Crown\": [\"World\", \"Fool\", \"Wheel of Fortune\", \"Sun\"]\n        };\n\n        // Elemental correspondences\n        this.elementalBalance = {\n            \"Fire\": [\"Wands\", \"Aries\", \"Leo\", \"Sagittarius\"],\n            \"Water\": [\"Cups\", \"Cancer\", \"Scorpio\", \"Pisces\"],\n            \"Air\": [\"Swords\", \"Gemini\", \"Libra\", \"Aquarius\"],\n            \"Earth\": [\"Pentacles\", \"Taurus\", \"Virgo\", \"Capricorn\"]\n        };\n    }\n\n    // Main analysis method\n    analyzeReading(cards, spreadType) {\n        const analysis = {\n            overview: this.generateOverview(cards, spreadType),\n            elemental: this.analyzeElementalBalance(cards),\n            suits: this.analyzeSuitDistribution(cards),\n            energy: this.analyzeEnergyPattern(cards),\n            psychology: this.analyzeJungianPattern(cards),\n            spiritual: this.analyzeSpiritualPath(cards),\n            kabbalah: this.analyzeKabbalisticInfluence(cards),\n            chakras: this.analyzeChakraAlignment(cards),\n            archetypes: this.analyzeArchetypes(cards),\n            timing: this.analyzeTiming(cards),\n            karma: this.analyzeKarmicPattern(cards),\n            numerology: this.analyzeNumerology(cards),\n            elementalDignities: this.analyzeElementalDignities(cards),\n            astrologicalTransits: this.analyzeAstrologicalTransits(cards),\n            sacredGeometry: this.analyzeSacredGeometry(cards),\n            symbolism: this.analyzeDeepSymbolism(cards),\n            cardInteractions: this.analyzeCardInteractions(cards),\n            shadowWork: this.analyzeShadowWork(cards),\n            alchemical: this.analyzeAlchemicalProcess(cards),\n            mythological: this.analyzeMythologicalPatterns(cards),\n            quantumField: this.analyzeQuantumFieldInfluence(cards)\n        };\n\n        this.analysisCache.set(cards, analysis);\n        return analysis;\n    }\n\n    // Generate reading overview\n    generateOverview(cards, spreadType) {\n        const majorArcana = cards.filter(c => c.suit === \"Major Arcana\").length;\n        const courtCards = cards.filter(c => [\"King\", \"Queen\", \"Knight\", \"Page\"].some(court => c.name.includes(court))).length;\n        const reversedCards = cards.filter(c => c.isReversed).length;\n        \n        const intensity = majorArcana > cards.length * 0.5 ? \"High\" : majorArcana > cards.length * 0.3 ? \"Medium\" : \"Low\";\n        const personalInfluence = courtCards > 0 ? \"Strong personal influences present\" : \"Situational focus\";\n        const energyFlow = reversedCards > cards.length * 0.5 ? \"Blocked or internal energy\" : \"Forward-moving energy\";\n\n        return {\n            intensity,\n            personalInfluence,\n            energyFlow,\n            majorArcanaCount: majorArcana,\n            courtCardCount: courtCards,\n            reversedCount: reversedCards,\n            interpretation: this.generateOverviewInterpretation(intensity, personalInfluence, energyFlow)\n        };\n    }\n\n    generateOverviewInterpretation(intensity, personalInfluence, energyFlow) {\n        return `This reading shows ${intensity.toLowerCase()} spiritual intensity with ${personalInfluence.toLowerCase()}. \n                The energy pattern suggests ${energyFlow.toLowerCase()}, indicating the current flow of circumstances in your life.`;\n    }\n\n    // Analyze elemental balance\n    analyzeElementalBalance(cards) {\n        const elements = { Fire: 0, Water: 0, Air: 0, Earth: 0 };\n        \n        cards.forEach(card => {\n            if (card.element && elements.hasOwnProperty(card.element)) {\n                elements[card.element]++;\n            }\n            \n            // Add suit-based elemental analysis\n            if (card.suit === \"Wands\") elements.Fire++;\n            else if (card.suit === \"Cups\") elements.Water++;\n            else if (card.suit === \"Swords\") elements.Air++;\n            else if (card.suit === \"Pentacles\") elements.Earth++;\n        });\n\n        const dominant = Object.keys(elements).reduce((a, b) => elements[a] > elements[b] ? a : b);\n        const lacking = Object.keys(elements).reduce((a, b) => elements[a] < elements[b] ? a : b);\n        \n        return {\n            distribution: elements,\n            dominant,\n            lacking,\n            balance: this.calculateElementalBalance(elements),\n            interpretation: this.generateElementalInterpretation(dominant, lacking, elements)\n        };\n    }\n\n    generateElementalInterpretation(dominant, lacking, elements) {\n        const dominantMeaning = {\n            Fire: \"passion, creativity, and action dominate your current situation\",\n            Water: \"emotions, intuition, and relationships are the primary focus\",\n            Air: \"thoughts, communication, and mental clarity are emphasized\",\n            Earth: \"practical matters, material concerns, and stability are highlighted\"\n        };\n\n        const lackingMeaning = {\n            Fire: \"you may need more passion and initiative\",\n            Water: \"emotional connection and intuition may be lacking\",\n            Air: \"clearer thinking and communication might be needed\",\n            Earth: \"more grounding and practical focus could be beneficial\"\n        };\n\n        return `${dominantMeaning[dominant]}. However, ${lackingMeaning[lacking]}.`;\n    }\n\n    // Calculate elemental balance score\n    calculateElementalBalance(elements) {\n        const total = Object.values(elements).reduce((sum, count) => sum + count, 0);\n        const average = total / 4;\n        const variance = Object.values(elements).reduce((sum, count) => sum + Math.pow(count - average, 2), 0) / 4;\n        return Math.max(0, 100 - (variance * 10)); // Higher score = more balanced\n    }\n\n    // Analyze suit distribution\n    analyzeSuitDistribution(cards) {\n        const suits = {};\n        cards.forEach(card => {\n            if (!suits[card.suit]) suits[card.suit] = 0;\n            suits[card.suit]++;\n        });\n\n        const suitMeanings = {\n            \"Major Arcana\": \"spiritual lessons and major life themes\",\n            \"Wands\": \"career, passion, and creative energy\",\n            \"Cups\": \"emotions, relationships, and intuition\",\n            \"Swords\": \"thoughts, challenges, and communication\",\n            \"Pentacles\": \"material matters, health, and practical concerns\"\n        };\n\n        return {\n            distribution: suits,\n            dominantSuit: Object.keys(suits).reduce((a, b) => suits[a] > suits[b] ? a : b),\n            interpretation: this.generateSuitInterpretation(suits, suitMeanings)\n        };\n    }\n\n    generateSuitInterpretation(suits, meanings) {\n        const dominant = Object.keys(suits).reduce((a, b) => suits[a] > suits[b] ? a : b);\n        return `The focus is primarily on ${meanings[dominant]} with ${suits[dominant]} cards from this area.`;\n    }\n\n    // Analyze energy pattern\n    analyzeEnergyPattern(cards) {\n        let forwardMoving = 0;\n        let blocked = 0;\n        let transformative = 0;\n\n        cards.forEach(card => {\n            if (card.isReversed) {\n                blocked++;\n            } else {\n                forwardMoving++;\n            }\n\n            // Check for transformative cards\n            const transformativeCards = [\"Death\", \"Tower\", \"Wheel of Fortune\", \"Judgement\", \"Temperance\"];\n            if (transformativeCards.some(name => card.name.includes(name))) {\n                transformative++;\n            }\n        });\n\n        const energyType = blocked > forwardMoving ? \"Blocked/Internal\" : \n                          transformative > 0 ? \"Transformative\" : \"Forward-Moving\";\n\n        return {\n            forwardMoving,\n            blocked,\n            transformative,\n            energyType,\n            interpretation: this.generateEnergyInterpretation(energyType, blocked, forwardMoving, transformative)\n        };\n    }\n\n    generateEnergyInterpretation(energyType, blocked, forwardMoving, transformative) {\n        if (energyType === \"Blocked/Internal\") {\n            return \"Energy is currently blocked or moving internally. This suggests a time for reflection and inner work.\";\n        } else if (energyType === \"Transformative\") {\n            return \"Major transformation is occurring. This is a time of significant change and growth.\";\n        } else {\n            return \"Energy is flowing forward positively. This is a time for action and manifestation.\";\n        }\n    }\n\n    // Analyze Jungian psychological patterns\n    analyzeJungianPattern(cards) {\n        const archetypes = {};\n        const shadowWork = [];\n        const animaAnimus = [];\n\n        cards.forEach(card => {\n            if (this.jungianArchetypes[card.name]) {\n                const archetype = this.jungianArchetypes[card.name];\n                archetypes[archetype] = (archetypes[archetype] || 0) + 1;\n\n                // Check for shadow work (reversed cards)\n                if (card.isReversed) {\n                    shadowWork.push(`${card.name} (${archetype}) - ${this.getShadowMeaning(card.name)}`);\n                }\n\n                // Check for anima/animus patterns\n                if ([\"The Empress\", \"The High Priestess\", \"Queen of Cups\", \"Queen of Pentacles\"].includes(card.name)) {\n                    animaAnimus.push(`Anima: ${card.name} - ${this.getAnimaAnimusMeaning(card.name, \"anima\")}`);\n                }\n                if ([\"The Emperor\", \"The Magician\", \"King of Wands\", \"King of Swords\"].includes(card.name)) {\n                    animaAnimus.push(`Animus: ${card.name} - ${this.getAnimaAnimusMeaning(card.name, \"animus\")}`);\n                }\n            }\n        });\n\n        return {\n            dominantArchetypes: archetypes,\n            shadowWork,\n            animaAnimus,\n            collectiveUnconscious: this.analyzeCollectiveUnconscious(cards),\n            interpretation: this.generateJungianInterpretation(archetypes, shadowWork, animaAnimus)\n        };\n    }\n\n    getShadowMeaning(cardName) {\n        const shadowMeanings = {\n            \"The Fool\": \"reckless behavior or avoiding responsibility\",\n            \"The Magician\": \"manipulation or misuse of power\",\n            \"The High Priestess\": \"secrets or intuitive blocks\",\n            \"The Empress\": \"overindulgence or neglecting self-care\",\n            \"The Emperor\": \"authoritarian behavior or lack of structure\"\n        };\n        return shadowMeanings[cardName] || \"unexplored shadow aspects\";\n    }\n\n    getAnimaAnimusMeaning(cardName, type) {\n        const meanings = {\n            anima: {\n                \"The Empress\": \"nurturing feminine energy and creativity\",\n                \"The High Priestess\": \"intuitive wisdom and mystery\",\n                \"Queen of Cups\": \"emotional intelligence and compassion\",\n                \"Queen of Pentacles\": \"practical nurturing and abundance\"\n            },\n            animus: {\n                \"The Emperor\": \"structured masculine energy and leadership\",\n                \"The Magician\": \"focused will and manifestation power\",\n                \"King of Wands\": \"passionate leadership and vision\",\n                \"King of Swords\": \"intellectual clarity and justice\"\n            }\n        };\n        return meanings[type][cardName] || \"archetypal energy\";\n    }\n\n    analyzeCollectiveUnconscious(cards) {\n        const majorArcana = cards.filter(c => c.suit === \"Major Arcana\");\n        if (majorArcana.length > 0) {\n            return `${majorArcana.length} Major Arcana cards suggest strong connection to collective unconscious themes and universal patterns.`;\n        }\n        return \"Connection to collective unconscious is subtle in this reading.\";\n    }\n\n    generateJungianInterpretation(archetypes, shadowWork, animaAnimus) {\n        const dominantArchetype = Object.keys(archetypes).reduce((a, b) => archetypes[a] > archetypes[b] ? a : b, \"\");\n        let interpretation = `The ${dominantArchetype} archetype is dominant in this reading, suggesting this energy is most active in your psyche.`;\n        \n        if (shadowWork.length > 0) {\n            interpretation += ` Shadow work is indicated in ${shadowWork.length} area(s), offering opportunities for integration and growth.`;\n        }\n        \n        if (animaAnimus.length > 0) {\n            interpretation += ` Anima/Animus dynamics are present, suggesting themes of inner masculine/feminine balance.`;\n        }\n        \n        return interpretation;\n    }\n\n    // Analyze spiritual path indicators\n    analyzeSpiritualPath(cards) {\n        const soulLessons = [];\n        const spiritualGifts = [];\n        const higherSelf = [];\n        const ascension = [];\n\n        cards.forEach(card => {\n            // Soul lessons (Major Arcana)\n            if (card.suit === \"Major Arcana\") {\n                soulLessons.push(`${card.name}: ${this.getSoulLesson(card.name)}`);\n            }\n\n            // Spiritual gifts (specific cards)\n            if ([\"The High Priestess\", \"The Hermit\", \"The Star\", \"The Moon\"].includes(card.name)) {\n                spiritualGifts.push(`${card.name}: ${this.getSpiritualGift(card.name)}`);\n            }\n\n            // Higher Self messages (upright Major Arcana)\n            if (card.suit === \"Major Arcana\" && !card.isReversed) {\n                higherSelf.push(`${card.name}: ${this.getHigherSelfMessage(card.name)}`);\n            }\n\n            // Ascension indicators\n            if ([\"The World\", \"The Sun\", \"The Star\", \"Temperance\"].includes(card.name)) {\n                ascension.push(`${card.name}: ${this.getAscensionPath(card.name)}`);\n            }\n        });\n\n        return {\n            soulLessons,\n            spiritualGifts,\n            higherSelf,\n            ascension,\n            interpretation: this.generateSpiritualInterpretation(soulLessons, spiritualGifts, higherSelf, ascension)\n        };\n    }\n\n    getSoulLesson(cardName) {\n        const lessons = {\n            \"The Fool\": \"Trust in the journey and embrace new beginnings\",\n            \"The Magician\": \"Develop your personal power and manifestation abilities\",\n            \"The High Priestess\": \"Connect with your intuition and inner wisdom\",\n            \"The Empress\": \"Embrace creativity and nurturing energy\",\n            \"The Emperor\": \"Learn structure, discipline, and healthy boundaries\"\n        };\n        return lessons[cardName] || \"Universal spiritual growth\";\n    }\n\n    getSpiritualGift(cardName) {\n        const gifts = {\n            \"The High Priestess\": \"Enhanced intuition and psychic abilities\",\n            \"The Hermit\": \"Inner wisdom and ability to guide others\",\n            \"The Star\": \"Hope, healing, and inspirational energy\",\n            \"The Moon\": \"Connection to lunar cycles and subconscious wisdom\"\n        };\n        return gifts[cardName] || \"Spiritual insight\";\n    }\n\n    getHigherSelfMessage(cardName) {\n        const messages = {\n            \"The Fool\": \"Step forward with faith and trust\",\n            \"The Magician\": \"You have all the tools you need\",\n            \"The High Priestess\": \"Listen to your inner voice\",\n            \"The Empress\": \"Create and nurture what you love\",\n            \"The Emperor\": \"Take charge of your destiny\"\n        };\n        return messages[cardName] || \"Divine guidance is available\";\n    }\n\n    getAscensionPath(cardName) {\n        const paths = {\n            \"The World\": \"Completion of a major spiritual cycle\",\n            \"The Sun\": \"Joy, vitality, and spiritual illumination\",\n            \"The Star\": \"Hope and connection to higher purpose\",\n            \"Temperance\": \"Balance and integration of spiritual lessons\"\n        };\n        return paths[cardName] || \"Spiritual evolution\";\n    }\n\n    generateSpiritualInterpretation(soulLessons, spiritualGifts, higherSelf, ascension) {\n        let interpretation = `This reading reveals ${soulLessons.length} major soul lesson(s) for your spiritual growth.`;\n        \n        if (spiritualGifts.length > 0) {\n            interpretation += ` You have ${spiritualGifts.length} spiritual gift(s) available to develop.`;\n        }\n        \n        if (higherSelf.length > 0) {\n            interpretation += ` Your Higher Self is offering ${higherSelf.length} message(s) of guidance.`;\n        }\n        \n        if (ascension.length > 0) {\n            interpretation += ` Signs of spiritual ascension are present in ${ascension.length} area(s).`;\n        }\n        \n        return interpretation;\n    }\n\n    // Additional analysis methods would continue here...\n    // For brevity, I'll include the structure but not implement every method fully\n\n    analyzeKabbalisticInfluence(cards) {\n        const paths = [];\n        const sephiroth = {};\n        const hebrewLetters = [];\n\n        cards.forEach(card => {\n            if (this.kabbalisticPaths[card.name]) {\n                const path = this.kabbalisticPaths[card.name];\n                paths.push(path);\n                hebrewLetters.push(path.hebrew);\n                \n                path.sephiroth.forEach(seph => {\n                    sephiroth[seph] = (sephiroth[seph] || 0) + 1;\n                });\n            }\n        });\n\n        return {\n            activePaths: paths,\n            sephirothInfluence: sephiroth,\n            hebrewLetters,\n            interpretation: `${paths.length} Kabbalistic paths are active, connecting to ${Object.keys(sephiroth).length} sephiroth.`\n        };\n    }\n\n    analyzeChakraAlignment(cards) {\n        const chakras = { Root: 0, Sacral: 0, \"Solar Plexus\": 0, Heart: 0, Throat: 0, \"Third Eye\": 0, Crown: 0 };\n        \n        cards.forEach(card => {\n            Object.keys(this.chakraCorrespondences).forEach(chakra => {\n                if (this.chakraCorrespondences[chakra].some(c => card.name.includes(c))) {\n                    chakras[chakra]++;\n                }\n            });\n        });\n\n        return {\n            alignment: chakras,\n            interpretation: \"Chakra analysis shows energy distribution across your spiritual centers.\"\n        };\n    }\n\n    analyzeArchetypes(cards) {\n        return {\n            primary: \"Hero's Journey theme detected\",\n            mythological: \"Greek/Roman mythological influences\",\n            interpretation: \"Archetypal patterns suggest personal transformation journey.\"\n        };\n    }\n\n    analyzeTiming(cards) {\n        return {\n            seasonal: \"Spring energy - new beginnings\",\n            lunar: \"Waxing moon - growth phase\",\n            planetary: \"Mercury influence - communication focus\",\n            interpretation: \"Timing suggests favorable period for new ventures.\"\n        };\n    }\n\n    analyzeKarmicPattern(cards) {\n        return {\n            debts: \"Past relationship patterns need resolution\",\n            pastLife: \"Creative talents from previous incarnations\",\n            contracts: \"Soul agreements with close relationships\",\n            dharma: \"Teaching and healing path indicated\",\n            interpretation: \"Karmic patterns suggest completion of old cycles and beginning of new soul contracts.\"\n        };\n    }\n\n    // Deep Numerological Analysis\n    analyzeNumerology(cards) {\n        const numerologicalData = {\n            cardNumbers: [],\n            lifePath: 0,\n            masterNumbers: [],\n            repeatingPatterns: [],\n            pythagoreanAnalysis: {},\n            kabbalisticNumbers: [],\n            angelNumbers: [],\n            vibrationalFrequencies: {}\n        };\n\n        cards.forEach(card => {\n            if (card.number !== null) {\n                numerologicalData.cardNumbers.push(card.number);\n                \n                // Master numbers (11, 22, 33)\n                if ([11, 22, 33].includes(card.number)) {\n                    numerologicalData.masterNumbers.push({\n                        number: card.number,\n                        card: card.name,\n                        meaning: this.getMasterNumberMeaning(card.number)\n                    });\n                }\n            }\n        });\n\n        // Calculate life path from card positions\n        const sum = numerologicalData.cardNumbers.reduce((a, b) => a + b, 0);\n        numerologicalData.lifePath = this.reduceToSingleDigit(sum);\n\n        // Find repeating patterns\n        const numberCounts = {};\n        numerologicalData.cardNumbers.forEach(num => {\n            numberCounts[num] = (numberCounts[num] || 0) + 1;\n        });\n        \n        Object.entries(numberCounts).forEach(([num, count]) => {\n            if (count > 1) {\n                numerologicalData.repeatingPatterns.push({\n                    number: parseInt(num),\n                    frequency: count,\n                    meaning: this.getRepeatingNumberMeaning(parseInt(num), count)\n                });\n            }\n        });\n\n        // Pythagorean analysis\n        numerologicalData.pythagoreanAnalysis = {\n            soulUrge: this.calculateSoulUrge(cards),\n            expression: this.calculateExpression(cards),\n            personality: this.calculatePersonality(cards),\n            maturity: this.calculateMaturity(numerologicalData.lifePath)\n        };\n\n        // Angel numbers\n        const angelSequences = this.findAngelNumbers(numerologicalData.cardNumbers);\n        numerologicalData.angelNumbers = angelSequences;\n\n        // Vibrational frequencies\n        numerologicalData.vibrationalFrequencies = {\n            overall: this.calculateVibrationalFrequency(sum),\n            individual: cards.map(card => ({\n                card: card.name,\n                frequency: this.calculateVibrationalFrequency(card.number || 0)\n            }))\n        };\n\n        return {\n            ...numerologicalData,\n            interpretation: this.generateNumerologicalInterpretation(numerologicalData)\n        };\n    }\n\n    // Elemental Dignities Analysis\n    analyzeElementalDignities(cards) {\n        const dignities = {\n            strengtheningPairs: [],\n            weakeningPairs: [],\n            neutralPairs: [],\n            elementalFlow: [],\n            dominantElement: null,\n            missingElements: [],\n            elementalBalance: {}\n        };\n\n        // Analyze each card pair for elemental relationships\n        for (let i = 0; i < cards.length - 1; i++) {\n            for (let j = i + 1; j < cards.length; j++) {\n                const relationship = this.getElementalRelationship(\n                    cards[i].element, \n                    cards[j].element\n                );\n                \n                if (relationship.type === 'strengthening') {\n                    dignities.strengtheningPairs.push({\n                        cards: [cards[i].name, cards[j].name],\n                        elements: [cards[i].element, cards[j].element],\n                        effect: relationship.effect\n                    });\n                } else if (relationship.type === 'weakening') {\n                    dignities.weakeningPairs.push({\n                        cards: [cards[i].name, cards[j].name],\n                        elements: [cards[i].element, cards[j].element],\n                        effect: relationship.effect\n                    });\n                } else {\n                    dignities.neutralPairs.push({\n                        cards: [cards[i].name, cards[j].name],\n                        elements: [cards[i].element, cards[j].element],\n                        effect: relationship.effect\n                    });\n                }\n            }\n        }\n\n        // Analyze elemental flow through the reading\n        dignities.elementalFlow = cards.map((card, index) => ({\n            position: index + 1,\n            card: card.name,\n            element: card.element,\n            flowDirection: this.getElementalFlowDirection(card.element, cards[index + 1]?.element)\n        }));\n\n        // Count elements\n        const elementCounts = {};\n        cards.forEach(card => {\n            if (card.element) {\n                elementCounts[card.element] = (elementCounts[card.element] || 0) + 1;\n            }\n        });\n\n        dignities.elementalBalance = elementCounts;\n        dignities.dominantElement = Object.entries(elementCounts)\n            .sort(([,a], [,b]) => b - a)[0]?.[0];\n        \n        const allElements = ['Fire', 'Water', 'Air', 'Earth'];\n        dignities.missingElements = allElements.filter(el => !elementCounts[el]);\n\n        return {\n            ...dignities,\n            interpretation: this.generateElementalDignitiesInterpretation(dignities)\n        };\n    }\n\n    // Astrological Transits Analysis\n    analyzeAstrologicalTransits(cards) {\n        const currentDate = new Date();\n        const transits = {\n            currentPlanetaryPositions: this.getCurrentPlanetaryPositions(currentDate),\n            cardAstrology: [],\n            aspectPatterns: [],\n            retrogrades: [],\n            eclipseInfluence: null,\n            lunarPhase: this.calculateLunarPhase(currentDate),\n            zodiacalTiming: [],\n            planetaryHours: this.calculatePlanetaryHour(currentDate)\n        };\n\n        // Map card astrology\n        cards.forEach(card => {\n            if (card.astrology) {\n                transits.cardAstrology.push({\n                    card: card.name,\n                    astrological: card.astrology,\n                    currentTransit: this.getTransitInfluence(card.astrology, currentDate),\n                    aspectsFormed: this.calculateAspects(card.astrology, transits.currentPlanetaryPositions)\n                });\n            }\n        });\n\n        // Find aspect patterns (Grand Trine, T-Square, etc.)\n        transits.aspectPatterns = this.findAspectPatterns(transits.cardAstrology);\n\n        // Check for retrogrades\n        transits.retrogrades = this.getCurrentRetrogrades(currentDate);\n\n        // Eclipse influence\n        transits.eclipseInfluence = this.checkEclipseInfluence(currentDate);\n\n        // Zodiacal timing\n        transits.zodiacalTiming = this.calculateZodiacalTiming(cards, currentDate);\n\n        return {\n            ...transits,\n            interpretation: this.generateAstrologicalTransitsInterpretation(transits)\n        };\n    }\n\n    // Sacred Geometry Analysis\n    analyzeSacredGeometry(cards) {\n        const geometry = {\n            goldenRatio: [],\n            fibonacciSequence: [],\n            platonicSolids: [],\n            vesicaPiscis: [],\n            flowerOfLife: [],\n            metatronsCube: [],\n            sriYantra: [],\n            geometricPatterns: []\n        };\n\n        // Golden Ratio relationships\n        cards.forEach((card, index) => {\n            if (card.number) {\n                const phi = 1.618033988749895;\n                const ratioRelationships = [];\n                \n                cards.forEach((otherCard, otherIndex) => {\n                    if (otherCard.number && index !== otherIndex) {\n                        const ratio = card.number / otherCard.number;\n                        if (Math.abs(ratio - phi) < 0.1) {\n                            ratioRelationships.push({\n                                withCard: otherCard.name,\n                                ratio: ratio,\n                                significance: 'Divine proportion detected'\n                            });\n                        }\n                    }\n                });\n                \n                if (ratioRelationships.length > 0) {\n                    geometry.goldenRatio.push({\n                        card: card.name,\n                        relationships: ratioRelationships\n                    });\n                }\n            }\n        });\n\n        // Fibonacci sequence detection\n        const fibNumbers = [1, 1, 2, 3, 5, 8, 13, 21];\n        cards.forEach(card => {\n            if (card.number && fibNumbers.includes(card.number)) {\n                geometry.fibonacciSequence.push({\n                    card: card.name,\n                    number: card.number,\n                    position: fibNumbers.indexOf(card.number),\n                    meaning: this.getFibonacciMeaning(card.number)\n                });\n            }\n        });\n\n        // Platonic solids correspondences\n        geometry.platonicSolids = this.mapPlatonicSolids(cards);\n\n        // Vesica Piscis relationships (duality/unity)\n        geometry.vesicaPiscis = this.findVesicaPiscisPatterns(cards);\n\n        // Flower of Life connections\n        geometry.flowerOfLife = this.mapFlowerOfLife(cards);\n\n        // Metatron's Cube alignments\n        geometry.metatronsCube = this.analyzeMetatronsCube(cards);\n\n        // Sri Yantra correspondences\n        geometry.sriYantra = this.mapSriYantra(cards);\n\n        // Overall geometric patterns\n        geometry.geometricPatterns = this.identifyGeometricPatterns(cards);\n\n        return {\n            ...geometry,\n            interpretation: this.generateSacredGeometryInterpretation(geometry)\n        };\n    }\n\n    // Deep Symbolism Analysis\n    analyzeDeepSymbolism(cards) {\n        const symbolism = {\n            archetypicalSymbols: [],\n            colorSymbolism: [],\n            animalSymbolism: [],\n            plantSymbolism: [],\n            mineralSymbolism: [],\n            celestialSymbolism: [],\n            alchemicalSymbols: [],\n            religiousSymbols: [],\n            mythologicalSymbols: [],\n            geometricSymbols: [],\n            elementalSymbols: [],\n            toolsAndObjects: []\n        };\n\n        cards.forEach(card => {\n            // Extract symbols from card (this would be enhanced with actual card data)\n            const cardSymbols = this.extractCardSymbols(card);\n            \n            // Categorize symbols\n            symbolism.archetypicalSymbols.push(...cardSymbols.archetypal.map(s => ({\n                card: card.name,\n                symbol: s,\n                meaning: this.getArchetypicalSymbolMeaning(s),\n                jungianConnection: this.getJungianSymbolConnection(s)\n            })));\n\n            symbolism.colorSymbolism.push(...cardSymbols.colors.map(c => ({\n                card: card.name,\n                color: c,\n                meaning: this.getColorSymbolism(c),\n                chakraConnection: this.getColorChakraConnection(c),\n                emotionalResonance: this.getColorEmotionalResonance(c)\n            })));\n\n            symbolism.animalSymbolism.push(...cardSymbols.animals.map(a => ({\n                card: card.name,\n                animal: a,\n                totemMeaning: this.getAnimalTotemMeaning(a),\n                shamaniConnection: this.getShamanicAnimalMeaning(a)\n            })));\n\n            // Continue for other symbol categories...\n        });\n\n        return {\n            ...symbolism,\n            symbolPatterns: this.analyzeSymbolPatterns(symbolism),\n            dominantThemes: this.extractDominantSymbolicThemes(symbolism),\n            interpretation: this.generateDeepSymbolismInterpretation(symbolism)\n        };\n    }\n\n    // Card Interactions Analysis\n    analyzeCardInteractions(cards) {\n        const interactions = {\n            directConnections: [],\n            mirrorPairs: [],\n            numericalSequences: [],\n            suitProgressions: [],\n            courtCardDynamics: [],\n            majorMinorInterplay: [],\n            cardClusters: [],\n            energyFlows: [],\n            narrativeThreads: []\n        };\n\n        // Direct connections between adjacent cards\n        for (let i = 0; i < cards.length - 1; i++) {\n            interactions.directConnections.push({\n                from: cards[i].name,\n                to: cards[i + 1].name,\n                connectionType: this.getConnectionType(cards[i], cards[i + 1]),\n                energyExchange: this.analyzeEnergyExchange(cards[i], cards[i + 1]),\n                narrative: this.createNarrativeLink(cards[i], cards[i + 1])\n            });\n        }\n\n        // Mirror pairs (cards that reflect each other)\n        interactions.mirrorPairs = this.findMirrorPairs(cards);\n\n        // Numerical sequences\n        interactions.numericalSequences = this.findNumericalSequences(cards);\n\n        // Suit progressions\n        interactions.suitProgressions = this.analyzeSuitProgressions(cards);\n\n        // Court card dynamics\n        const courtCards = cards.filter(c => ['Page', 'Knight', 'Queen', 'King'].some(rank => c.name.includes(rank)));\n        if (courtCards.length > 1) {\n            interactions.courtCardDynamics = this.analyzeCourtCardDynamics(courtCards);\n        }\n\n        // Major/Minor arcana interplay\n        interactions.majorMinorInterplay = this.analyzeMajorMinorInterplay(cards);\n\n        // Card clusters (groups that work together)\n        interactions.cardClusters = this.identifyCardClusters(cards);\n\n        // Energy flows\n        interactions.energyFlows = this.mapEnergyFlows(cards);\n\n        // Narrative threads\n        interactions.narrativeThreads = this.weaveNarrativeThreads(cards);\n\n        return {\n            ...interactions,\n            interpretation: this.generateCardInteractionsInterpretation(interactions)\n        };\n    }\n\n    // Shadow Work Analysis\n    analyzeShadowWork(cards) {\n        const shadow = {\n            shadowAspects: [],\n            projections: [],\n            repressions: [],\n            denials: [],\n            integrationOpportunities: [],\n            shadowGifts: [],\n            collectiveUnconscious: [],\n            personalUnconscious: [],\n            animaAnimus: [],\n            innerChild: []\n        };\n\n        cards.forEach(card => {\n            // Identify shadow aspects\n            if (card.isReversed || this.isShadowCard(card)) {\n                shadow.shadowAspects.push({\n                    card: card.name,\n                    shadowManifestation: this.getShadowManifestation(card),\n                    underlyingFear: this.getUnderlyingFear(card),\n                    defenseMechanism: this.getDefenseMechanism(card)\n                });\n            }\n\n            // Projections\n            const projections = this.identifyProjections(card);\n            if (projections.length > 0) {\n                shadow.projections.push({\n                    card: card.name,\n                    projectedQualities: projections,\n                    integrationPath: this.getIntegrationPath(projections)\n                });\n            }\n\n            // Anima/Animus work\n            const animaAnimus = this.identifyAnimaAnimus(card);\n            if (animaAnimus) {\n                shadow.animaAnimus.push({\n                    card: card.name,\n                    aspect: animaAnimus,\n                    integrationMessage: this.getAnimaAnimusIntegration(animaAnimus)\n                });\n            }\n        });\n\n        // Collective unconscious patterns\n        shadow.collectiveUnconscious = this.identifyCollectivePatterns(cards);\n\n        // Personal unconscious material\n        shadow.personalUnconscious = this.identifyPersonalUnconsciousMaterial(cards);\n\n        // Inner child work\n        shadow.innerChild = this.identifyInnerChildThemes(cards);\n\n        // Integration opportunities\n        shadow.integrationOpportunities = this.mapIntegrationOpportunities(shadow);\n\n        // Shadow gifts\n        shadow.shadowGifts = this.identifyShadowGifts(shadow);\n\n        return {\n            ...shadow,\n            interpretation: this.generateShadowWorkInterpretation(shadow)\n        };\n    }\n\n    // Alchemical Process Analysis\n    analyzeAlchemicalProcess(cards) {\n        const alchemy = {\n            currentStage: null,\n            nigrido: [],\n            albedo: [],\n            citrinitas: [],\n            rubedo: [],\n            primaMateria: [],\n            philosophersStone: [],\n            operations: [],\n            elements: [],\n            metals: [],\n            transformation: []\n        };\n\n        // Map cards to alchemical stages\n        cards.forEach(card => {\n            const stage = this.getAlchemicalStage(card);\n            \n            switch(stage) {\n                case 'nigredo':\n                    alchemy.nigrido.push({\n                        card: card.name,\n                        process: 'Blackening/Decomposition',\n                        meaning: this.getNigredoMeaning(card)\n                    });\n                    break;\n                case 'albedo':\n                    alchemy.albedo.push({\n                        card: card.name,\n                        process: 'Whitening/Purification',\n                        meaning: this.getAlbedoMeaning(card)\n                    });\n                    break;\n                case 'citrinitas':\n                    alchemy.citrinitas.push({\n                        card: card.name,\n                        process: 'Yellowing/Solar Work',\n                        meaning: this.getCitrinitasMeaning(card)\n                    });\n                    break;\n                case 'rubedo':\n                    alchemy.rubedo.push({\n                        card: card.name,\n                        process: 'Reddening/Final Work',\n                        meaning: this.getRubedoMeaning(card)\n                    });\n                    break;\n            }\n        });\n\n        // Determine current alchemical stage\n        alchemy.currentStage = this.determineCurrentAlchemicalStage(alchemy);\n\n        // Prima materia (raw material)\n        alchemy.primaMateria = this.identifyPrimaMateria(cards);\n\n        // Philosopher's Stone indicators\n        alchemy.philosophersStone = this.identifyPhilosophersStone(cards);\n\n        // Alchemical operations\n        alchemy.operations = this.mapAlchemicalOperations(cards);\n\n        // Elemental transformation\n        alchemy.elements = this.mapElementalTransformation(cards);\n\n        // Metallic correspondences\n        alchemy.metals = this.mapMetallicCorrespondences(cards);\n\n        // Overall transformation process\n        alchemy.transformation = this.mapTransformationProcess(cards);\n\n        return {\n            ...alchemy,\n            interpretation: this.generateAlchemicalInterpretation(alchemy)\n        };\n    }\n\n    // Mythological Patterns Analysis\n    analyzeMythologicalPatterns(cards) {\n        const mythology = {\n            heroJourney: [],\n            goddessArchetypes: [],\n            godArchetypes: [],\n            mythicalCreatures: [],\n            culturalMythologies: {\n                greek: [],\n                egyptian: [],\n                norse: [],\n                celtic: [],\n                hindu: [],\n                chinese: [],\n                native: []\n            },\n            creationMyths: [],\n            underworldJourneys: [],\n            sacredMarriage: [],\n            cosmicCycles: []\n        };\n\n        // Hero's Journey mapping\n        mythology.heroJourney = this.mapHerosJourney(cards);\n\n        // Goddess and God archetypes\n        cards.forEach(card => {\n            const goddessArchetype = this.identifyGoddessArchetype(card);\n            if (goddessArchetype) {\n                mythology.goddessArchetypes.push({\n                    card: card.name,\n                    goddess: goddessArchetype,\n                    attributes: this.getGoddessAttributes(goddessArchetype),\n                    mythology: this.getGoddessMythology(goddessArchetype)\n                });\n            }\n\n            const godArchetype = this.identifyGodArchetype(card);\n            if (godArchetype) {\n                mythology.godArchetypes.push({\n                    card: card.name,\n                    god: godArchetype,\n                    attributes: this.getGodAttributes(godArchetype),\n                    mythology: this.getGodMythology(godArchetype)\n                });\n            }\n        });\n\n        // Cultural mythologies\n        Object.keys(mythology.culturalMythologies).forEach(culture => {\n            mythology.culturalMythologies[culture] = this.mapCulturalMythology(cards, culture);\n        });\n\n        // Creation myth patterns\n        mythology.creationMyths = this.identifyCreationMythPatterns(cards);\n\n        // Underworld journey patterns\n        mythology.underworldJourneys = this.identifyUnderworldPatterns(cards);\n\n        // Sacred marriage (hieros gamos)\n        mythology.sacredMarriage = this.identifySacredMarriagePatterns(cards);\n\n        // Cosmic cycles\n        mythology.cosmicCycles = this.identifyCosmicCycles(cards);\n\n        return {\n            ...mythology,\n            interpretation: this.generateMythologicalInterpretation(mythology)\n        };\n    }\n\n    // Quantum Field Analysis\n    analyzeQuantumFieldInfluence(cards) {\n        const quantum = {\n            fieldCoherence: 0,\n            entanglements: [],\n            superpositions: [],\n            collapsePoints: [],\n            observerEffect: [],\n            nonLocality: [],\n            synchronicities: [],\n            probabilityFields: [],\n            waveFunction: [],\n            quantumLeaps: []\n        };\n\n        // Field coherence measurement\n        quantum.fieldCoherence = this.calculateFieldCoherence(cards);\n\n        // Quantum entanglements between cards\n        for (let i = 0; i < cards.length; i++) {\n            for (let j = i + 1; j < cards.length; j++) {\n                const entanglement = this.checkQuantumEntanglement(cards[i], cards[j]);\n                if (entanglement.strength > 0.7) {\n                    quantum.entanglements.push({\n                        cards: [cards[i].name, cards[j].name],\n                        strength: entanglement.strength,\n                        type: entanglement.type,\n                        influence: entanglement.influence\n                    });\n                }\n            }\n        }\n\n        // Superposition states\n        quantum.superpositions = cards.map(card => ({\n            card: card.name,\n            potentialStates: this.identifySuperpositionStates(card),\n            probability: this.calculateStateProbability(card)\n        }));\n\n        // Collapse points (decision nodes)\n        quantum.collapsePoints = this.identifyCollapsePoints(cards);\n\n        // Observer effect\n        quantum.observerEffect = this.analyzeObserverEffect(cards);\n\n        // Non-locality connections\n        quantum.nonLocality = this.mapNonLocalConnections(cards);\n\n        // Synchronicities\n        quantum.synchronicities = this.identifySynchronicities(cards);\n\n        // Probability fields\n        quantum.probabilityFields = this.mapProbabilityFields(cards);\n\n        // Wave function\n        quantum.waveFunction = this.calculateWaveFunction(cards);\n\n        // Quantum leaps\n        quantum.quantumLeaps = this.identifyQuantumLeaps(cards);\n\n        return {\n            ...quantum,\n            interpretation: this.generateQuantumFieldInterpretation(quantum)\n        };\n    }\n\n    // Helper methods for all the new analyses\n    getMasterNumberMeaning(number) {\n        const meanings = {\n            11: \"Master Teacher - Spiritual insight and intuition\",\n            22: \"Master Builder - Manifesting dreams into reality\",\n            33: \"Master Teacher of Love - Compassionate service\"\n        };\n        return meanings[number] || \"Unknown master number\";\n    }\n\n    reduceToSingleDigit(num) {\n        while (num > 9 && num !== 11 && num !== 22 && num !== 33) {\n            num = num.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b), 0);\n        }\n        return num;\n    }\n\n    getRepeatingNumberMeaning(number, frequency) {\n        const baseMessage = {\n            1: \"New beginnings and leadership\",\n            2: \"Balance and partnerships\",\n            3: \"Creativity and communication\",\n            4: \"Stability and foundation\",\n            5: \"Change and freedom\",\n            6: \"Nurturing and responsibility\",\n            7: \"Spirituality and introspection\",\n            8: \"Material mastery and power\",\n            9: \"Completion and wisdom\"\n        };\n        return `${baseMessage[number] || 'Unknown'} - Amplified ${frequency}x for emphasis`;\n    }\n\n    calculateSoulUrge(cards) {\n        // Complex calculation based on card positions and meanings\n        return this.reduceToSingleDigit(\n            cards.reduce((sum, card, index) => sum + (card.number || 0) * (index + 1), 0)\n        );\n    }\n\n    calculateExpression(cards) {\n        return this.reduceToSingleDigit(\n            cards.reduce((sum, card) => sum + (card.name.length || 0), 0)\n        );\n    }\n\n    calculatePersonality(cards) {\n        return this.reduceToSingleDigit(\n            cards.filter(c => c.suit === 'Major Arcana').length * 11\n        );\n    }\n\n    calculateMaturity(lifePath) {\n        return this.reduceToSingleDigit(lifePath + 9);\n    }\n\n    findAngelNumbers(numbers) {\n        const angelNumbers = [];\n        const sequences = ['111', '222', '333', '444', '555', '666', '777', '888', '999'];\n        const numString = numbers.join('');\n        \n        sequences.forEach(seq => {\n            if (numString.includes(seq.substring(0, 2))) {\n                angelNumbers.push({\n                    sequence: seq,\n                    meaning: this.getAngelNumberMeaning(seq)\n                });\n            }\n        });\n        \n        return angelNumbers;\n    }\n\n    getAngelNumberMeaning(sequence) {\n        const meanings = {\n            '111': \"Manifestation portal - thoughts becoming reality\",\n            '222': \"Balance and faith - trust the process\",\n            '333': \"Ascended masters support - spiritual alignment\",\n            '444': \"Angels surrounding you - protection and guidance\",\n            '555': \"Major changes coming - embrace transformation\",\n            '666': \"Rebalance thoughts - focus on spiritual not material\",\n            '777': \"On the right path - spiritual awakening\",\n            '888': \"Abundance flowing - material and spiritual wealth\",\n            '999': \"Completion of cycle - prepare for new beginnings\"\n        };\n        return meanings[sequence] || \"Angelic guidance present\";\n    }\n\n    calculateVibrationalFrequency(number) {\n        // Based on Pythagorean numerology vibrations\n        const baseFreq = 432; // Hz - universal frequency\n        return baseFreq * Math.pow(2, (number - 1) / 12);\n    }\n\n    generateNumerologicalInterpretation(data) {\n        let interpretation = `Your reading vibrates at a Life Path ${data.lifePath}, `;\n        interpretation += `indicating ${this.getLifePathMeaning(data.lifePath)}. `;\n        \n        if (data.masterNumbers.length > 0) {\n            interpretation += `\\n\\nMaster Numbers present: ${data.masterNumbers.map(m => m.number).join(', ')} - `;\n            interpretation += `These indicate heightened spiritual potential and responsibility. `;\n        }\n        \n        if (data.repeatingPatterns.length > 0) {\n            interpretation += `\\n\\nRepeating patterns emphasize: ${data.repeatingPatterns.map(p => p.meaning).join('; ')}. `;\n        }\n        \n        interpretation += `\\n\\nPythagorean Analysis:\\n`;\n        interpretation += `- Soul Urge: ${data.pythagoreanAnalysis.soulUrge} - Your heart's deepest desires\\n`;\n        interpretation += `- Expression: ${data.pythagoreanAnalysis.expression} - How you express yourself to the world\\n`;\n        interpretation += `- Personality: ${data.pythagoreanAnalysis.personality} - How others perceive you\\n`;\n        interpretation += `- Maturity: ${data.pythagoreanAnalysis.maturity} - Your evolved spiritual state\\n`;\n        \n        if (data.angelNumbers.length > 0) {\n            interpretation += `\\n\\nAngelic Messages: ${data.angelNumbers.map(a => a.meaning).join('; ')}`;\n        }\n        \n        interpretation += `\\n\\nOverall vibrational frequency: ${data.vibrationalFrequencies.overall.toFixed(2)} Hz`;\n        \n        return interpretation;\n    }\n\n    getLifePathMeaning(number) {\n        const meanings = {\n            1: \"Independent leader and pioneer\",\n            2: \"Cooperative peacemaker and diplomat\",\n            3: \"Creative communicator and entertainer\",\n            4: \"Practical builder and organizer\",\n            5: \"Freedom-seeking adventurer\",\n            6: \"Nurturing teacher and healer\",\n            7: \"Spiritual seeker and analyst\",\n            8: \"Material master and achiever\",\n            9: \"Humanitarian and wisdom keeper\",\n            11: \"Intuitive illuminator\",\n            22: \"Master manifestor\",\n            33: \"Master teacher\"\n        };\n        return meanings[number] || \"Unique path of discovery\";\n    }\n\n    getElementalRelationship(element1, element2) {\n        if (!element1 || !element2) return { type: 'neutral', effect: 'No elemental interaction' };\n        \n        const relationships = {\n            'Fire': {\n                'Fire': { type: 'strengthening', effect: 'Intensified passion and energy' },\n                'Water': { type: 'weakening', effect: 'Steam and conflict - transformation through tension' },\n                'Air': { type: 'strengthening', effect: 'Fed flames - increased inspiration' },\n                'Earth': { type: 'neutral', effect: 'Controlled burn - practical application of passion' }\n            },\n            'Water': {\n                'Fire': { type: 'weakening', effect: 'Emotional quenching of passion' },\n                'Water': { type: 'strengthening', effect: 'Deep emotional flow and intuition' },\n                'Air': { type: 'neutral', effect: 'Emotional communication and expression' },\n                'Earth': { type: 'strengthening', effect: 'Fertile growth - emotional grounding' }\n            },\n            'Air': {\n                'Fire': { type: 'strengthening', effect: 'Inspired action and communication' },\n                'Water': { type: 'neutral', effect: 'Emotional intelligence and understanding' },\n                'Air': { type: 'strengthening', effect: 'Enhanced mental clarity and communication' },\n                'Earth': { type: 'weakening', effect: 'Scattered energy - need for grounding' }\n            },\n            'Earth': {\n                'Fire': { type: 'neutral', effect: 'Grounded passion - sustainable action' },\n                'Water': { type: 'strengthening', effect: 'Nourished growth and emotional stability' },\n                'Air': { type: 'weakening', effect: 'Disrupted stability - need for focus' },\n                'Earth': { type: 'strengthening', effect: 'Solid foundation and material success' }\n            }\n        };\n        \n        return relationships[element1]?.[element2] || { type: 'neutral', effect: 'Unique elemental combination' };\n    }\n\n    getElementalFlowDirection(current, next) {\n        if (!current || !next) return 'terminus';\n        \n        const generativeFlow = {\n            'Earth': 'Fire',\n            'Fire': 'Air',\n            'Air': 'Water',\n            'Water': 'Earth'\n        };\n        \n        const destructiveFlow = {\n            'Earth': 'Water',\n            'Water': 'Fire',\n            'Fire': 'Earth',\n            'Air': 'Earth'\n        };\n        \n        if (generativeFlow[current] === next) return 'generative';\n        if (destructiveFlow[current] === next) return 'destructive';\n        return 'neutral';\n    }\n\n    generateElementalDignitiesInterpretation(dignities) {\n        let interpretation = `Elemental Analysis reveals ${dignities.dominantElement || 'balanced'} energy dominating this reading.\\n\\n`;\n        \n        if (dignities.strengtheningPairs.length > 0) {\n            interpretation += `Strengthening Combinations:\\n`;\n            dignities.strengtheningPairs.forEach(pair => {\n                interpretation += `- ${pair.cards[0]} + ${pair.cards[1]}: ${pair.effect}\\n`;\n            });\n        }\n        \n        if (dignities.weakeningPairs.length > 0) {\n            interpretation += `\\nChallenging Combinations:\\n`;\n            dignities.weakeningPairs.forEach(pair => {\n                interpretation += `- ${pair.cards[0]} + ${pair.cards[1]}: ${pair.effect}\\n`;\n            });\n        }\n        \n        if (dignities.missingElements.length > 0) {\n            interpretation += `\\nMissing Elements: ${dignities.missingElements.join(', ')}\\n`;\n            interpretation += `Consider incorporating ${dignities.missingElements[0]} energy through `;\n            interpretation += this.getElementalRemedies(dignities.missingElements[0]);\n        }\n        \n        interpretation += `\\n\\nElemental Flow Pattern: `;\n        const flowTypes = dignities.elementalFlow.map(f => f.flowDirection);\n        if (flowTypes.includes('generative')) {\n            interpretation += `Creative and generative energy building throughout the reading. `;\n        }\n        if (flowTypes.includes('destructive')) {\n            interpretation += `Transformative tensions creating necessary change. `;\n        }\n        \n        return interpretation;\n    }\n\n    getElementalRemedies(element) {\n        const remedies = {\n            'Fire': \"physical activity, creative projects, or candle meditation\",\n            'Water': \"emotional expression, water rituals, or moon gazing\",\n            'Air': \"breathwork, journaling, or intellectual pursuits\",\n            'Earth': \"grounding exercises, nature walks, or crystal work\"\n        };\n        return remedies[element] || \"elemental balancing practices\";\n    }\n\n    // Continue with more helper methods...\n    getCurrentPlanetaryPositions(date) {\n        // Simplified planetary positions - in real implementation would use ephemeris\n        return {\n            sun: { sign: 'Scorpio', degree: 15 },\n            moon: { sign: 'Cancer', degree: 22 },\n            mercury: { sign: 'Scorpio', degree: 8, retrograde: false },\n            venus: { sign: 'Libra', degree: 28 },\n            mars: { sign: 'Sagittarius', degree: 3 },\n            jupiter: { sign: 'Pisces', degree: 12 },\n            saturn: { sign: 'Aquarius', degree: 18 },\n            uranus: { sign: 'Taurus', degree: 9, retrograde: true },\n            neptune: { sign: 'Pisces', degree: 22 },\n            pluto: { sign: 'Capricorn', degree: 26 }\n        };\n    }\n\n    calculateLunarPhase(date) {\n        // Simplified lunar phase calculation\n        const moonCycle = 29.53059;\n        const knownNewMoon = new Date('2000-01-06');\n        const daysSince = (date - knownNewMoon) / (1000 * 60 * 60 * 24);\n        const phase = (daysSince % moonCycle) / moonCycle;\n        \n        if (phase < 0.0625) return 'New Moon';\n        if (phase < 0.1875) return 'Waxing Crescent';\n        if (phase < 0.3125) return 'First Quarter';\n        if (phase < 0.4375) return 'Waxing Gibbous';\n        if (phase < 0.5625) return 'Full Moon';\n        if (phase < 0.6875) return 'Waning Gibbous';\n        if (phase < 0.8125) return 'Last Quarter';\n        return 'Waning Crescent';\n    }\n\n    calculatePlanetaryHour(date) {\n        const days = ['Sun', 'Moon', 'Mars', 'Mercury', 'Jupiter', 'Venus', 'Saturn'];\n        const dayOfWeek = date.getDay();\n        const hour = date.getHours();\n        const planetaryHourIndex = (dayOfWeek * 24 + hour) % 7;\n        return days[planetaryHourIndex];\n    }\n\n    // Add all other helper methods...\n    // (Due to length constraints, I'll provide a structured outline of remaining methods)\n\n    // Sacred Geometry Helpers\n    getFibonacciMeaning(number) {\n        const meanings = {\n            1: \"Unity and beginning\",\n            2: \"Duality and choice\",\n            3: \"Trinity and synthesis\",\n            5: \"Golden ratio approaching - natural harmony\",\n            8: \"Infinity turned upright - material mastery\",\n            13: \"Death and rebirth - transformation\",\n            21: \"The World - completion of great work\"\n        };\n        return meanings[number] || \"Sacred proportion\";\n    }\n\n    // Symbol Analysis Helpers\n    extractCardSymbols(card) {\n        // This would analyze actual card imagery\n        return {\n            archetypal: ['crown', 'sword', 'cup'],\n            colors: ['red', 'blue', 'gold'],\n            animals: ['lion', 'eagle'],\n            plants: ['rose', 'lily'],\n            celestial: ['sun', 'moon', 'stars'],\n            geometric: ['circle', 'triangle', 'square']\n        };\n    }\n\n    // Quantum Field Helpers\n    calculateFieldCoherence(cards) {\n        // Calculate overall energetic coherence\n        let coherence = 0;\n        cards.forEach((card, i) => {\n            if (i > 0) {\n                const prev = cards[i-1];\n                if (card.suit === prev.suit) coherence += 0.2;\n                if (Math.abs((card.number || 0) - (prev.number || 0)) === 1) coherence += 0.15;\n                if (card.element === prev.element) coherence += 0.1;\n            }\n        });\n        return Math.min(coherence, 1.0);\n    }\n\n    checkQuantumEntanglement(card1, card2) {\n        let strength = 0;\n        let type = 'unknown';\n        let influence = 'neutral';\n        \n        // Check various entanglement factors\n        if (card1.number === card2.number) {\n            strength += 0.3;\n            type = 'numerical';\n        }\n        if (card1.suit === card2.suit) {\n            strength += 0.25;\n            type = type === 'numerical' ? 'compound' : 'elemental';\n        }\n        if (card1.element === card2.element) {\n            strength += 0.2;\n        }\n        \n        // Check for complementary opposites\n        if ((card1.number + card2.number) === 21) {\n            strength += 0.35;\n            type = 'complementary';\n            influence = 'balancing';\n        }\n        \n        return { strength, type, influence };\n    }\n\n    // Integration method generators\n    generateAstrologicalTransitsInterpretation(transits) {\n        let interpretation = `Current Astrological Climate:\\n`;\n        interpretation += `Lunar Phase: ${transits.lunarPhase} - ${this.getLunarPhaseInfluence(transits.lunarPhase)}\\n`;\n        interpretation += `Planetary Hour: ${transits.planetaryHours} hour - Favorable for ${this.getPlanetaryHourActivities(transits.planetaryHours)}\\n\\n`;\n        \n        if (transits.retrogrades.length > 0) {\n            interpretation += `Retrograde Influences: ${transits.retrogrades.join(', ')} - Time for review and revision\\n\\n`;\n        }\n        \n        interpretation += `Card-Transit Interactions:\\n`;\n        transits.cardAstrology.forEach(ct => {\n            interpretation += `- ${ct.card} (${ct.astrological}): ${ct.currentTransit}\\n`;\n        });\n        \n        return interpretation;\n    }\n\n    getLunarPhaseInfluence(phase) {\n        const influences = {\n            'New Moon': 'Ideal for new beginnings and setting intentions',\n            'Waxing Crescent': 'Building energy, taking first actions',\n            'First Quarter': 'Overcoming challenges, making decisions',\n            'Waxing Gibbous': 'Refinement and adjustment of plans',\n            'Full Moon': 'Culmination, revelation, and release',\n            'Waning Gibbous': 'Gratitude and sharing wisdom',\n            'Last Quarter': 'Release and forgiveness',\n            'Waning Crescent': 'Rest and spiritual reflection'\n        };\n        return influences[phase] || 'Unique lunar influence';\n    }\n\n    getPlanetaryHourActivities(planet) {\n        const activities = {\n            'Sun': 'leadership, vitality, and self-expression',\n            'Moon': 'intuition, emotions, and domestic matters',\n            'Mars': 'action, courage, and competition',\n            'Mercury': 'communication, learning, and travel',\n            'Jupiter': 'expansion, luck, and philosophical pursuits',\n            'Venus': 'love, beauty, and artistic endeavors',\n            'Saturn': 'discipline, structure, and long-term planning'\n        };\n        return activities[planet] || 'varied activities';\n    }\n}","mtime":1753003800243.4512,"doc":"Advanced Tarot Analysis Engine References: \"Tarot and Psychology\" by Arthur Rosengarten, \"The Qabalistic Tarot\" by Robert Wang","isExported":false,"methods":["bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5","bWV0aG9kLUFuYWx5"],"properties":["cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h","cHJvcGVydHktQW5h"],"embedding":[-0.07497843354940414,0.0802576020359993,-0.0944666713476181,-0.021906377747654915,-0.03551933169364929,-0.02151758410036564,0.007669204380363226,-0.014070953242480755,-0.07734513282775879,-0.03660118952393532,-0.011075295507907867,-0.025263359770178795,-0.01587691716849804,-0.06384493410587311,-0.06755466014146805,0.04592446982860565,-0.06456192582845688,0.020498797297477722,0.05182633548974991,-0.05961192399263382,0.02881602570414543,0.016010519117116928,0.07650264352560043,-0.011745083145797253,-0.03561168909072876,0.02519329823553562,-0.005568488501012325,0.028483910486102104,0.05800207704305649,-0.0681733787059784,-0.03933786600828171,0.08122017234563828,-0.024260682985186577,0.017156163230538368,-0.058879304677248,0.12027513235807419,0.01489061489701271,0.10725721716880798,0.00886197853833437,0.05284646153450012,-0.040038589388132095,0.013579130172729492,-0.04262840747833252,0.010766995139420033,-0.016506588086485863,-0.0888826847076416,-0.04661326855421066,-0.04422252997756004,-0.0446297824382782,-0.08863873779773712,-0.15866191685199738,-0.0031397074926644564,-0.02598239667713642,0.03577659651637077,0.011832059361040592,-0.03902200981974602,0.060009948909282684,-0.01707250252366066,-0.05558260902762413,-0.028801901265978813,0.023587871342897415,0.06449629366397858,-0.011457131244242191,0.06956461071968079,0.05794639140367508,0.02017921395599842,-0.000712621200364083,0.06795813888311386,0.030854783952236176,-0.03533243387937546,-0.08258821815252304,-0.0718957856297493,-0.021496744826436043,0.03225718066096306,0.0038016950711607933,0.07286471128463745,-0.0159104373306036,0.07502736151218414,0.026014966890215874,-0.10724659264087677,-0.07027945667505264,-0.017410175874829292,0.08665776252746582,-0.003546637948602438,-0.0076961214654147625,0.05817948654294014,0.018535122275352478,-0.022336626425385475,0.09703068435192108,0.0509045235812664,0.044208865612745285,0.007252787705510855,-0.015691066160798073,0.05256721377372742,0.06745404005050659,-0.006449168082326651,0.042119357734918594,-0.06528010964393616,0.022120432928204536,0.05808550491929054,-0.021687939763069153,-0.0073666442185640335,0.0009621859062463045,0.009316668845713139,0.009010576643049717,-0.09507011622190475,0.05116327106952667,-0.051498278975486755,-0.01953176222741604,-0.041390128433704376,-0.020255163311958313,-0.050108250230550766,-0.04909645766019821,-0.06209670379757881,0.07170111685991287,-0.05826273187994957,-0.03298190236091614,0.037663064897060394,0.017717665061354637,0.04776635020971298,0.060073938220739365,0.011933388188481331,0.039032477885484695,-0.020282218232750893,-0.017363160848617554,-0.017853010445833206,-0.14628489315509796,2.266901733639418e-33,0.055735424160957336,-0.03786606714129448,-0.02847730740904808,0.04051613435149193,-0.007377087138593197,-0.01885763369500637,-0.03670549392700195,-0.0002274267899338156,-0.049124062061309814,0.05987176299095154,0.020443391054868698,0.09328331798315048,-0.05606687813997269,0.08532729744911194,-0.04396267235279083,0.02393040806055069,-0.06752099841833115,0.031750429421663284,-0.038018763065338135,-0.1177210584282875,0.02062733843922615,0.06817424297332764,0.021227510645985603,-0.070420041680336,-0.018829040229320526,0.14113740622997284,0.03372699394822121,0.018001239746809006,-0.004730604123324156,0.07891657948493958,-0.007002847734838724,-0.045555368065834045,-0.04625064879655838,-0.08219518512487411,0.020685303956270218,0.06436988711357117,-0.015972230583429337,-0.006839541718363762,-0.007424738258123398,-0.015145105309784412,0.013237101025879383,-0.04244853928685188,0.015548890456557274,-0.07436271011829376,-0.0169970840215683,0.0077453553676605225,-0.012285037897527218,-0.019241860136389732,0.06483972817659378,0.029434608295559883,-0.1153770163655281,-0.024343401193618774,0.06101612746715546,0.04147375002503395,-0.06525454670190811,-0.002908924128860235,0.02476138435304165,0.04404464364051819,-0.01723562739789486,0.0007680747075937688,-0.041564397513866425,0.10546883940696716,-0.003556235693395138,-0.04901754856109619,-0.020753709599375725,-0.08860354125499725,-0.07004551589488983,-0.022001374512910843,0.04292915761470795,0.03327785059809685,-0.014272330328822136,0.029236799106001854,0.01984371244907379,0.09006743878126144,0.05231349915266037,-0.059681836515665054,-0.03380143642425537,-0.01692061685025692,-0.09562046080827713,-0.029673965647816658,-0.06583691388368607,-0.02009350247681141,-0.0148981474339962,-0.06737594306468964,-0.08610493689775467,-0.023551935330033302,0.047237928956747055,-0.011687124148011208,-0.05137838050723076,0.01301373541355133,-0.08315212279558182,0.048934128135442734,0.009241356514394283,0.025591900572180748,-0.02722407504916191,-5.249535896213618e-33,0.045370813459157944,-0.053562600165605545,-0.031516775488853455,0.020986635237932205,0.031231630593538284,-0.0012336011277511716,-0.0016204176936298609,0.02777954749763012,-0.014157277531921864,-0.006089155562222004,-0.015098806470632553,0.02853737771511078,0.1152539923787117,0.03447065129876137,0.08795567601919174,-0.06921259313821793,-0.0599268339574337,-0.12605547904968262,0.011402497068047523,0.1188335120677948,0.009834944270551205,0.05403910577297211,-0.10610862821340561,0.00023637803678866476,-0.029734384268522263,0.005905611906200647,0.035020627081394196,0.004513871856033802,-0.006254211068153381,-0.006974922027438879,0.04416189342737198,-0.02469181828200817,-0.025100693106651306,-0.05997540056705475,-0.04871748760342598,0.01228383183479309,0.10234744846820831,-0.08032044768333435,-0.022845275700092316,-0.009866965934634209,0.0603107325732708,0.006875688675791025,-0.06742796301841736,-0.08461920917034149,0.05447736009955406,-0.012424257583916187,-0.013534064404666424,0.03908504545688629,-0.023043954744935036,-0.013730695471167564,0.056977689266204834,0.007456724066287279,0.007232790347188711,-0.046754203736782074,0.03857436031103134,-0.026741039007902145,0.005958531517535448,0.00960311759263277,-0.04249710589647293,0.14359472692012787,-0.015416219830513,-0.024971015751361847,-0.05839047208428383,0.02777760475873947,-0.03722259774804115,-0.00844493042677641,-0.07389426976442337,0.01775023713707924,-0.022057680413126945,-0.020864855498075485,0.04996039345860481,0.09396149218082428,-0.06079121306538582,0.00969742238521576,0.011128686368465424,-0.00928710587322712,0.023165734484791756,0.01064240001142025,0.07443930208683014,-0.07738116383552551,0.05802313983440399,-0.03434888273477554,0.04894305020570755,0.0319601409137249,0.0005444552516564727,-0.02233126387000084,0.003373644780367613,-0.01269677933305502,-0.03765976428985596,-0.0153672369197011,-0.02131117321550846,-0.028807494789361954,-0.07540024071931839,0.08458062261343002,-0.01768563501536846,-4.599660741178013e-8,-0.01281197089701891,-0.005400392226874828,0.14163191616535187,0.08204222470521927,0.0017938234377652407,-0.021015416830778122,0.0065293144434690475,-0.005219089332967997,-0.08337732404470444,0.010812540538609028,0.04164886847138405,0.09091001003980637,0.0717807337641716,0.0742209404706955,0.02347123995423317,-0.011122389696538448,0.007098487578332424,0.02468104287981987,-0.05166107788681984,0.00424568448215723,0.061605144292116165,-0.007846184074878693,0.04278762638568878,-0.10219263285398483,0.04323839396238327,-0.04020043462514877,-0.02005252055823803,-0.04632534086704254,-0.009943178854882717,-0.04230060055851936,-0.000569462135899812,0.1078776866197586,0.08077474683523178,-0.06763539463281631,0.0508262999355793,0.11354158073663712,-0.08928156644105911,-0.007603941485285759,0.039074718952178955,0.05590995401144028,-0.007845493033528328,0.007629605941474438,0.006139400880783796,-0.06409961730241776,-0.017645005136728287,-0.018988849595189095,-0.09371600300073624,0.019943760707974434,0.008811975829303265,0.017116041854023933,-0.012242864817380905,0.04587210714817047,-0.0022034042049199343,0.014087868854403496,0.036397773772478104,-0.021072017028927803,0.03064427711069584,0.027759412303566933,-0.041700106114149094,-0.007124676369130611,0.12296543270349503,0.020807329565286636,0.04383552819490433,-0.047505203634500504]},{"id":"bWV0aG9kLUFuYWx5","type":"method","name":"getPlanetaryHourActivities","qualifiedName":"AnalysisEngine.getPlanetaryHourActivities","parentClass":"AnalysisEngine","parentClassId":"Y2xhc3MtQW5hbHlz","file":"/mnt/c/dev/tarot/js/analysis-engine.js","startLine":1569,"endLine":1582,"lines":14,"code":"\n\n    getPlanetaryHourActivities(planet) {\n        const activities = {\n            'Sun': 'leadership, vitality, and self-expression',\n            'Moon': 'intuition, emotions, and domestic matters',\n            'Mars': 'action, courage, and competition',\n            'Mercury': 'communication, learning, and travel',\n            'Jupiter': 'expansion, luck, and philosophical pursuits',\n            'Venus': 'love, beauty, and artistic endeavors',\n            'Saturn': 'discipline, structure, and long-term planning'\n        };\n        return activities[planet] || 'varied activities';\n    }","mtime":1753003800243.4512,"doc":"","parameters":[{"name":"planet","type":""}],"returnType":"inferred","isStatic":false,"complexity":1.8,"relationships":{"calls":["getPlanetaryHourActivities"],"dependencies":["planet","activities","Sun","leadership","vitality","and","self","expression","Moon","intuition","emotions","domestic","matters","Mars","action","courage","competition","Mercury","communication","learning","travel","Jupiter","expansion","luck","philosophical","pursuits","Venus","love","beauty","artistic","endeavors","Saturn","discipline","structure","long","term","planning","varied"]},"embedding":[0.07292646914720535,0.03713962808251381,0.012857107445597649,0.02277335897088051,0.031170273199677467,-0.01671634614467621,0.06954613327980042,0.001104059861972928,-0.05726552754640579,0.057223912328481674,0.0037357693072408438,-0.13591882586479187,-0.004651117138564587,-0.040000494569540024,0.024088948965072632,-0.012946617789566517,-0.022237703204154968,0.04175368323922157,0.009365773759782314,-0.020125078037381172,0.05861857160925865,0.0227374117821455,-0.015630915760993958,0.04365372285246849,0.003011139342561364,0.04370800778269768,-0.06991151720285416,0.01219223067164421,0.020784443244338036,-0.017473867163062096,0.06514424830675125,0.10195119678974152,0.06037566065788269,0.06309615075588226,0.024847807362675667,0.10485459864139557,-0.01919783465564251,-0.04072682559490204,-0.027382567524909973,-0.015978684648871422,0.011863752268254757,-0.07549341768026352,0.03542735055088997,-0.012485278770327568,0.009758275002241135,0.020729850977659225,-0.07705481350421906,-0.055675990879535675,0.0424656867980957,0.0059087215922772884,-0.02956337295472622,-0.03817838802933693,-0.047793518751859665,-0.019088318571448326,0.020049389451742172,0.017392178997397423,-0.021168051287531853,-0.0320093035697937,0.029598316177725792,-0.11242295056581497,-0.02445361018180847,-0.04838461056351662,-0.027050310745835304,-0.0005909086321480572,0.03866186738014221,0.000640073383692652,-0.08252979815006256,0.05895822495222092,-0.035103973001241684,-0.022943440824747086,0.02218770980834961,-0.060532886534929276,-0.023756256327033043,-0.021282246336340904,-0.020815491676330566,0.08493759483098984,0.0643254742026329,-0.037998590618371964,0.01934494636952877,-0.059984855353832245,0.0033405974972993135,0.027126729488372803,-0.09959053248167038,0.1443571299314499,0.050432734191417694,0.033972498029470444,-0.029997162520885468,0.035523608326911926,0.005934441462159157,0.02671494334936142,-0.08020072430372238,-0.057394593954086304,-0.005948150064796209,-0.06479828804731369,-0.0915769636631012,0.05004541575908661,-0.04379035159945488,-0.12173928320407867,0.03867696225643158,0.028008591383695602,-0.07809829711914062,0.0236970204859972,-0.03161098062992096,-0.00984547846019268,-0.0858716070652008,-0.009548317641019821,0.021682986989617348,0.004674000199884176,0.03479757905006409,0.026485616341233253,-0.14351880550384521,0.02043551206588745,-0.06473630666732788,-0.046488191932439804,0.09660273045301437,-0.015891561284661293,0.0008057290106080472,0.03423352912068367,0.055915605276823044,-0.06200968101620674,0.0626661628484726,0.0005012285546399653,0.060868579894304276,0.008137873373925686,-0.06762386858463287,-0.014387688599526882,0.04884246736764908,1.9710235607237096e-33,0.029033061116933823,0.029287468641996384,0.11891084164381027,0.03697666525840759,-0.09584707021713257,-0.01219208538532257,0.00479089142754674,0.014688599854707718,0.04686039313673973,-0.002407652325928211,-0.0925605371594429,0.031426649540662766,0.06125283241271973,0.016288086771965027,-0.003340719034895301,0.0079383235424757,0.040242187678813934,-0.033160313963890076,-0.00359837687574327,0.014953453093767166,-0.06589342653751373,0.047716666013002396,0.0037022382020950317,-0.051126427948474884,0.09678082168102264,-0.08842523396015167,-0.0030807144939899445,-0.04610688239336014,-0.08344309777021408,-0.0005009952583350241,0.068038709461689,-0.009141793474555016,-0.06283222138881683,0.037544213235378265,0.01309588085860014,0.042670197784900665,-0.050025299191474915,0.03258965164422989,0.012742890976369381,-0.12229566276073456,-0.07910723239183426,-0.03797697648406029,0.05922004580497742,-0.015631528571248055,0.04358396306633949,0.050488587468862534,0.007493290584534407,0.010488779284060001,0.07524881511926651,0.12288472801446915,-0.010510246269404888,0.05425712466239929,0.04024313762784004,-0.08694411814212799,-0.035106953233480453,0.014274735003709793,0.08728106319904327,0.11658059805631638,-0.0773400291800499,0.05553513765335083,0.037274524569511414,-0.020153295248746872,0.0006020393338985741,-0.07795853167772293,0.045891985297203064,0.06215691938996315,-0.05481281876564026,-0.05896468460559845,0.006058742292225361,0.014754909090697765,-0.048364538699388504,0.027755165472626686,0.008918988518416882,-0.016275731846690178,0.02446368709206581,-0.014556202106177807,0.004669348243623972,-0.13537831604480743,-0.0382341668009758,0.017591482028365135,-0.10958542674779892,-0.003074701875448227,0.038640446960926056,0.008302039466798306,0.028245357796549797,-0.0248666163533926,0.06326993554830551,-0.00805114209651947,0.03955461084842682,0.01805364526808262,-0.05842844024300575,-0.11763201653957367,0.011063339188694954,0.05549338459968567,-0.10560379177331924,-4.197202129288813e-33,-0.025476934388279915,-0.00828490685671568,-0.005529755260795355,0.0038841261994093657,0.03921237215399742,0.02837671898305416,-0.08056952059268951,-0.01311124674975872,-0.03531131520867348,0.05843938887119293,0.036110375076532364,0.007628247607499361,-0.019986843690276146,-0.09533055126667023,0.11683537811040878,0.007263789884746075,-0.0726819708943367,0.041617367416620255,0.0034358291886746883,0.09461867064237595,-0.030704902485013008,0.08319058269262314,-0.0254799947142601,-0.0701439380645752,0.007376967463642359,-0.004207794088870287,0.05513524264097214,-0.0026800616178661585,-0.003338609589263797,-0.044485315680503845,-0.04064517840743065,0.01159476675093174,-0.12065817415714264,0.0569876953959465,-0.04037175327539444,0.009466128423810005,-0.0018687571864575148,-0.07491011172533035,-0.055830009281635284,0.08674681186676025,-0.0496610589325428,0.007633437402546406,-0.03349684178829193,-0.005499370861798525,-0.03967985883355141,-0.006861959118396044,-0.03615626320242882,0.07366975396871567,-0.005336986854672432,0.07642237842082977,0.0891890749335289,-0.038929954171180725,-0.058441054075956345,0.04827619716525078,0.046222589910030365,0.021904990077018738,-0.05332428216934204,-0.005056608002632856,0.03555560111999512,-0.058986250311136246,0.05911197140812874,-0.04978114739060402,-0.04485442489385605,0.0680820420384407,-0.08902572095394135,-0.09733040630817413,0.014583593234419823,0.02459006942808628,-0.08597808331251144,0.040799930691719055,-0.007580206263810396,-0.04042807221412659,0.00026136034284718335,0.009531413204967976,-0.048801131546497345,0.008544985204935074,-0.0037673190236091614,-0.06847114861011505,-0.02401481568813324,-0.003715998027473688,0.007685704156756401,0.026233896613121033,0.04602334648370743,0.027928270399570465,0.0011865099659189582,0.05564432218670845,0.0020268652588129044,-0.005392904859036207,-0.033437758684158325,-0.0014455862110480666,-0.05064292624592781,0.026657212525606155,0.0064964983612298965,0.08332353830337524,-0.10305868834257126,-4.4959932665733504e-8,0.0162301417440176,-0.010450613684952259,0.038593489676713943,0.004955678712576628,-0.011238162405788898,0.0213152002543211,0.024044832214713097,-0.02925841324031353,-0.001002707751467824,0.09055142104625702,0.04679946228861809,-0.03739609941840172,0.03184020519256592,-0.03742407262325287,0.015679677948355675,-0.0518176443874836,0.03844290226697922,0.12833625078201294,-0.03147384524345398,0.03173534572124481,0.0077475919388234615,0.007615682668983936,-0.06935066729784012,-0.05838407576084137,0.0394936241209507,-0.013539774343371391,-0.024720076471567154,0.002668892266228795,0.022491171956062317,0.07683679461479187,0.0718560442328453,0.04454147070646286,0.016144288703799248,-0.10749441385269165,-0.03326006978750229,0.06815990060567856,-0.03831294924020767,-0.008924963884055614,0.04242711141705513,0.06987728923559189,0.035563915967941284,0.11066822707653046,-0.08132676780223846,0.053558509796857834,0.004213522654026747,0.024959895759820938,0.011871197260916233,-0.03510039299726486,-0.005982133559882641,-0.03433661535382271,-0.03353295102715492,-0.022094937041401863,-0.0627998560667038,-0.06612510234117508,-0.07452544569969177,-0.004945254884660244,-0.06571270525455475,0.002621967578306794,0.01513051986694336,-0.010574155487120152,0.030555423349142075,0.04421427845954895,-0.06062258034944534,0.02065390720963478]},{"id":"cHJvcGVydHktQW5h","type":"property","name":"activities","qualifiedName":"AnalysisEngine.activities","parentClass":"AnalysisEngine","parentClassId":"Y2xhc3MtQW5hbHlz","file":"/mnt/c/dev/tarot/js/analysis-engine.js","startLine":1572,"endLine":1580,"lines":9,"code":"activities = {\n            'Sun': 'leadership, vitality, and self-expression',\n            'Moon': 'intuition, emotions, and domestic matters',\n            'Mars': 'action, courage, and competition',\n            'Mercury': 'communication, learning, and travel',\n            'Jupiter': 'expansion, luck, and philosophical pursuits',\n            'Venus': 'love, beauty, and artistic endeavors',\n            'Saturn': 'discipline, structure, and long-term planning'\n        };","mtime":1753003800243.4512,"propertyType":"","isStatic":false,"embedding":[0.0335613377392292,0.008828984573483467,0.036685001105070114,0.026311242952942848,-0.01127357967197895,-0.026356857270002365,0.07310586422681808,-0.051182787865400314,-0.06730618327856064,0.034586526453495026,0.03964146971702576,-0.05711514502763748,0.008164444006979465,0.02309046871960163,0.0822860598564148,0.043358951807022095,0.0076483325101435184,0.03513936698436737,-0.07830429077148438,0.03733440861105919,0.03366352617740631,-0.00380428577773273,-0.008178617805242538,0.032538384199142456,0.0054913852363824844,0.10976741462945938,-0.0826251432299614,-0.01861165277659893,0.053292907774448395,-0.04304841160774231,0.007128713186830282,0.07203812152147293,0.13490097224712372,0.041256655007600784,0.022229619324207306,0.12439616024494171,0.01573467068374157,-0.06892310827970505,-0.03573279827833176,-0.031759925186634064,-0.04981466755270958,-0.10880277305841446,0.04706036299467087,-0.06111207604408264,0.0045198737643659115,0.019014934077858925,0.038501493632793427,-0.11394745111465454,0.004993455484509468,-0.022046547383069992,-0.021468205377459526,-0.025544706732034683,-0.04032734036445618,-0.016262438148260117,0.027368852868676186,-0.0020813308656215668,0.018670426681637764,-0.03447270020842552,0.025286253541707993,-0.07926760613918304,0.07862164825201035,0.03246244788169861,-0.03299855440855026,0.034748625010252,-0.011630050837993622,0.03143211454153061,-0.07878497987985611,0.08528784662485123,-0.05061221867799759,-0.017780154943466187,0.0829765796661377,-0.09646941721439362,-0.025387346744537354,0.0011760727502405643,0.012404359877109528,0.02270977385342121,0.014822082594037056,-0.06135144084692001,0.01668521948158741,-0.11037945002317429,-0.06582421809434891,-0.05350209027528763,-0.07183162122964859,0.09137620776891708,-0.01342969574034214,0.0484166294336319,-0.028446396812796593,0.008771699853241444,0.037087224423885345,0.06291557103395462,-0.09201125055551529,-0.08061551302671432,0.040364962071180344,-0.010443340055644512,-0.050685036927461624,0.013120337389409542,-0.10906782001256943,-0.11337794363498688,0.008061091415584087,0.006924518384039402,-0.0372336320579052,0.10884586721658707,-0.03388296067714691,0.0189637690782547,-0.11331803351640701,-0.01647149957716465,-0.021148143336176872,0.014446146786212921,0.01890469156205654,0.0712471455335617,-0.08982092142105103,-0.07412269711494446,-0.060604166239500046,-0.07549996674060822,0.05800004303455353,0.03422416374087334,-0.06896694749593735,0.00004838359382119961,0.05195815861225128,-0.03852786496281624,0.09709912538528442,0.003203977132216096,0.08133698999881744,-0.036643434315919876,0.01211318839341402,-0.06590487062931061,-0.03289090469479561,-1.8674208151010104e-33,0.022807126864790916,-0.02837674878537655,0.030919525772333145,0.09222185611724854,-0.0009499152074567974,-0.013994742184877396,0.03724048286676407,0.026077307760715485,-0.03318571299314499,0.04663248360157013,0.0618111714720726,0.12405969202518463,0.006071444600820541,0.04480741545557976,0.0382833331823349,0.02782769314944744,0.01773299090564251,-0.04556465521454811,0.0586596354842186,-0.013156808912754059,-0.042110927402973175,0.029149942100048065,0.018946567550301552,0.017529655247926712,0.06017081439495087,-0.036934033036231995,0.01610223762691021,-0.03713848441839218,0.00443918677046895,0.024517979472875595,0.04724643751978874,0.0025892825797200203,0.008560960181057453,0.010960397310554981,0.03734828531742096,0.09470921009778976,-0.07376883924007416,-0.03860098123550415,0.04511125013232231,-0.03232584521174431,-0.07367803156375885,-0.09285236150026321,-0.014688972383737564,-0.02413281798362732,0.02123834192752838,0.03945483639836311,0.013129756785929203,-0.004452778026461601,0.029584087431430817,0.08299614489078522,0.003339731367304921,0.0165096465498209,-0.02201620675623417,-0.07105521112680435,0.0040199593640863895,0.007006267085671425,0.023424608632922173,0.0679391622543335,-0.12218204140663147,-0.015105490572750568,-0.028033027425408363,-0.01631980948150158,0.02493940107524395,-0.030640454962849617,0.05692967027425766,0.014114879071712494,-0.01643199846148491,-0.01727989874780178,0.03678944706916809,-0.027380529791116714,-0.037223123013973236,0.03906536102294922,-0.027090802788734436,-0.022973209619522095,0.06375402212142944,-0.035466864705085754,0.014398406259715557,-0.09448496252298355,-0.052916258573532104,0.06584285199642181,-0.0767565369606018,-0.03830409422516823,0.050160154700279236,0.03874926641583443,-0.019536223262548447,-0.008604392409324646,0.07302550226449966,-0.06031397357583046,-0.07980255037546158,0.03340666741132736,-0.0395575687289238,-0.019168952479958534,0.02991669252514839,0.031000817194581032,-0.07400605082511902,-1.8794176533061134e-33,-0.041831549257040024,-0.06794466078281403,-0.0631391778588295,0.004778196103870869,0.04391223192214966,-0.026575293391942978,-0.07639491558074951,-0.07727354019880295,0.015577276237308979,0.06147328391671181,-0.03988578915596008,-0.042369768023490906,-0.03461666777729988,-0.01870766095817089,0.020466195419430733,-0.04715912416577339,-0.04939498007297516,0.010000365786254406,0.033723875880241394,0.11634910851716995,-0.05383192375302315,0.13574478030204773,-0.03128363937139511,0.062159329652786255,-0.03062162734568119,-0.014169415459036827,-0.06791027635335922,-0.039145536720752716,0.060129888355731964,0.036817651242017746,-0.019820071756839752,0.01686507649719715,-0.027578460052609444,-0.003825523890554905,-0.03443749248981476,-0.013888584449887276,0.07205953449010849,-0.12765036523342133,-0.0690152645111084,-0.007155001629143953,0.02278360351920128,-0.006321631371974945,0.050278790295124054,-0.017921745777130127,-0.014213777147233486,-0.0012891707010567188,-0.06067722290754318,0.032145872712135315,-0.09782945364713669,0.028956394642591476,0.12524938583374023,-0.007964527234435081,-0.0849403589963913,0.015327866189181805,0.05176928639411926,0.07307784259319305,0.05692064017057419,-0.010277995839715004,0.014047669246792793,0.015594900585711002,0.03732037916779518,0.058350518345832825,-0.053600069135427475,0.15634244680404663,-0.06779570132493973,-0.04175381734967232,-0.0008149346685968339,0.012387814000248909,-0.11286847293376923,-0.07446810603141785,0.0015504955081269145,-0.06520822644233704,-0.07448185235261917,-0.030763784423470497,-0.03861284628510475,-0.003279001684859395,-0.015037997625768185,-0.015693701803684235,0.010784367099404335,-0.02079087682068348,0.00011220431770198047,0.02744259126484394,0.024968361482024193,0.04163401201367378,0.00518662529066205,0.040396515280008316,-0.08826780319213867,0.010689450427889824,-0.029264377430081367,0.012527805753052235,-0.08732527494430542,0.0628553107380867,-0.018376652151346207,0.02769426256418228,-0.09037338942289352,-3.825234884402562e-8,-0.057730164378881454,0.023916015401482582,0.02966717816889286,-0.02281462587416172,0.0017366384854540229,0.010814981535077095,0.07767119258642197,0.05848725512623787,-0.01243912149220705,0.10634220391511917,0.0010765030747279525,0.045353587716817856,-0.048637304455041885,0.009487214498221874,-0.008342371322214603,-0.07635974138975143,0.042786069214344025,0.016168858855962753,-0.01465214416384697,0.022054428234696388,0.08520770817995071,-0.014236348681151867,-0.014646146446466446,-0.04952375218272209,-0.05165539309382439,-0.048718757927417755,-0.04047643020749092,-0.005129951983690262,0.020825522020459175,0.0663088858127594,0.0698089599609375,0.01868937537074089,0.06897298246622086,-0.06144997477531433,-0.00609468063339591,-0.00533652538433671,0.02685420773923397,-0.03483596071600914,-0.002012438839301467,0.08108263462781906,-0.003757147118449211,0.028918195515871048,-0.025372028350830078,0.025846179574728012,-0.008193094283342361,0.03316355124115944,0.00023996198433451355,-0.04124004766345024,0.017743436619639397,-0.06328845024108887,-0.03829662874341011,-0.013157572597265244,-0.047880686819553375,-0.06382060050964355,-0.010275989770889282,0.06406747549772263,0.024381259456276894,0.033676762133836746,0.05659063160419464,-0.016502728685736656,0.10084932297468185,0.0278709065169096,-0.07160717993974686,0.024264467880129814]},{"id":"ZXhwb3J0LTYzMjg0","type":"export","qualifiedName":"exports) {\n    module.exports = AnalysisEngine;","file":"/mnt/c/dev/tarot/js/analysis-engine.js","startLine":1586,"endLine":1587,"lines":2,"code":"exports) {\n    module.exports = AnalysisEngine;","mtime":1753003800243.4512,"doc":"","modulePath":"","elements":[],"embedding":[-0.060271963477134705,-0.018538938835263252,-0.14404162764549255,0.014953920617699623,0.08774494379758835,-0.03694471716880798,-0.003798175137490034,0.07185845077037811,-0.054805856198072433,-0.057429131120443344,0.013857814483344555,-0.045394912362098694,-0.00606270506978035,-0.00579951424151659,0.0006685113185085356,0.02748906798660755,-0.011534975841641426,-0.004935614764690399,0.010425999760627747,-0.04736825451254845,0.05690213665366173,0.049636900424957275,0.031321629881858826,-0.01618550717830658,0.017518557608127594,-0.011452428996562958,-0.009138667955994606,0.03806936740875244,0.0151580311357975,-0.033560607582330704,-0.045216720551252365,0.07023611664772034,-0.012946928851306438,0.054241910576820374,0.04983549565076828,0.13192422688007355,-0.031235354021191597,-0.07424753904342651,-0.028640195727348328,-0.08302179723978043,-0.030088186264038086,0.03404233977198601,-0.038169410079717636,-0.06145741045475006,-0.018153948709368706,-0.0897766575217247,-0.04747871309518814,-0.05929549038410187,0.006029373966157436,-0.02308681048452854,-0.14554691314697266,-0.047006554901599884,-0.09937985986471176,-0.08106986433267593,0.053531333804130554,-0.02518884837627411,-0.04842456057667732,-0.033385276794433594,0.01055124681442976,0.031929872930049896,0.06579631567001343,0.01945526897907257,-0.0036920919083058834,0.062333207577466965,-0.017992908135056496,0.009429946541786194,-0.019577253609895706,0.10282693058252335,-0.019687317311763763,-0.018216783180832863,-0.09448309987783432,-0.014653315767645836,-0.06292073428630829,-0.01800324209034443,-0.01617259532213211,-0.05923709273338318,-0.01365954801440239,0.027403583750128746,0.06380731612443924,-0.0780220553278923,-0.0887361541390419,-0.04208040609955788,-0.016004957258701324,0.06920570135116577,0.004256427753716707,0.03424064442515373,0.058479148894548416,0.01590929739177227,0.0027287895791232586,0.07332942634820938,-0.029824186116456985,-0.12224344909191132,0.06146682798862457,0.09464581310749054,-0.028600003570318222,-0.012682897970080376,-0.007731773890554905,0.0616779588162899,0.043952975422143936,0.0010278711561113596,-0.059365931898355484,0.005847387481480837,0.012749512679874897,-0.001293994951993227,-0.12086287140846252,-0.03172338753938675,0.036810874938964844,0.03325977921485901,0.05196673795580864,-0.021810663864016533,-0.04821697995066643,0.03457719087600708,-0.019338257610797882,-0.11735393106937408,0.00005400520603870973,-0.024879667907953262,-0.060624148696660995,-0.03668181598186493,0.051430147141218185,0.1293221414089203,0.07798174023628235,0.028560679405927658,0.10988971590995789,0.003327457932755351,0.06078595295548439,0.050841983407735825,-0.0049555981531739235,-1.2538088150454415e-33,-0.02052914723753929,-0.13034294545650482,-0.05201300233602524,0.09053580462932587,-0.0026439460925757885,0.011887307278811932,-0.022917693480849266,0.015730567276477814,-0.06493622809648514,0.023762516677379608,-0.030697813257575035,0.15562142431735992,-0.07722854614257812,0.08119295537471771,0.06634631752967834,-0.00098237965721637,0.015305054374039173,0.04486103355884552,0.038121093064546585,0.0034029274247586727,0.023821065202355385,-0.06397183239459991,0.039039503782987595,0.06694316118955612,0.030550625175237656,0.058220211416482925,0.04095916077494621,-0.0010514719178900123,-0.027775289490818977,0.0689772292971611,0.022214248776435852,-0.02538539655506611,0.010406965389847755,0.035072848200798035,-0.0021076707635074854,0.042489416897296906,-0.03567461669445038,-0.0019263543654233217,-0.08649110049009323,0.07281236350536346,-0.05147884041070938,-0.030441179871559143,-0.07566916942596436,-0.038491129875183105,0.02650974504649639,0.0019099561031907797,-0.03269915655255318,0.0897757038474083,0.12281849980354309,0.02815617062151432,-0.10646393150091171,0.003297455608844757,0.13279591500759125,-0.010164166800677776,0.013206797651946545,0.040247995406389236,0.00703841308131814,0.038734808564186096,0.016054974868893623,-0.058289535343647,-0.12618038058280945,0.08003666251897812,-0.03515902906656265,-0.025672264397144318,0.031574275344610214,0.03775281831622124,-0.05623939260840416,-0.004846233408898115,-0.008436106145381927,0.03579557314515114,-0.03171577304601669,0.03096822276711464,0.0070863873697817326,0.0765182226896286,0.08640823513269424,-0.05492134392261505,-0.02882302738726139,0.03607477620244026,-0.04822894185781479,-0.06197601184248924,-0.1056608036160469,-0.010141495615243912,-0.02431841753423214,-0.08617822825908661,-0.04627710580825806,0.002697909250855446,0.007439740002155304,0.011121133342385292,0.016649330034852028,0.01816691644489765,-0.08142783492803574,-0.01283407211303711,-0.060959119349718094,-0.014502421021461487,-0.05073167011141777,-1.779490164239657e-33,0.00623706728219986,0.004461069591343403,-0.061470307409763336,0.03642621263861656,0.028722424060106277,0.0006062897155061364,0.00973077118396759,0.008581649512052536,0.06587826460599899,0.041478175669908524,-0.007291507441550493,-0.02393394708633423,0.018651289865374565,-0.02766238898038864,0.03187220171093941,0.01152730081230402,-0.06133993715047836,-0.10065802186727524,-0.012053323909640312,-0.011210862547159195,-0.11488543450832367,0.05917559564113617,0.07399402558803558,-0.013161015696823597,0.018663987517356873,0.041694603860378265,-0.050962455570697784,0.03622119501233101,0.02292092889547348,-0.04413992911577225,-0.019797710701823235,0.07076039910316467,-0.05084153637290001,-0.00663315923884511,-0.10596784204244614,-0.007961354218423367,0.1046236902475357,-0.047202207148075104,0.039903391152620316,0.02042764611542225,0.03974008187651634,-0.0030001334380358458,-0.041933245956897736,0.03771419823169708,-0.03291868418455124,0.022243747487664223,-0.043370772153139114,0.03037450835108757,-0.022962111979722977,-0.04581542685627937,0.01899266429245472,0.023563377559185028,-0.010654146783053875,-0.11437233537435532,-0.011894739232957363,-0.014479110948741436,0.1044386774301529,-0.008631870150566101,-0.018874922767281532,0.07272067666053772,0.04950745776295662,-0.0555691234767437,0.035428486764431,0.018483979627490044,-0.06963835656642914,-0.015507631935179234,-0.054008644074201584,0.04482695832848549,-0.010865197516977787,-0.010088765062391758,-0.04904297739267349,0.010309122502803802,-0.04027771204710007,0.026554357260465622,-0.03301699459552765,-0.03892544284462929,-0.04343242943286896,-0.018605122342705727,0.08463577181100845,0.009973841719329357,0.05257919430732727,0.05570663884282112,0.052916936576366425,-0.018673334270715714,0.030657613649964333,-0.09433206170797348,-0.03938060998916626,0.05171295627951622,0.02468077279627323,-0.006886086892336607,-0.022074760869145393,-0.005210331175476313,-0.007309050299227238,-0.023292625322937965,-0.014504600316286087,-2.2292210744012664e-8,-0.04181205853819847,0.012569249607622623,0.04455754905939102,0.014896854758262634,-0.011065569706261158,-0.015313005074858665,0.001695008366368711,0.10941778868436813,0.05843836069107056,0.010548188351094723,0.04296685755252838,0.026843227446079254,-0.038930993527173996,0.0637083351612091,-0.02947554551064968,0.0020980967674404383,0.012610044330358505,0.06862080842256546,-0.024824535474181175,-0.0856458991765976,0.009685730561614037,0.005675194319337606,0.04062124714255333,0.034206125885248184,0.07126855850219727,-0.08525411784648895,-0.03973662108182907,0.005761899519711733,0.03268017619848251,-0.06430196762084961,-0.09388034790754318,0.06983434408903122,0.03411353379487991,-0.04628735035657883,0.012665350921452045,0.04418899118900299,0.04480595886707306,0.006846036296337843,-0.009829044342041016,0.06480329483747482,-0.060820918530225754,0.016379298642277718,-0.05581480264663696,-0.03345644101500511,0.014629735611379147,0.016559619456529617,-0.04070927947759628,0.004411872010678053,0.01736374758183956,-0.027129750698804855,0.012852967716753483,-0.036276675760746,-0.04318046197295189,0.05591967701911926,0.0037983222864568233,0.04908359423279762,-0.00482473848387599,-0.05988118052482605,0.029579175636172295,-0.03769148513674736,-0.024371236562728882,0.10967068374156952,0.0924384742975235,-0.04908350110054016]},{"id":"Y2xhc3MtQ2FyZFJl","type":"class","name":"CardRenderer","qualifiedName":"CardRenderer","parentClass":null,"file":"/mnt/c/dev/tarot/js/card-renderer.js","startLine":3,"endLine":218,"lines":216,"code":"class CardRenderer {\n    constructor() {\n        this.cardElements = new Map();\n    }\n\n    // Create card HTML element\n    createCardElement(card, position = null) {\n        const cardDiv = document.createElement('div');\n        cardDiv.className = 'tarot-card';\n        cardDiv.setAttribute('data-card-id', `${card.name}-${card.positionIndex || 0}`);\n        \n        if (card.isReversed) {\n            cardDiv.classList.add('reversed');\n        }\n\n        const cardContent = `\n            <div class=\"card-content\">\n                ${position ? `<div class=\"card-position\">${position.positionIndex + 1}</div>` : ''}\n                <div class=\"card-image-container\">\n                    <img src=\"${card.image}\" alt=\"${card.name}\" class=\"card-image ${card.isReversed ? 'reversed' : ''}\" \n                         onerror=\"this.style.display='none'; this.nextElementSibling.style.display='block';\">\n                    <div class=\"card-placeholder\" style=\"display: none;\">\n                        <span class=\"card-suit-symbol\">${this.getSuitSymbol(card.suit)}</span>\n                        <span class=\"card-number\">${card.number !== null ? card.number : ''}</span>\n                    </div>\n                </div>\n                <div class=\"card-info\">\n                    <h4 class=\"card-name\">${card.name}${card.isReversed ? ' (Reversed)' : ''}</h4>\n                    ${position ? `<p class=\"card-position-name\">${position.name}</p>` : ''}\n                    <div class=\"card-metadata\">\n                        <div class=\"element-badge element-${card.element?.toLowerCase() || 'unknown'}\">\n                            ${card.element || 'Unknown'}\n                        </div>\n                        ${card.astrology ? `<span class=\"astro-symbol\">${this.getAstroSymbol(card.astrology)}</span>` : ''}\n                    </div>\n                    <div class=\"keywords\">\n                        ${this.renderKeywords(card, card.isReversed)}\n                    </div>\n                    <div class=\"card-meaning\">\n                        ${this.renderBasicMeaning(card, card.isReversed)}\n                    </div>\n                </div>\n            </div>\n        `;\n\n        cardDiv.innerHTML = cardContent;\n        \n        // Add click handler for detailed view\n        cardDiv.addEventListener('click', () => this.showCardDetails(card));\n        \n        this.cardElements.set(card, cardDiv);\n        return cardDiv;\n    }\n\n    // Render keywords as badges\n    renderKeywords(card, isReversed) {\n        const keywords = isReversed ? card.keywords.reversed : card.keywords.upright;\n        return keywords.map(keyword => `<span class=\"keyword\">${keyword}</span>`).join('');\n    }\n\n    // Render basic meaning\n    renderBasicMeaning(card, isReversed) {\n        const meaning = isReversed ? card.meanings.reversed.general : card.meanings.upright.general;\n        return `<p class=\"meaning-text\">${meaning.substring(0, 150)}...</p>`;\n    }\n\n    // Get suit symbol\n    getSuitSymbol(suit) {\n        const symbols = {\n            'Wands': '🔥',\n            'Cups': '💧',\n            'Swords': '💨',\n            'Pentacles': '🌍',\n            'Major Arcana': '✨'\n        };\n        return symbols[suit] || '?';\n    }\n\n    // Get astrological symbol\n    getAstroSymbol(astrology) {\n        const symbols = {\n            'Aries': '♈', 'Taurus': '♉', 'Gemini': '♊', 'Cancer': '♋',\n            'Leo': '♌', 'Virgo': '♍', 'Libra': '♎', 'Scorpio': '♏',\n            'Sagittarius': '♐', 'Capricorn': '♑', 'Aquarius': '♒', 'Pisces': '♓',\n            'Sun': '☉', 'Moon': '☽', 'Mercury': '☿', 'Venus': '♀',\n            'Mars': '♂', 'Jupiter': '♃', 'Saturn': '♄', 'Uranus': '♅',\n            'Neptune': '♆', 'Pluto': '♇'\n        };\n        return symbols[astrology] || astrology;\n    }\n\n    // Show detailed card information in modal\n    showCardDetails(card) {\n        const modal = document.getElementById('cardModal');\n        const modalContent = document.getElementById('modalCardContent');\n        const modalTitle = document.getElementById('modalCardName');\n\n        modalTitle.textContent = `${card.name}${card.isReversed ? ' (Reversed)' : ''}`;\n        \n        modalContent.innerHTML = `\n            <div class=\"modal-card-details\">\n                <div class=\"modal-card-header\">\n                    <div class=\"modal-card-image\">\n                        <img src=\"${card.image}\" alt=\"${card.name}\" class=\"${card.isReversed ? 'reversed' : ''}\" \n                             onerror=\"this.style.display='none'; this.nextElementSibling.style.display='block';\">\n                        <div class=\"card-placeholder\" style=\"display: none;\">\n                            <span class=\"card-suit-symbol\">${this.getSuitSymbol(card.suit)}</span>\n                        </div>\n                    </div>\n                    <div class=\"modal-card-meta\">\n                        <div class=\"meta-item\">\n                            <strong>Suit:</strong> ${card.suit}\n                        </div>\n                        <div class=\"meta-item\">\n                            <strong>Number:</strong> ${card.number !== null ? card.number : 'N/A'}\n                        </div>\n                        <div class=\"meta-item\">\n                            <strong>Element:</strong> ${card.element || 'Unknown'}\n                        </div>\n                        <div class=\"meta-item\">\n                            <strong>Astrology:</strong> ${card.astrology ? `${card.astrology} ${this.getAstroSymbol(card.astrology)}` : 'N/A'}\n                        </div>\n                        <div class=\"meta-item\">\n                            <strong>Numerology:</strong> ${card.numerology !== null ? card.numerology : 'N/A'}\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"modal-meanings\">\n                    <div class=\"meaning-section\">\n                        <h4>General Meaning</h4>\n                        <p>${card.isReversed ? card.meanings.reversed.general : card.meanings.upright.general}</p>\n                    </div>\n                    \n                    <div class=\"meaning-section\">\n                        <h4>Love & Relationships</h4>\n                        <p>${card.isReversed ? card.meanings.reversed.love : card.meanings.upright.love}</p>\n                    </div>\n                    \n                    <div class=\"meaning-section\">\n                        <h4>Career & Finance</h4>\n                        <p>${card.isReversed ? card.meanings.reversed.career : card.meanings.upright.career}</p>\n                    </div>\n                    \n                    <div class=\"meaning-section\">\n                        <h4>Spiritual Guidance</h4>\n                        <p>${card.isReversed ? card.meanings.reversed.spiritual : card.meanings.upright.spiritual}</p>\n                    </div>\n                </div>\n                \n                <div class=\"modal-keywords\">\n                    <h4>Keywords</h4>\n                    <div class=\"keywords-grid\">\n                        <div class=\"keywords-column\">\n                            <h5>Upright</h5>\n                            <div class=\"keywords\">\n                                ${card.keywords.upright.map(k => `<span class=\"keyword\">${k}</span>`).join('')}\n                            </div>\n                        </div>\n                        <div class=\"keywords-column\">\n                            <h5>Reversed</h5>\n                            <div class=\"keywords\">\n                                ${card.keywords.reversed.map(k => `<span class=\"keyword reversed\">${k}</span>`).join('')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n\n        modal.classList.remove('hidden');\n        modal.classList.add('flex');\n    }\n\n    // Create spread layout\n    createSpreadLayout(spreadType, cards) {\n        const container = document.createElement('div');\n        container.className = `reading-grid reading-grid-${spreadType}`;\n        \n        cards.forEach((card, index) => {\n            const cardElement = this.createCardElement(card, {\n                name: card.position.name,\n                positionIndex: index\n            });\n            container.appendChild(cardElement);\n        });\n        \n        return container;\n    }\n\n    // Animate card appearance\n    animateCardAppearance(cardElement) {\n        cardElement.style.opacity = '0';\n        cardElement.style.transform = 'translateY(20px)';\n        \n        setTimeout(() => {\n            cardElement.style.transition = 'all 0.5s ease';\n            cardElement.style.opacity = '1';\n            cardElement.style.transform = 'translateY(0)';\n        }, 100);\n    }\n\n    // Update card element with new data\n    updateCardElement(card, newData) {\n        const element = this.cardElements.get(card);\n        if (element) {\n            // Update the card with new data and re-render\n            Object.assign(card, newData);\n            const parent = element.parentNode;\n            const newElement = this.createCardElement(card);\n            parent.replaceChild(newElement, element);\n            return newElement;\n        }\n        return null;\n    }\n}","mtime":1752833881182.3926,"doc":"Card Rendering Module Handles all card display and visualization logic","isExported":false,"methods":["bWV0aG9kLUNhcmRS","bWV0aG9kLUNhcmRS","bWV0aG9kLUNhcmRS","bWV0aG9kLUNhcmRS","bWV0aG9kLUNhcmRS","bWV0aG9kLUNhcmRS","bWV0aG9kLUNhcmRS","bWV0aG9kLUNhcmRS","bWV0aG9kLUNhcmRS","bWV0aG9kLUNhcmRS","bWV0aG9kLUNhcmRS"],"properties":["cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy","cHJvcGVydHktQ2Fy"],"embedding":[-0.06793294847011566,0.08960895985364914,-0.042406439781188965,0.05495581775903702,0.027122754603624344,-0.0379486009478569,-0.01373305730521679,0.06501000374555588,-0.0269559808075428,-0.0926402136683464,-0.005464400630444288,-0.014670799486339092,-0.0875147134065628,-0.02733946405351162,-0.01510904636234045,-0.015924274921417236,-0.01457290817052126,0.027593208476901054,0.05630963668227196,0.06673499941825867,0.07007039338350296,-0.06919553130865097,0.03397507220506668,0.014112329110503197,-0.032832156866788864,0.09462545067071915,0.06993243843317032,-0.01229641493409872,0.057462774217128754,-0.007362114731222391,0.04665963351726532,0.06744178384542465,0.04283667728304863,0.0685989111661911,-0.04471641778945923,0.05541057512164116,0.05824906378984451,0.02160264365375042,-0.0394773930311203,0.009564717300236225,0.03795627877116203,0.0048197354190051556,-0.04388812929391861,-0.04952242597937584,0.03618842735886574,-0.06906871497631073,-0.03228047117590904,-0.005773480981588364,-0.05531151592731476,-0.013477422297000885,-0.003326844424009323,-0.008436400443315506,0.016660859808325768,-0.059799276292324066,-0.027935832738876343,0.027803270146250725,0.011403740383684635,-0.07854380458593369,-0.01528080739080906,-0.06855809688568115,0.028412818908691406,0.05630165711045265,0.07747560739517212,0.008678728714585304,0.02106638252735138,-0.022014033049345016,0.021045276895165443,0.013924959115684032,0.026231329888105392,-0.06548824161291122,0.043491706252098083,0.02484767884016037,0.06935358047485352,-0.0006099505699239671,-0.0034171175211668015,-0.029263673350214958,0.004109433386474848,0.043913085013628006,0.02919042855501175,-0.019183248281478882,-0.032022204250097275,-0.02534712292253971,0.061475180089473724,-0.007086154073476791,-0.002346271416172385,0.0496656633913517,0.02352597564458847,0.03073766827583313,-0.019249290227890015,-0.08753692358732224,-0.05900198221206665,0.00004571651516016573,-0.05079144239425659,0.02467036247253418,-0.06608208268880844,0.0035891097504645586,0.041549425572156906,-0.044655706733465195,-0.04772630333900452,-0.03807215020060539,-0.005771391559392214,-0.023918813094496727,0.0042021675035357475,-0.040812812745571136,0.08313822746276855,-0.024271095171570778,0.010371762327849865,-0.003917485009878874,-0.059737008064985275,-0.02664787694811821,0.008952927775681019,-0.015909472480416298,-0.09419412165880203,-0.02708069235086441,0.02739078551530838,0.004811315797269344,-0.08737799525260925,-0.01176795456558466,0.11222710460424423,0.13675840198993683,0.04630157724022865,-0.017045410349965096,0.021504752337932587,-0.010300078429281712,-0.024241147562861443,-0.049018606543540955,0.006875659339129925,5.514500037070639e-33,0.02855066768825054,-0.05178462341427803,-0.002731307176873088,0.06685766577720642,0.1096566915512085,0.015210619196295738,0.007794660981744528,-0.0028343824669718742,-0.029074106365442276,0.013216651044785976,0.019769927486777306,-0.011107808910310268,0.03780185431241989,0.139348104596138,-0.015193491242825985,-0.06425388157367706,-0.10019296407699585,-0.008899860084056854,0.005908678285777569,-0.04638451337814331,-0.0681711956858635,0.06726915389299393,0.05405420809984207,-0.03333381190896034,-0.01649821549654007,0.09467920660972595,-0.07364058494567871,-0.009172574616968632,-0.006983229890465736,-0.009357227943837643,0.10180097073316574,-0.02922486700117588,0.026992447674274445,0.009814579039812088,0.008131705224514008,0.15018214285373688,-0.0483771376311779,0.04615681990981102,-0.11342942714691162,0.01871727593243122,-0.03258727118372917,-0.06201054900884628,0.011759843677282333,-0.049503639340400696,-0.0677744671702385,-0.03436765819787979,0.0806494727730751,0.006673390511423349,-0.07209379225969315,0.05106830224394798,-0.08126690238714218,0.03558466583490372,0.0117292245849967,-0.03032045066356659,0.02877047471702099,-0.07830164581537247,0.022315863519906998,0.035465795546770096,0.0363503061234951,-0.08653388172388077,-0.06177932769060135,0.05237725004553795,-0.07887346297502518,-0.006794207729399204,-0.06921006739139557,-0.02109283022582531,0.034303512424230576,-0.09632506966590881,-0.07788411527872086,-0.0009517150465399027,0.007050401996821165,0.02638731710612774,-0.02076893486082554,-0.03732672333717346,0.013637389987707138,0.06839164346456528,-0.08343775570392609,-0.013549113646149635,-0.12305349856615067,-0.00595104182139039,-0.06985962390899658,-0.048898786306381226,0.005007698200643063,-0.06028811261057854,-0.005627247504889965,-0.02725597657263279,0.03798481449484825,0.04192068800330162,0.08792544901371002,0.008356628939509392,-0.004789247177541256,-0.039157409220933914,0.02379617467522621,-0.05677594989538193,0.07876764237880707,-6.170252866754714e-33,0.001046895980834961,-0.014622612856328487,-0.033019110560417175,0.030984463170170784,-0.048808157444000244,-0.04812987893819809,0.02209128439426422,0.05239636451005936,0.006189023610204458,-0.06127283349633217,0.0032022343948483467,0.08559159189462662,0.004029345698654652,0.02287670597434044,-0.014844543300569057,0.08543571829795837,-0.03940786421298981,0.022158116102218628,0.015430242754518986,-0.10059178620576859,-0.008365916088223457,0.007405497599393129,-0.007185012102127075,0.03141041100025177,-0.06916294991970062,0.04930191487073898,0.07664763182401657,-0.03187544643878937,0.030708003789186478,-0.09635508805513382,0.08159253001213074,-0.008401874452829361,0.03792564943432808,0.04637348651885986,-0.05417215824127197,0.03506706655025482,0.012533647939562798,0.042871538549661636,-0.014689115807414055,0.02875172719359398,-0.07681278884410858,-0.026006633415818214,-0.012399164028465748,0.031090032309293747,-0.041644759476184845,-0.05524409934878349,0.050762251019477844,-0.01681353896856308,0.07940976321697235,0.02225850708782673,-0.054239969700574875,-0.1108693927526474,-0.0019164321711286902,-0.012272055260837078,0.03765331581234932,0.02437998168170452,-0.03794512525200844,0.043170567601919174,0.018182765692472458,0.043575551360845566,0.04503932222723961,-0.04582037404179573,-0.005023782141506672,-0.050056204199790955,-0.028605414554476738,-0.02898375876247883,-0.1448231190443039,-0.020900126546621323,0.06627461314201355,0.03263344615697861,0.04744377359747887,0.11099059879779816,-0.038203902542591095,0.028326692059636116,-0.029164183884859085,-0.0204068161547184,0.11856316775083542,0.04514344036579132,0.07886257767677307,-0.08340994268655777,0.045901328325271606,-0.057412561029195786,-0.013421446084976196,0.002965208375826478,0.022593677043914795,0.001029052073135972,0.02752772346138954,-0.005239632446318865,0.011536851525306702,-0.07757630199193954,0.008873438462615013,0.08276458084583282,-0.028194980695843697,0.05152229219675064,-0.033468082547187805,-3.9780100991038125e-8,-0.0866309180855751,-0.031796157360076904,-0.04113329201936722,-0.019496403634548187,-0.06735008955001831,-0.005736916791647673,0.14240115880966187,-0.039488133043050766,-0.049116771668195724,-0.03537799417972565,0.08656045794487,0.05486268922686577,0.04157443717122078,-0.07900368422269821,0.1259355992078781,0.044747866690158844,-0.012655411846935749,0.03714899346232414,-0.03021620400249958,0.028225203976035118,0.04440874233841896,-0.05639883875846863,0.03547641262412071,0.06262914836406708,-0.014896158128976822,-0.005084508564323187,0.08253328502178192,-0.010093828663229942,0.05630886182188988,-0.023278264328837395,0.017934156581759453,0.07936172187328339,0.028653742745518684,-0.024370305240154266,0.1383652538061142,0.037864137440919876,-0.0735999271273613,0.004502442665398121,0.07787473499774933,0.10081412643194199,-0.04535049572587013,-0.024520542472600937,-0.07848241180181503,-0.053407665342092514,0.03598504886031151,-0.01654922403395176,-0.06896062195301056,-0.05645976588129997,-0.015109281986951828,0.004347402602434158,-0.0670071616768837,0.015585188753902912,-0.06559692323207855,0.061994828283786774,-0.02531934157013893,-0.011076078750193119,-0.004430018365383148,0.023827189579606056,0.03068019635975361,-0.04023291915655136,0.006935630924999714,0.05983273684978485,0.07153403013944626,0.023116594180464745]},{"id":"bWV0aG9kLUNhcmRS","type":"method","name":"if","qualifiedName":"CardRenderer.if","parentClass":"CardRenderer","parentClassId":"Y2xhc3MtQ2FyZFJl","file":"/mnt/c/dev/tarot/js/card-renderer.js","startLine":207,"endLine":215,"lines":9,"code":"\n        if (element) {\n            // Update the card with new data and re-render\n            Object.assign(card, newData);\n            const parent = element.parentNode;\n            const newElement = this.createCardElement(card);\n            parent.replaceChild(newElement, element);\n            return newElement;\n        }","mtime":1752833881182.3926,"doc":"","parameters":[{"name":"element","type":""}],"returnType":"inferred","isStatic":false,"complexity":2,"relationships":{"calls":["assign","createCardElement","replaceChild"],"dependencies":["element","Update","the","card","with","new","data","and","re","render","Object","newData","parent","parentNode","newElement"]},"embedding":[-0.04006611183285713,0.06517509371042252,0.0027263641823083162,0.07547320425510406,-0.007023959420621395,-0.04123571887612343,0.05713418871164322,-0.012284502387046814,0.01100913342088461,-0.04177689924836159,0.030712386593222618,-0.046019479632377625,-0.08000978082418442,-0.0487663596868515,0.06714820116758347,0.06271252036094666,0.035899192094802856,-0.05385236442089081,-0.01094481535255909,0.029160229489207268,0.09740492701530457,-0.06087329611182213,0.004457775503396988,-0.004026859067380428,0.04496419057250023,0.11164551228284836,0.04385562613606453,-0.09950243681669235,0.04490440711379051,-0.02293591946363449,0.033276479691267014,0.04206889122724533,0.03210314363241196,0.07149229198694229,-0.04963710159063339,0.017211614176630974,-0.032526418566703796,-0.021289613097906113,-0.0023674722760915756,-0.014090290293097496,0.050012923777103424,0.07607945799827576,-0.10823360830545425,-0.06766165047883987,0.08416271209716797,-0.006926071364432573,-0.024177731946110725,0.019247477874159813,-0.021241124719381332,0.044849663972854614,0.00795827154070139,-0.055250100791454315,0.013297444209456444,0.020870868116617203,-0.012004952877759933,0.04394887387752533,0.028087731450796127,-0.09371855854988098,0.017429882660508156,-0.03753814101219177,0.08715252578258514,-0.005030808039009571,0.031619369983673096,0.032175127416849136,0.020058631896972656,-0.038931746035814285,-0.01228062342852354,-0.03542200103402138,-0.03874794766306877,0.024301309138536453,0.019309531897306442,0.08548171073198318,0.09016000479459763,0.0418710857629776,0.034240707755088806,-0.009820335544645786,0.06347103416919708,-0.026323754340410233,0.051246900111436844,0.050652988255023956,-0.026046063750982285,-0.05932246148586273,-0.006024230737239122,-0.06033650413155556,0.0754489004611969,0.08591923862695694,0.017131708562374115,-0.05325624346733093,-0.09475083649158478,-0.08044512569904327,-0.049709465354681015,-0.02703636884689331,0.035984836518764496,0.03411366045475006,-0.022189680486917496,0.054204270243644714,-0.05129336565732956,-0.10184865444898605,-0.0387561172246933,-0.018857188522815704,0.026138583198189735,0.04719890281558037,-0.01523402240127325,-0.0285217072814703,-0.033425066620111465,-0.051242321729660034,0.003510067006573081,-0.08281026035547256,-0.0705629289150238,0.012315694242715836,-0.015239992178976536,0.05737170949578285,0.003874110523611307,-0.012933420948684216,-0.09300307929515839,-0.046436045318841934,-0.0326179563999176,0.0038857320323586464,0.014202780090272427,0.049700118601322174,0.08456583321094513,-0.014411266893148422,0.029292162507772446,0.003371455008164048,-0.057354968041181564,-0.03960274159908295,-0.024755293503403664,3.7181125088798965e-33,0.002078359480947256,0.02093806304037571,-0.029696770012378693,0.05257442593574524,0.06821972876787186,-0.007014141883701086,0.015497368760406971,-0.021686188876628876,-0.07228375226259232,-0.010466701351106167,-0.010416277684271336,-0.017519453540444374,0.009556844830513,-0.03993542119860649,0.047685857862234116,-0.039684467017650604,-0.11744106560945511,0.026293780654668808,0.0609811395406723,-0.013865919783711433,-0.12302713096141815,0.061605751514434814,-0.008936443366110325,-0.07416640222072601,-0.023566940799355507,0.002802313072606921,-0.06328365206718445,-0.05760505795478821,-0.05260271206498146,-0.017126664519309998,0.030019603669643402,-0.0017016574274748564,-0.04594835266470909,0.08706831187009811,-0.00010139703954337165,0.033931076526641846,0.012603557668626308,-0.014591685496270657,-0.09838206321001053,-0.017025409266352654,0.01562511920928955,-0.03365541622042656,0.00747834425419569,-0.04143071547150612,0.012270771898329258,-0.05154578760266304,0.01226828619837761,0.040419112890958786,0.03903771564364433,0.01779276691377163,-0.04629473760724068,0.011190365999937057,0.03204459697008133,-0.0556454136967659,-0.046556759625673294,0.01027410477399826,0.03525348752737045,0.06075078248977661,0.060652535408735275,-0.09089513123035431,-0.007945011369884014,-0.023092301562428474,-0.05050498619675636,0.04798947647213936,-0.045598503202199936,0.03944806754589081,0.06527432799339294,-0.03728118911385536,-0.003321919124573469,-0.005523329135030508,0.04526245966553688,-0.028013333678245544,-0.09384306520223618,-0.0031882955227047205,-0.046331651508808136,-0.015705112367868423,-0.11157463490962982,-0.03132138028740883,-0.10656372457742691,-0.058223724365234375,-0.019193878397345543,0.024463988840579987,-0.03230352699756622,0.07390448451042175,0.03395889326930046,-0.005054121371358633,-0.0067186662927269936,0.014076676219701767,0.06321936845779419,0.1078607514500618,0.007483351975679398,-0.03986762464046478,-0.051645830273628235,-0.07204300165176392,0.14488470554351807,-4.251484254357878e-33,0.004541424103081226,-0.0072593968361616135,0.036373089998960495,0.05369780957698822,-0.04344585910439491,-0.10239909589290619,0.01064492017030716,0.0742974579334259,0.09457573294639587,-0.047634780406951904,0.012238960713148117,0.048874273896217346,0.002386148553341627,-0.09213000535964966,-0.010415194556117058,0.1015564501285553,-0.11788319051265717,-0.025804514065384865,0.014275218360126019,-0.09289498627185822,0.039417658001184464,0.03978904336690903,0.02744271047413349,0.037806298583745956,-0.02805648185312748,0.05291328579187393,0.06975939869880676,0.03005041368305683,0.06836134195327759,-0.10518363118171692,-0.017706915736198425,0.004990624729543924,0.05017460137605667,0.13562500476837158,-0.01473215315490961,-0.002922924468293786,0.07843710482120514,0.05199308693408966,0.01879349909722805,0.019565396010875702,-0.08038973808288574,0.019352935254573822,0.028988486155867577,0.02453017793595791,-0.013245470821857452,-0.05935976654291153,0.03222966939210892,0.04105557128787041,0.062191206961870193,-0.012578047811985016,0.0011611079098656774,-0.12867258489131927,-0.01926802285015583,0.026906825602054596,-0.008490895852446556,0.05198286473751068,-0.038909006863832474,-0.08345162868499756,0.11711572110652924,0.0061356727965176105,0.024385547265410423,-0.010708493180572987,0.03740345314145088,0.014098023064434528,-0.07097478955984116,-0.03825307637453079,-0.1090497225522995,-0.0167433712631464,0.046267781406641006,0.04688772186636925,0.030737876892089844,0.0812605544924736,0.004528254736214876,-0.03967766463756561,-0.03506382554769516,-0.03980635106563568,0.026860415935516357,-0.01709444634616375,0.028856633231043816,-0.09163219481706619,0.04029416665434837,-0.051536187529563904,-0.011525265872478485,-0.02644772082567215,-0.0017746095545589924,-0.015037198550999165,0.03869255632162094,-0.009542378596961498,-0.028042078018188477,-0.05429445952177048,-0.0288016889244318,0.03125391900539398,-0.014133907854557037,-0.0693994089961052,-0.07571705430746078,-3.682477256461425e-8,-0.037134889513254166,-0.0452265590429306,-0.045241814106702805,-0.02373029664158821,-0.007619593758136034,-0.038915544748306274,0.04350043088197708,-0.017533794045448303,-0.028025712817907333,-0.07389555126428604,0.05173704773187637,0.13267391920089722,0.07936685532331467,-0.03243822976946831,0.04964720457792282,-0.022878451272845268,-0.00762245524674654,-0.006765011232346296,-0.012122889049351215,0.025961503386497498,0.049935098737478256,0.027028417214751244,0.03317342698574066,0.09358271211385727,0.059487052261829376,-0.00490957498550415,0.06433858722448349,-0.04163224622607231,0.07908594608306885,0.04504714906215668,0.003605311969295144,0.029308566823601723,0.07499470561742783,0.0824769139289856,0.006528783589601517,0.007724465802311897,0.014009797014296055,0.051788780838251114,0.059623491019010544,0.04104907438158989,0.017173847183585167,0.0028719441033899784,-0.1421811729669571,-0.03179663047194481,-0.04150691255927086,-0.019664987921714783,-0.045284103602170944,-0.02948097325861454,0.06548149138689041,-0.009382286109030247,-0.03391682729125023,-0.03157978132367134,-0.09841808676719666,-0.05355530604720116,-0.03516684100031853,-0.017783312126994133,0.021619463339447975,0.08311259001493454,0.011598923243582249,0.018664544448256493,0.038771774619817734,0.04828598350286484,0.12080451101064682,-0.0007282527512870729]},{"id":"cHJvcGVydHktQ2Fy","type":"property","name":"null","qualifiedName":"CardRenderer.null","parentClass":"CardRenderer","parentClassId":"Y2xhc3MtQ2FyZFJl","file":"/mnt/c/dev/tarot/js/card-renderer.js","startLine":216,"endLine":216,"lines":1,"code":"null;","mtime":1752833881182.3926,"propertyType":"","isStatic":false,"embedding":[0.03534849360585213,0.052638184279203415,-0.051085151731967926,0.057521697133779526,-0.087825246155262,0.016473805531859398,0.02567330375313759,0.04920091852545738,-0.014890581369400024,0.01901208981871605,0.09442328661680222,-0.1213240772485733,-0.007873913273215294,-0.05048011988401413,-0.004762374330312014,0.11289168149232864,-0.037016093730926514,-0.06673826277256012,-0.012797437608242035,-0.008410804904997349,0.010317577049136162,0.0244126133620739,0.03140046447515488,-0.020458893850445747,-0.02230765111744404,0.06163091957569122,-0.0017441227100789547,-0.0672881081700325,0.008520644158124924,-0.004513581283390522,-0.040863003581762314,0.01027967780828476,-0.019123248755931854,-0.06880736351013184,0.13593590259552002,0.01609320193529129,0.061138663440942764,0.07715439796447754,-0.024203117936849594,0.05469568446278572,-0.0033735637553036213,0.0038536072243005037,0.011595796793699265,-0.021110111847519875,0.0003226108674425632,0.013396698981523514,-0.0031243176199495792,-0.055115070194005966,0.01995782181620598,-0.11445796489715576,-0.007125392556190491,0.054758135229349136,0.01945282146334648,-0.019045192748308182,0.02336835116147995,0.0027489252388477325,0.05741216614842415,0.06344301253557205,0.04126797989010811,-0.0008604682516306639,0.054153040051460266,-0.0110763655975461,-0.028403213247656822,0.01521592028439045,0.10321640968322754,-0.05755389854311943,-0.001086466247215867,-0.06259424239397049,-0.08397183567285538,-0.07560338824987411,-0.015095105394721031,-0.009420976974070072,0.03110039047896862,0.1211780235171318,0.02528601512312889,-0.03902916982769966,-0.017340904101729393,-0.020609473809599876,0.07856268435716629,0.02536315843462944,-0.09744090586900711,-0.10884613543748856,-0.06818929314613342,-0.00332063646055758,0.0883605033159256,0.050247516483068466,-0.018087051808834076,0.011339080519974232,-0.027896588668227196,0.1353582739830017,-0.11128070950508118,0.01746436022222042,-0.04691791906952858,0.04363058879971504,-0.0334719717502594,0.029323432594537735,-0.03211108595132828,-0.033129602670669556,-0.12048868089914322,0.06176654249429703,-0.028085751459002495,-0.011004706844687462,-0.048893269151449203,0.007180152460932732,-0.027610881254076958,-0.0023538838140666485,-0.003256408264860511,-0.025043925270438194,-0.011742967180907726,0.03721460700035095,-0.001181644620373845,0.021789900958538055,-0.04553503170609474,0.00711635360494256,-0.029548101127147675,-0.05113092437386513,-0.0401938371360302,-0.014931118115782738,0.031169582158327103,-0.037902723997831345,0.10672574490308762,-0.036305706948041916,-0.0038761221803724766,-0.057189565151929855,0.0036387299187481403,0.01341953780502081,0.07316678017377853,-3.610308289307969e-33,-0.01551171112805605,0.018999148160219193,-0.0027983938343822956,0.08024664968252182,0.012336558662354946,-0.06344997137784958,-0.010536493733525276,0.02581874281167984,0.039800237864255905,0.005968822631984949,0.033243726938962936,-0.08419334143400192,-0.029798105359077454,0.01514497958123684,-0.037131890654563904,0.09398908168077469,0.03402131795883179,-0.011938060633838177,-0.028401613235473633,-0.03746448829770088,-0.025708865374326706,0.038040801882743835,0.01033398974686861,-0.024860361590981483,0.04315579682588577,0.005079349502921104,-0.09577556699514389,0.01008090190589428,-0.056498363614082336,0.027650265023112297,0.04606488719582558,0.036362774670124054,0.08300163596868515,0.026982486248016357,-0.006244329735636711,0.04966764524579048,0.019672010093927383,-0.0016147881979122758,-0.028045179322361946,0.03726688027381897,0.0014552355278283358,-0.07620640844106674,-0.020928531885147095,-0.08924569934606552,0.0367705374956131,-0.10743636637926102,0.05442376062273979,0.043478209525346756,-0.04043048247694969,0.02496022917330265,-0.006613022182136774,0.06106671690940857,-0.011972648091614246,0.05636729300022125,0.04559999704360962,0.04109639301896095,-0.016610542312264442,-0.026847081258893013,-0.04002692177891731,-0.07730604708194733,-0.009767183102667332,0.03017396852374077,-0.026712210848927498,-0.06654977798461914,0.04844282194972038,0.03481903299689293,0.03987792506814003,-0.11490845680236816,0.007072444073855877,-0.16188716888427734,0.03859371691942215,-0.06677774339914322,-0.011811764910817146,0.022295864298939705,0.06433553993701935,0.014922784641385078,-0.03478018939495087,-0.034085970371961594,-0.022875552996993065,-0.027498818933963776,-0.0023407191038131714,-0.03147091716527939,-0.03230246901512146,0.041519973427057266,-0.05246217921376228,0.038021232932806015,0.059903115034103394,0.014854862354695797,0.02975713275372982,0.00522656599059701,-0.0022701339330524206,-0.08940009027719498,-0.05471843108534813,0.02203221432864666,0.054795123636722565,2.3903893437387188e-34,-0.009866995736956596,0.0011218100553378463,-0.06906457990407944,0.0353417843580246,-0.0008243370684795082,-0.06878350675106049,0.06820452213287354,-0.018565494567155838,-0.013543416745960712,0.007426098920404911,0.04453886300325394,-0.054158322513103485,-0.08104007691144943,0.033841073513031006,0.07439881563186646,0.09230025857686996,0.05750482901930809,-0.07624203711748123,-0.009760282933712006,0.005597778130322695,0.041463758796453476,0.07631674408912659,-0.003854827955365181,-0.022463859990239143,-0.07026579231023788,-0.05936800315976143,-0.055420707911252975,0.03164932504296303,0.018721962347626686,0.007251241710036993,0.05114484578371048,0.04606855660676956,-0.05883561074733734,-0.011667124927043915,-0.04384869337081909,-0.02536146529018879,0.1330760419368744,-0.07732855528593063,-0.035192131996154785,0.026616621762514114,-0.015592708252370358,0.0063818818889558315,0.05597139894962311,0.028182057663798332,0.021182801574468613,-0.0666695386171341,0.04314516857266426,0.00624076696112752,0.09987921267747879,0.03733965754508972,0.021910281851887703,-0.040740255266427994,0.08230733126401901,-0.0010739521821960807,-0.04426255077123642,0.03172546625137329,0.013660508207976818,-0.021810099482536316,0.06833600997924805,0.01255638524889946,-0.049042172729969025,0.02801179140806198,-0.10014848411083221,0.08289992809295654,-0.023060623556375504,0.006813838146626949,-0.010463531129062176,0.0754687711596489,0.044232454150915146,-0.08852079510688782,-0.02838645875453949,-0.07134277373552322,0.0007151448517106473,-0.08773847669363022,-0.006916265934705734,0.0657031312584877,0.02778485044836998,0.03994321823120117,0.05370233580470085,-0.06929954886436462,0.05891413986682892,-0.013769612647593021,-0.014701628126204014,-0.06427659094333649,0.06773011386394501,-0.019208643585443497,-0.016444910317659378,-0.05144054442644119,0.01638762094080448,0.012609024532139301,-0.061050835996866226,0.05370926111936569,-0.08656270056962967,-0.002061656676232815,-0.07167668640613556,-1.547517847200197e-8,-0.07883831113576889,-0.012101670727133751,0.02607894502580166,-0.011048564687371254,0.03274521604180336,-0.05335143208503723,0.07122145593166351,-0.029629725962877274,0.013229046948254108,0.030281279236078262,-0.04649947211146355,0.041673462837934494,0.013358309864997864,0.022524086758494377,-0.012888777069747448,-0.07058671116828918,-0.13911861181259155,0.011550480499863625,-0.009637939743697643,0.029359644278883934,0.010378115810453892,-0.05705961957573891,-0.056668829172849655,-0.0283084474503994,0.06644514948129654,-0.03546309843659401,0.10080310702323914,-0.019528256729245186,0.07390770316123962,0.07797738164663315,0.03259420767426491,0.17047494649887085,0.06016102060675621,0.033934980630874634,-0.07798977196216583,0.010365722700953484,0.13592064380645752,0.1012863740324974,-0.020194221287965775,-0.025168292224407196,0.02496720664203167,0.04492192342877388,-0.06200474873185158,-0.05220504850149155,0.006799457129091024,0.001569494721479714,-0.03249920904636383,0.012040043249726295,0.015731235966086388,0.00008256600267486647,-0.047092873603105545,0.04406828433275223,-0.040252286940813065,0.003822790924459696,-0.050037968903779984,-0.04652348533272743,0.0701155737042427,0.05311179906129837,0.022751091048121452,0.031321436166763306,-0.057863786816596985,-0.0427139587700367,-0.04836373031139374,-0.02773287147283554]},{"id":"ZXhwb3J0LTk0NDUt","type":"export","qualifiedName":"exports) {\n    module.exports = CardRenderer;","file":"/mnt/c/dev/tarot/js/card-renderer.js","startLine":221,"endLine":222,"lines":2,"code":"exports) {\n    module.exports = CardRenderer;","mtime":1752833881182.3926,"doc":"","modulePath":"","elements":[],"embedding":[-0.0677720382809639,0.00824678409844637,-0.09057573229074478,0.08003701269626617,0.07262666523456573,-0.017120512202382088,-0.013927632011473179,0.07057307660579681,-0.03375238552689552,-0.09760040044784546,0.04593190923333168,-0.07484626024961472,-0.07804808020591736,-0.01804586872458458,0.046603161841630936,0.003646581433713436,0.032415688037872314,0.002387041924521327,0.04232592135667801,0.058432839810848236,0.06115235388278961,-0.01799899712204933,0.03691234812140465,0.030355513095855713,-0.0012823936995118856,0.024608122184872627,0.025238826870918274,-0.03542273864150047,0.018338657915592194,0.016889451071619987,-0.013905543833971024,0.10171670466661453,-0.004673575516790152,0.04875814542174339,0.05764748156070709,0.09187083691358566,0.027249464765191078,-0.08533008396625519,-0.05732853338122368,-0.1002693623304367,0.058429524302482605,0.0017936242511495948,-0.03015165962278843,-0.06079050153493881,-0.019401563331484795,-0.04015647619962692,0.02054234780371189,-0.01704038307070732,-0.03589239716529846,-0.006903562229126692,0.0009554594289511442,0.013994438573718071,-0.05624733120203018,-0.08013426512479782,0.005045338999480009,-0.007134304381906986,-0.03203073516488075,-0.11522957682609558,0.04105168208479881,0.02543187141418457,0.028173886239528656,0.0312945619225502,0.010537885129451752,0.03695721924304962,0.004069563467055559,-0.06419171392917633,0.010684202425181866,0.06759489327669144,-0.017376575618982315,-0.06800387799739838,-0.023818721994757652,0.009189044125378132,-0.0184786356985569,-0.017572276294231415,-0.03349246457219124,-0.09417328238487244,0.02486707828938961,-0.029316499829292297,0.027245579287409782,-0.05439544469118118,-0.04062779247760773,0.00024006649618968368,0.0036659108009189367,0.04767521470785141,0.016548214480280876,0.055414680391550064,0.03187289834022522,0.05912473797798157,-0.019815221428871155,-0.058167267590761185,-0.08393701910972595,-0.06917940080165863,0.03344042971730232,0.11216394603252411,-0.11644095182418823,-0.03349867835640907,0.01131564099341631,0.045523326843976974,-0.051686279475688934,-0.03631854057312012,-0.011182981543242931,-0.0021350958850234747,0.06857359409332275,-0.0111762136220932,0.01608678698539734,-0.04034305736422539,-0.002633372787386179,0.08267895877361298,-0.004325799643993378,-0.04230060055851936,-0.019524971023201942,0.026537302881479263,-0.059210650622844696,-0.12714464962482452,0.024231482297182083,-0.007238057442009449,-0.08895132690668106,-0.037309300154447556,0.0486936941742897,0.13277186453342438,0.0475662425160408,-0.02028742991387844,0.09363076835870743,0.02539907954633236,-0.009950784035027027,-0.021028485149145126,0.06697504967451096,2.758278438339045e-34,0.0019786469638347626,-0.08116035163402557,-0.007891018874943256,0.07249140739440918,0.04932093992829323,-0.006297781597822905,0.03182520717382431,-0.03431307524442673,-0.036568135023117065,-0.004314605612307787,0.0005938850808888674,0.03750963136553764,-0.03715963289141655,0.1783592849969864,0.03419105336070061,-0.0775710940361023,-0.020367508754134178,-0.02275477908551693,0.11496204882860184,0.0056702131405472755,-0.007088279351592064,0.014131298288702965,0.047705769538879395,0.009959856979548931,-0.017927071079611778,0.07156125456094742,-0.017842350527644157,-0.023872988298535347,0.03351341560482979,0.02126077190041542,0.07412678748369217,-0.04169829562306404,0.07625380903482437,0.0181056447327137,-0.015852371230721474,0.081385537981987,-0.011557272635400295,0.041065774857997894,-0.16163431107997894,0.03208765387535095,-0.08211129903793335,-0.013619096018373966,-0.07129011303186417,-0.04048532992601395,0.03423374891281128,-0.03593365103006363,0.016298264265060425,0.04754626750946045,0.0016941661015152931,0.03006060980260372,-0.07654479146003723,0.033154986798763275,0.06869563460350037,-0.028913626447319984,0.019289696589112282,-0.07250356674194336,0.016781263053417206,0.053831398487091064,0.06737265735864639,-0.09706935286521912,-0.09462825208902359,0.014011104591190815,-0.07625400274991989,0.0020539581310003996,-0.002747512189671397,0.0822644829750061,0.02722093090415001,-0.07466372847557068,-0.1117313876748085,0.019132640212774277,-0.026858188211917877,0.04163059964776039,0.01924435794353485,0.009904124774038792,0.06969846785068512,0.06435850262641907,-0.09442842751741409,0.015560073778033257,-0.1115470752120018,-0.03364282101392746,-0.12257415801286697,0.004693793132901192,-0.057110510766506195,-0.01447338704019785,-0.06805270910263062,-0.04189871996641159,0.04175066947937012,0.025602875277400017,0.07928161323070526,0.03407546877861023,-0.020634500309824944,-0.020563887432217598,0.026441091671586037,-0.04208254814147949,-0.027516203001141548,-1.8476741630461268e-33,0.03758373484015465,-0.005749724339693785,-0.05763431265950203,0.020170176401734352,-0.012585884891450405,-0.06835506111383438,-0.012550417333841324,0.05841498449444771,0.06234726309776306,-0.0607331357896328,-0.03562867268919945,0.0193368811160326,-0.03332871198654175,-0.018994862213730812,-0.02670918218791485,0.06881579756736755,-0.02522132731974125,0.0556914247572422,0.025769932195544243,-0.1064809262752533,-0.04649757966399193,0.05807669833302498,0.038677703589200974,0.009149744175374508,-0.016593702137470245,0.08828061074018478,0.027179088443517685,0.01627824455499649,0.03851485624909401,-0.07441990077495575,0.07435201853513718,0.025056516751646996,0.027788713574409485,0.029514078050851822,-0.11599725484848022,0.04545488581061363,0.014280613511800766,0.041209928691387177,-0.015963133424520493,0.009537509642541409,-0.015448401682078838,-0.011329704895615578,-0.04378580302000046,0.0771820992231369,-0.05856757611036301,-0.0720008984208107,-0.02318349853157997,-0.042256832122802734,0.04081060737371445,-0.02953772060573101,-0.005626313388347626,-0.09360145777463913,-0.047022245824337006,-0.08610101789236069,0.03299654647707939,-0.007531729061156511,0.06701906025409698,0.026095448061823845,0.03300902992486954,-0.05656855180859566,0.05895520746707916,-0.07220861315727234,0.019087711349129677,-0.04186584800481796,-0.037419211119413376,-0.022264009341597557,-0.05545831099152565,0.032294031232595444,0.06844493001699448,0.02547364868223667,-0.004917732439935207,0.0864105224609375,-0.0402836836874485,0.037025514990091324,0.00630186777561903,-0.01804412342607975,0.01534086000174284,0.029131103307008743,0.08915751427412033,-0.036673542112112045,0.0029338474851101637,-0.0684831440448761,0.02259807102382183,-0.00815767701715231,0.024777766317129135,-0.08842618018388748,0.04322358965873718,0.03219259902834892,0.02103513851761818,-0.08794031292200089,0.027165932580828667,0.011525295674800873,0.045325834304094315,0.04803190752863884,-0.06251028925180435,-2.2517422593182346e-8,-0.05626280978322029,-0.006532079074531794,-0.09118907153606415,-0.010982275940477848,-0.07395776361227036,0.0003578713512979448,0.11650582402944565,-0.01559770479798317,0.019163938239216805,-0.013083579950034618,0.05994585528969765,0.034802041947841644,0.020814239978790283,-0.02048090100288391,0.06572025269269943,0.01274431124329567,0.022267373278737068,0.05463963374495506,-0.022950122132897377,-0.05119907483458519,-0.0061887577176094055,0.009437528438866138,0.0541052520275116,0.0025291964411735535,-0.0024341358803212643,0.003130342112854123,0.033354271203279495,0.02283826842904091,0.06309574842453003,0.003939109388738871,-0.017415108159184456,0.05756780505180359,0.0024424856528639793,0.008625159040093422,0.07931346446275711,0.03467963635921478,0.017275627702474594,-0.004627699498087168,0.05731755867600441,0.09234286099672318,-0.08111689239740372,-0.033078595995903015,-0.10878041386604309,-0.04347144439816475,0.04834815859794617,-0.05317675322294235,-0.04512482136487961,-0.014811315573751926,-0.006995141040533781,0.01524747721850872,0.00693095475435257,0.0022713402286171913,-0.07385172694921494,0.021387942135334015,0.005167103838175535,0.0026108266320079565,-0.021768124774098396,-0.008660438470542431,0.035066671669483185,-0.08207206428050995,0.0275767520070076,0.08286629617214203,0.07843451201915741,0.03306534141302109]},{"id":"Y2xhc3MtVGFyb3RE","type":"class","name":"TarotDataLoader","qualifiedName":"TarotDataLoader","parentClass":null,"file":"/mnt/c/dev/tarot/js/data-loader.js","startLine":5,"endLine":436,"lines":432,"code":"class TarotDataLoader {\n    constructor() {\n        this.dataCache = {};\n        this.isLoaded = false;\n        this.loadPromise = null;\n    }\n\n    /**\n     * Load all JSON databases\n     * @returns {Promise} Promise that resolves when all data is loaded\n     */\n    async loadAllData() {\n        if (this.loadPromise) {\n            return this.loadPromise;\n        }\n\n        this.loadPromise = this._loadDataSources();\n        return this.loadPromise;\n    }\n\n    /**\n     * Internal method to load all data sources\n     * @private\n     */\n    async _loadDataSources() {\n        const dataSources = [\n            'numerology',\n            'astrology', \n            'kabbalah',\n            'psychology',\n            'mythology',\n            'alchemy',\n            'sacred_geometry',\n            'chakras',\n            'colors',\n            'elements',\n            'card_combinations',\n            'timing_cycles',\n            'healing_therapeutics',\n            'divination_techniques',\n            'cross_cultural_symbols',\n            'dream_symbolism',\n            'plant_animal_correspondences',\n            'card_relationship_matrix',\n            'synthetic_readings_context',\n            'master_spread_interpretations',\n            'mystical_oracular_wisdom',\n            'esoteric_correspondences',\n            'comprehensive_applications',\n            'professional_reading_mastery',\n            'master_reference_compendium'\n        ];\n\n        const loadPromises = dataSources.map(source => this._loadJSONFile(source));\n        \n        try {\n            await Promise.all(loadPromises);\n            this.isLoaded = true;\n            console.log('All tarot databases loaded successfully');\n        } catch (error) {\n            console.error('Error loading tarot databases:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Load individual JSON file\n     * @private\n     */\n    async _loadJSONFile(sourceName) {\n        try {\n            const response = await fetch(`data/${sourceName}.json`);\n            if (!response.ok) {\n                throw new Error(`Failed to load ${sourceName}.json: ${response.statusText}`);\n            }\n            const data = await response.json();\n            this.dataCache[sourceName] = data;\n        } catch (error) {\n            console.error(`Error loading ${sourceName}.json:`, error);\n            throw error;\n        }\n    }\n\n    /**\n     * Get data from specific source\n     * @param {string} source - The data source name\n     * @returns {Object} The data from that source\n     */\n    getData(source) {\n        if (!this.isLoaded) {\n            throw new Error('Data not loaded yet. Call loadAllData() first.');\n        }\n        return this.dataCache[source] || {};\n    }\n\n    /**\n     * Get numerology data for a specific number\n     * @param {number|string} number - Life path number\n     * @returns {Object} Numerology data for that number\n     */\n    getNumerologyData(number) {\n        const data = this.getData('numerology');\n        return data.lifePath?.[number.toString()] || {};\n    }\n\n    /**\n     * Get astrological data for a planet or sign\n     * @param {string} type - 'planets' or 'zodiac_signs'\n     * @param {string} name - Planet or sign name\n     * @returns {Object} Astrological data\n     */\n    getAstrologyData(type, name) {\n        const data = this.getData('astrology');\n        return data[type]?.[name] || {};\n    }\n\n    /**\n     * Get Kabbalistic data for a sephirah or path\n     * @param {string} type - 'sephiroth' or 'paths'\n     * @param {string|number} identifier - Sephirah name or path number\n     * @returns {Object} Kabbalistic data\n     */\n    getKabbalahData(type, identifier) {\n        const data = this.getData('kabbalah');\n        return data[type]?.[identifier] || {};\n    }\n\n    /**\n     * Get psychological archetype data for a tarot card\n     * @param {string} cardName - Tarot card name\n     * @returns {Object} Jungian archetype data\n     */\n    getPsychologyData(cardName) {\n        const data = this.getData('psychology');\n        return data.jungian_archetypes?.major_arcana_correspondences?.[cardName] || {};\n    }\n\n    /**\n     * Get mythological correspondences\n     * @param {string} type - Type of mythological data\n     * @returns {Object} Mythological data\n     */\n    getMythologyData(type) {\n        const data = this.getData('mythology');\n        return data[type] || {};\n    }\n\n    /**\n     * Get alchemical data\n     * @param {string} type - Type of alchemical data\n     * @returns {Object} Alchemical data\n     */\n    getAlchemyData(type) {\n        const data = this.getData('alchemy');\n        return data[type] || {};\n    }\n\n    /**\n     * Get sacred geometry data\n     * @param {string} type - Type of geometric data\n     * @returns {Object} Sacred geometry data\n     */\n    getSacredGeometryData(type) {\n        const data = this.getData('sacred_geometry');\n        return data[type] || {};\n    }\n\n    /**\n     * Get chakra system data\n     * @param {string} chakra - Chakra name or system type\n     * @returns {Object} Chakra data\n     */\n    getChakraData(chakra) {\n        const data = this.getData('chakras');\n        if (chakra && data.chakra_system) {\n            return data.chakra_system[chakra] || {};\n        }\n        return data.chakra_system || {};\n    }\n\n    /**\n     * Get color psychology data\n     * @param {string} color - Color name\n     * @returns {Object} Color data\n     */\n    getColorData(color) {\n        const data = this.getData('colors');\n        return data.color_psychology?.[color] || {};\n    }\n\n    /**\n     * Get elemental correspondence data\n     * @param {string} element - Element name\n     * @returns {Object} Elemental data\n     */\n    getElementalData(element) {\n        const data = this.getData('elements');\n        return data.classical_elements?.[element] || {};\n    }\n\n    /**\n     * Get comprehensive card analysis data\n     * @param {string} cardName - Tarot card name\n     * @param {string} suit - Card suit (for minor arcana)\n     * @returns {Object} Comprehensive analysis data\n     */\n    getCardAnalysis(cardName, suit = null) {\n        const analysis = {\n            psychology: this.getPsychologyData(cardName),\n            numerology: {},\n            astrology: {},\n            kabbalah: {},\n            mythology: {},\n            alchemy: {},\n            chakras: {},\n            colors: {},\n            elements: {}\n        };\n\n        // Add suit-specific elemental data for minor arcana\n        if (suit) {\n            const suitElements = {\n                'Wands': 'fire',\n                'Cups': 'water', \n                'Swords': 'air',\n                'Pentacles': 'earth'\n            };\n            \n            const element = suitElements[suit];\n            if (element) {\n                analysis.elements = this.getElementalData(element);\n            }\n        }\n\n        // Extract number for numerological analysis\n        const numberMatch = cardName.match(/(\\d+)/);\n        if (numberMatch) {\n            const number = numberMatch[1];\n            analysis.numerology = this.getNumerologyData(number);\n        }\n\n        return analysis;\n    }\n\n    /**\n     * Search across all databases for a keyword\n     * @param {string} keyword - Search term\n     * @returns {Array} Array of search results with source and context\n     */\n    searchAll(keyword) {\n        if (!this.isLoaded) {\n            throw new Error('Data not loaded yet. Call loadAllData() first.');\n        }\n\n        const results = [];\n        const searchTerm = keyword.toLowerCase();\n\n        Object.keys(this.dataCache).forEach(source => {\n            const sourceResults = this._searchInObject(this.dataCache[source], searchTerm, source);\n            results.push(...sourceResults);\n        });\n\n        return results;\n    }\n\n    /**\n     * Recursively search within an object for a keyword\n     * @private\n     */\n    _searchInObject(obj, searchTerm, source, path = '') {\n        const results = [];\n\n        if (typeof obj === 'string' && obj.toLowerCase().includes(searchTerm)) {\n            results.push({\n                source,\n                path,\n                content: obj,\n                type: 'text'\n            });\n        } else if (Array.isArray(obj)) {\n            obj.forEach((item, index) => {\n                const itemResults = this._searchInObject(item, searchTerm, source, `${path}[${index}]`);\n                results.push(...itemResults);\n            });\n        } else if (typeof obj === 'object' && obj !== null) {\n            Object.keys(obj).forEach(key => {\n                if (key.toLowerCase().includes(searchTerm)) {\n                    results.push({\n                        source,\n                        path: path ? `${path}.${key}` : key,\n                        content: obj[key],\n                        type: 'key'\n                    });\n                }\n                \n                const valueResults = this._searchInObject(\n                    obj[key], \n                    searchTerm, \n                    source, \n                    path ? `${path}.${key}` : key\n                );\n                results.push(...valueResults);\n            });\n        }\n\n        return results;\n    }\n\n    /**\n     * Get all available quotes from academic sources\n     * @returns {Array} Array of quotes with attribution\n     */\n    getAllQuotes() {\n        if (!this.isLoaded) {\n            throw new Error('Data not loaded yet. Call loadAllData() first.');\n        }\n\n        const quotes = [];\n        \n        Object.keys(this.dataCache).forEach(source => {\n            const sourceQuotes = this._extractQuotes(this.dataCache[source], source);\n            quotes.push(...sourceQuotes);\n        });\n\n        return quotes;\n    }\n\n    /**\n     * Extract quotes from an object recursively\n     * @private\n     */\n    _extractQuotes(obj, source, path = '') {\n        const quotes = [];\n\n        if (typeof obj === 'object' && obj !== null && !Array.isArray(obj)) {\n            if (obj.quote && obj.author && obj.source) {\n                quotes.push({\n                    quote: obj.quote,\n                    author: obj.author,\n                    source: obj.source,\n                    database: source,\n                    path: path\n                });\n            }\n\n            Object.keys(obj).forEach(key => {\n                const newPath = path ? `${path}.${key}` : key;\n                const nestedQuotes = this._extractQuotes(obj[key], source, newPath);\n                quotes.push(...nestedQuotes);\n            });\n        } else if (Array.isArray(obj)) {\n            obj.forEach((item, index) => {\n                const nestedQuotes = this._extractQuotes(item, source, `${path}[${index}]`);\n                quotes.push(...nestedQuotes);\n            });\n        }\n\n        return quotes;\n    }\n\n    /**\n     * Get random quote from any database\n     * @param {string} [source] - Optional specific source to get quote from\n     * @returns {Object} Random quote object\n     */\n    getRandomQuote(source = null) {\n        const allQuotes = this.getAllQuotes();\n        const filteredQuotes = source ? \n            allQuotes.filter(q => q.database === source) : \n            allQuotes;\n\n        if (filteredQuotes.length === 0) {\n            return null;\n        }\n\n        const randomIndex = Math.floor(Math.random() * filteredQuotes.length);\n        return filteredQuotes[randomIndex];\n    }\n\n    /**\n     * Get integration suggestions between different analytical systems\n     * @param {Array} cards - Array of card names\n     * @returns {Object} Integration suggestions\n     */\n    getIntegrationSuggestions(cards) {\n        const suggestions = {\n            numerological_patterns: [],\n            elemental_balance: {},\n            psychological_themes: [],\n            spiritual_synthesis: [],\n            practical_applications: []\n        };\n\n        // Analyze numerological patterns\n        const numbers = cards.map(card => {\n            const match = card.match(/(\\d+)/);\n            return match ? parseInt(match[1]) : null;\n        }).filter(n => n !== null);\n\n        if (numbers.length > 0) {\n            const sum = numbers.reduce((a, b) => a + b, 0);\n            const average = Math.round(sum / numbers.length);\n            suggestions.numerological_patterns.push({\n                pattern: 'average_number',\n                value: average,\n                meaning: this.getNumerologyData(average)\n            });\n        }\n\n        // Analyze elemental balance\n        const suitElements = {\n            'Wands': 'fire',\n            'Cups': 'water',\n            'Swords': 'air', \n            'Pentacles': 'earth'\n        };\n\n        const elementCounts = { fire: 0, water: 0, air: 0, earth: 0 };\n        \n        cards.forEach(card => {\n            Object.keys(suitElements).forEach(suit => {\n                if (card.includes(suit)) {\n                    elementCounts[suitElements[suit]]++;\n                }\n            });\n        });\n\n        suggestions.elemental_balance = elementCounts;\n\n        return suggestions;\n    }\n}","mtime":1753008239049.4465,"doc":"Data Loader Module Loads all JSON databases and provides unified access to tarot correspondence data","isExported":false,"methods":["bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90"],"properties":["cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy"],"embedding":[-0.09489098936319351,0.07786231487989426,-0.03605945035815239,-0.003467737464234233,-0.01539886649698019,-0.10101477801799774,-0.02115994691848755,0.016682671383023262,-0.03688840940594673,-0.04747147858142853,0.030614983290433884,0.019553031772375107,-0.04368182644248009,-0.06725018471479416,0.002589923795312643,0.06718306243419647,-0.008197194896638393,-0.014398084953427315,-0.0035298760049045086,-0.05314783751964569,0.044535961002111435,-0.02297143079340458,-0.02856435626745224,-0.014351633377373219,0.02845079079270363,0.034245654940605164,-0.028387032449245453,-0.00031891989056020975,0.08920449763536453,-0.015739547088742256,-0.0832323282957077,-0.027790307998657227,-0.11482175439596176,0.029592175036668777,-0.0005614145193248987,0.09052044153213501,-0.002734743058681488,0.008133181370794773,-0.0012155601289123297,0.03369569405913353,0.07879460602998734,0.0025250662583857775,-0.0675293356180191,-0.01779782399535179,-0.05440472438931465,-0.08017807453870773,-0.029956363141536713,0.003438703715801239,-0.016333676874637604,0.006542281247675419,0.005449631251394749,0.024495309218764305,0.004872614983469248,0.04479638859629631,0.0005019462550990283,-0.028032876551151276,0.06905727833509445,0.021019484847784042,-0.0630062073469162,0.012821163982152939,-0.035058774054050446,0.048499494791030884,0.005739396903663874,0.010889356024563313,0.06401646882295609,-0.032025426626205444,-0.046037863940000534,0.008651084266602993,0.03931926563382149,-0.10637596994638443,-0.02299722656607628,-0.05467238277196884,0.055270273238420486,0.0687478557229042,-0.014132170006632805,0.042330268770456314,0.06401736289262772,0.0728515237569809,-0.005692510865628719,-0.056211695075035095,-0.09878280758857727,-0.03454086184501648,0.030024278908967972,-0.022010283544659615,-0.055635470896959305,-0.00534571148455143,0.023445578292012215,-0.027831370010972023,0.07631107419729233,0.01578657701611519,0.03633696585893631,0.003447904484346509,-0.0874103233218193,0.051473576575517654,-0.06645938009023666,0.026721253991127014,0.057574838399887085,0.0005587890627793968,-0.054677046835422516,0.015484350733458996,-0.058943528681993484,0.0041436986066401005,0.04429583251476288,0.033656325191259384,0.02577819675207138,-0.08316025882959366,-0.002901693806052208,-0.11002250760793686,-0.061788443475961685,0.04367867857217789,0.007463769055902958,0.0018894517561420798,-0.03962107375264168,-0.07146602869033813,0.026316029950976372,-0.05008229240775108,-0.1273244172334671,-0.01998329907655716,-0.03881940245628357,0.0005256726872175932,0.06343632936477661,-0.022332031279802322,0.07343527674674988,-0.020587783306837082,0.023441649973392487,-0.06918980181217194,-0.03362114354968071,7.250440339664238e-33,0.04877014830708504,-0.060196928679943085,0.06535589694976807,0.013414481654763222,0.003424357157200575,-0.018930494785308838,0.01766527257859707,0.06409617513418198,0.005735918413847685,0.04220264032483101,-0.04797029495239258,0.035486456006765366,-0.014027014374732971,0.04366786405444145,-0.03943505883216858,0.048544660210609436,-0.006980483885854483,-0.013723816722631454,0.048677150160074234,0.00519616948440671,0.03589342162013054,0.003366223769262433,0.06625819951295853,-0.056544236838817596,-0.0017730880063027143,0.049416445195674896,0.003213614458218217,0.021617375314235687,-0.009049399755895138,0.04849010705947876,0.07546845823526382,-0.0582633912563324,-0.02606402151286602,0.049609143286943436,0.03921908885240555,0.02948826551437378,0.000050260354328202084,-0.02450026199221611,-0.10922858119010925,0.011487964540719986,0.053321655839681625,-0.001050814287737012,0.029706360772252083,-0.04680857062339783,-0.10291466861963272,-0.08422844856977463,0.061197780072689056,-0.030401678755879402,-0.013654153794050217,-0.030340610072016716,-0.04744723439216614,0.04000626876950264,-0.012178756296634674,0.0830874890089035,0.021295031532645226,-0.015463859774172306,0.02514505572617054,-0.059845298528671265,0.06209409981966019,0.03385654464364052,-0.06584083288908005,-0.04236433655023575,0.017391376197338104,0.007236914709210396,0.01851947046816349,-0.032140977680683136,-0.04970394819974899,-0.0845804288983345,0.04274193197488785,0.01817299798130989,0.026589415967464447,0.006576367653906345,0.08854690194129944,-0.0010835460852831602,0.06035705655813217,0.0438091866672039,-0.09487755596637726,-0.005661824718117714,-0.05376704782247543,-0.028833117336034775,0.0024336527567356825,-0.07647064328193665,-0.005681958515197039,-0.024760033935308456,-0.03446226194500923,0.05568947270512581,0.02859136275947094,-0.030642716214060783,0.012769249267876148,0.00890806969255209,-0.03224056586623192,0.028042584657669067,-0.003960493952035904,-0.08100593835115433,-0.009264455176889896,-8.338480849521225e-33,0.10725270211696625,-0.04523560777306557,-0.03432895243167877,-0.010866505093872547,0.07274797558784485,-0.016506584361195564,0.017980922013521194,0.0005649857339449227,-0.03206103295087814,0.05201683193445206,0.02418438158929348,-0.02683630771934986,0.03507990762591362,0.04989471286535263,0.0711277574300766,0.14070649445056915,-0.006013441830873489,-0.05340353399515152,0.004159140400588512,-0.002881815191358328,0.00048597159911878407,0.06415627896785736,-0.04743191972374916,0.042968202382326126,-0.09310800582170486,-0.12106312811374664,-0.04052984341979027,-0.023111578077077866,0.005420647095888853,-0.012157103978097439,0.05366376414895058,0.012646016664803028,-0.014717930927872658,-0.08276428282260895,-0.10235970467329025,0.06443392485380173,0.11484946310520172,0.04760413244366646,-0.02388153225183487,0.0035518051590770483,0.04502987489104271,-0.01200190931558609,-0.13936734199523926,-0.05401904508471489,-0.006792173255234957,-0.10760419815778732,-0.06729089468717575,0.06157226487994194,-0.020064493641257286,0.031831953674554825,0.09715625643730164,-0.04913530871272087,0.03622781112790108,0.012121324427425861,0.09780103713274002,0.07197082042694092,0.019444068893790245,0.025765711441636086,-0.04665433242917061,0.11976198107004166,0.0016433789860457182,-0.13275593519210815,-0.0179959274828434,-0.11085835844278336,-0.040884725749492645,-0.027396000921726227,0.005976023618131876,-0.06620913743972778,0.01077140960842371,0.016974927857518196,-0.0011293342104181647,0.03330650553107262,-0.0030727707780897617,0.004391977563500404,0.020095231011509895,-0.015750806778669357,0.04368598014116287,-0.022669924423098564,0.08209045976400375,-0.024643559008836746,0.022865669801831245,-0.08080635219812393,0.06461113691329956,0.025111351162195206,0.08260953426361084,-0.01581299677491188,0.04378589242696762,0.01744244433939457,0.003001067554578185,-0.014715534634888172,-0.014159716665744781,-0.029877465218305588,-0.048776570707559586,0.11536727845668793,0.07277558743953705,-4.815736076579924e-8,-0.04878973960876465,-0.028683912009000778,0.008525093086063862,0.01671437732875347,0.027021408081054688,-0.031379614025354385,0.049050554633140564,0.09478966891765594,0.004440579563379288,0.007002084515988827,0.10401223599910736,0.10819660872220993,0.011770659126341343,-0.011139174923300743,0.05634167417883873,0.03871307149529457,0.03743954747915268,0.030956609174609184,-0.03866712749004364,-0.00023249218065757304,0.007158392108976841,-0.006982589606195688,-0.047531869262456894,-0.031221911311149597,0.09188360720872879,0.022677700966596603,0.04228224232792854,0.009584776125848293,-0.04625552147626877,-0.04535505920648575,-0.03899400308728218,0.03261919319629669,0.043523408472537994,-0.12844954431056976,0.047424908727407455,0.08831889927387238,0.03950163349509239,-0.013456364162266254,0.08897092938423157,0.09496861696243286,0.031158166006207466,0.008804370649158955,-0.04767763987183571,-0.016343707218766212,0.04011057689785957,0.036763373762369156,-0.1768958866596222,0.021787188947200775,-0.0912664458155632,-0.04968540370464325,-0.031236965209245682,0.011736541986465454,-0.018493402749300003,0.022330082952976227,0.041036464273929596,-0.021925171837210655,-0.04655028507113457,-0.021652845665812492,0.004574861377477646,0.07178637385368347,0.07928404211997986,0.00976235419511795,0.05785468593239784,-0.09383532404899597]},{"id":"bWV0aG9kLVRhcm90","type":"method","name":"if","qualifiedName":"TarotAppController.if","parentClass":"TarotAppController","parentClassId":"Y2xhc3MtVGFyb3RB","file":"/mnt/c/dev/tarot/js/tarot-app-controller.js","startLine":2142,"endLine":2147,"lines":6,"code":"\n        if (this.drawnCards.length < this.currentSpread.cardCount) {\n            setTimeout(() => {\n                this.showCardPicker();\n            }, 300);\n        }","mtime":1753008922904.6213,"doc":"Check if more cards needed","parameters":[{"name":"this.drawnCards.length < this.currentSpread.cardCount","type":""}],"returnType":"","isStatic":false,"complexity":1.5,"relationships":{"calls":["setTimeout","showCardPicker"],"dependencies":["drawnCards","length","currentSpread","cardCount","300"]},"embedding":[-0.019648924469947815,0.040780726820230484,-0.030512256547808647,0.020502477884292603,-0.041551705449819565,0.07575210928916931,-0.00262584094889462,-0.01765856146812439,-0.019214216619729996,-0.09515693038702011,-0.039838697761297226,-0.10272365063428879,-0.07410087436437607,-0.0149803776293993,-0.0024495201651006937,-0.024702144786715508,0.01290995255112648,-0.06052718311548233,0.01721137762069702,0.01771470159292221,0.08536623418331146,-0.05991344526410103,0.008837142959237099,0.02590803988277912,0.01618468016386032,0.06977005302906036,0.022757720202207565,-0.09806066006422043,-0.002703465521335602,0.009220392443239689,-0.010779187083244324,0.0529627725481987,-0.009591400623321533,0.005649389233440161,0.004435308743268251,-0.07646828889846802,-0.14123304188251495,0.03906961530447006,-0.0003214366442989558,0.014619559980928898,0.009842721745371819,-0.020370686426758766,-0.04939818009734154,-0.018742527812719345,0.014079212211072445,-0.019444234669208527,-0.08315219730138779,0.04477826505899429,0.05597655847668648,0.05657694861292839,-0.0009789414471015334,-0.019750243052840233,0.005478862673044205,-0.07667029649019241,0.04120573401451111,-0.04156113043427467,0.005606605671346188,-0.08023697882890701,-0.030325530096888542,0.0519060418009758,0.08596906810998917,-0.056743595749139786,0.010378152132034302,0.01179500762373209,-0.05935690924525261,0.03577680140733719,0.0101091293618083,0.0016432559350505471,0.016356337815523148,-0.012552819214761257,-0.0018888403428718448,0.11064332723617554,0.04027402400970459,0.035036299377679825,0.015573017299175262,-0.013876623474061489,0.05167871713638306,-0.09101834893226624,0.04880523681640625,-0.05782466381788254,-0.1283848136663437,-0.09971241652965546,-0.025414815172553062,0.016523633152246475,0.09831523150205612,0.04415375739336014,0.045862309634685516,0.05170377343893051,-0.025424474850296974,-0.09599720686674118,-0.039508167654275894,-0.003599578281864524,-0.020022541284561157,0.0012137320591136813,-0.049250829964876175,0.08506724238395691,-0.10609893500804901,-0.028682978823781013,-0.08646845072507858,0.0065933153964579105,0.015317490324378014,-0.05035332590341568,0.09046994894742966,0.010023027658462524,0.04626309499144554,-0.03866742178797722,0.059390079230070114,-0.013906305655837059,-0.001993706915527582,0.012272357940673828,0.04484528303146362,0.041620295494794846,0.09932989627122879,0.0020449492149055004,-0.00890838261693716,0.07267982512712479,-0.04360515624284744,0.05156927555799484,0.04428449273109436,0.062279898673295975,0.05953381210565567,0.013125424273312092,0.052712421864271164,-0.06602064520120621,-0.0384153351187706,-0.04543721675872803,0.08958936482667923,3.0771277453329883e-33,-0.02068238891661167,-0.07179414480924606,-0.005130510311573744,0.04985722154378891,0.04147599637508392,-0.05527214705944061,-0.005445767659693956,-0.01838686689734459,0.03517485037446022,-0.044848959892988205,0.0638468936085701,-0.02914102002978325,0.0383501797914505,0.045760203152894974,-0.0182939525693655,-0.017762238159775734,-0.005507238674908876,0.015698738396167755,0.08233091235160828,-0.005642439238727093,-0.02140519954264164,-0.16195058822631836,-0.01525619626045227,-0.02413344383239746,-0.04332609847187996,0.05433769151568413,-0.0833316519856453,-0.007041980046778917,-0.019961513578891754,-0.01104893907904625,0.09851217269897461,-0.0005116448737680912,-0.045676324516534805,0.020294487476348877,0.050716083496809006,0.03962201997637749,-0.02121002785861492,0.041897132992744446,0.0054879505187273026,0.02000407688319683,-0.06848437339067459,-0.059172939509153366,-0.03664616867899895,-0.05487540736794472,-0.006543515715748072,-0.044552531093358994,0.01311845425516367,0.048613470047712326,-0.000049143400246975943,0.10356995463371277,0.0317966565489769,-0.0023525895085185766,-0.03357185423374176,-0.020682746544480324,0.005049184430390596,-0.053142249584198,-0.011040296405553818,0.11457780748605728,0.05863229185342789,-0.013922170735895634,-0.0024496852420270443,-0.022040437906980515,-0.030465733259916306,0.04491308704018593,-0.03331833705306053,0.05777205154299736,-0.006936545018106699,-0.06656711548566818,-0.022802036255598068,-0.006638686638325453,0.018903587013483047,-0.0411708690226078,0.012041124515235424,-0.0328388586640358,-0.06225762143731117,-0.06048496067523956,0.004929825197905302,0.00957630667835474,-0.08244115859270096,-0.02999981865286827,-0.05381748825311661,-0.059768881648778915,-0.010763025842607021,-0.04249391332268715,0.029317213222384453,0.004622072912752628,0.03443775326013565,-0.006781032774597406,0.030991049483418465,0.046891383826732635,-0.046371303498744965,0.017140094190835953,0.005391538143157959,-0.02608739212155342,0.07765533030033112,-3.477433346626895e-33,0.008159936405718327,0.026604846119880676,0.054025910794734955,0.047815486788749695,0.0005973748047836125,-0.055311959236860275,0.03616127371788025,0.14314231276512146,0.08323992788791656,-0.09801035374403,0.06166819855570793,0.08026863634586334,-0.005790812894701958,-0.04482579976320267,-0.009322136640548706,0.06625716388225555,-0.0034084843937307596,-0.034400712698698044,0.017264630645513535,-0.03788735345005989,0.017163138836622238,-0.03252820298075676,-0.04812347888946533,0.038172584027051926,-0.03736541047692299,0.08876770734786987,-0.00040815179818309844,-0.06844636797904968,0.012172355316579342,-0.11740241199731827,0.06858523190021515,-0.07253830134868622,-0.023923050612211227,0.08399578183889389,-0.004326591733843088,-0.0477859303355217,0.07232438027858734,0.11465317755937576,-0.015296715311706066,0.12471313029527664,0.013910340145230293,0.02010069042444229,-0.06308184564113617,0.03406292200088501,-0.08057744055986404,0.00910329632461071,0.045976851135492325,0.007631076034158468,0.031812235713005066,0.002020494779571891,-0.022104013711214066,-0.10192734003067017,0.02236439846456051,0.022502494975924492,-0.03906082361936569,0.02986697293817997,0.02902735397219658,-0.06751468032598495,0.10636396706104279,-0.01919708028435707,-0.07199377566576004,-0.0585179403424263,0.03739676997065544,-0.0297639612108469,0.014373976737260818,-0.018832942470908165,-0.04661640152335167,0.05333879217505455,0.0281514972448349,0.07688136398792267,-0.013116000220179558,0.09782001376152039,-0.013072526082396507,-0.03168518841266632,-0.051874514669179916,0.0823565423488617,0.024585114791989326,-0.012274296022951603,0.05486792325973511,-0.07129904627799988,-0.0027954219840466976,-0.04701492562890053,-0.04382295534014702,-0.07239962369203568,0.02836740016937256,0.09495580196380615,0.020644966512918472,-0.024139519780874252,0.03299997001886368,-0.0701322928071022,0.005846383515745401,0.02824585884809494,0.09069209545850754,-0.05270877480506897,-0.08253923803567886,-3.9550975827751245e-8,-0.018213922157883644,0.030366750434041023,-0.03500015661120415,-0.07155796140432358,0.07337679713964462,0.010732341557741165,0.049956753849983215,0.0055734384804964066,-0.016787150874733925,-0.05946635454893112,0.13487128913402557,0.0698498785495758,0.060596052557229996,-0.021155934780836105,0.08365678042173386,-0.1230255588889122,-0.011596322990953922,0.021476436406373978,-0.018800849094986916,0.047542303800582886,0.01578482799232006,-0.08647190779447556,0.01291158702224493,0.019846396520733833,-0.03751877695322037,0.012549865990877151,0.03221997618675232,-0.003275702241808176,0.016571786254644394,0.06157096102833748,-0.006921384017914534,0.06737185269594193,0.013701492920517921,0.0020822498481720686,0.0637928918004036,0.05056759715080261,-0.01608653925359249,-0.0089789517223835,0.06722556054592133,0.15701015293598175,0.01570802554488182,-0.05870560184121132,-0.05333719775080681,-0.0594303198158741,-0.012126519344747066,-0.03277674689888954,0.017678461968898773,-0.08420778065919876,-0.0014303631614893675,-0.024940932169556618,-0.06470713764429092,-0.0240036454051733,-0.019110675901174545,-0.023220906034111977,-0.03317943587899208,-0.008519190363585949,0.038117989897727966,0.03339866176247597,-0.002327470574527979,0.0026240386068820953,-0.020359577611088753,0.01825154945254326,-0.05483502522110939,0.04025609418749809]},{"id":"cHJvcGVydHktVGFy","type":"property","name":"position","qualifiedName":"TarotAppController.position","parentClass":"TarotAppController","parentClassId":"Y2xhc3MtVGFyb3RB","file":"/mnt/c/dev/tarot/js/tarot-app-controller.js","startLine":2128,"endLine":2131,"lines":4,"code":"position: this.currentSpread.positions[this.drawnCards.length],\n            positionIndex: this.drawnCards.length,\n            timestamp: new Date().toISOString()\n        };","mtime":1753008922904.6213,"propertyType":"this.currentSpread.positions[this.drawnCards.length],\n            positionIndex: this.drawnCards.length,\n            timestamp: new Date().toISOString()\n        }","isStatic":false,"embedding":[-0.0060994867235422134,0.04554121941328049,-0.03875233232975006,0.0047285533510148525,-0.05965311825275421,0.10985127836465836,0.027024952694773674,0.03996911272406578,-0.04857981577515602,-0.039226774126291275,0.014753841795027256,0.01275467500090599,-0.015770867466926575,-0.0023759573232382536,-0.002436915645375848,0.03137779235839844,-0.03232119232416153,0.004121077246963978,0.015892760828137398,0.04684896767139435,0.13349273800849915,-0.008458803407847881,0.013997211121022701,-0.0164310485124588,0.04539770260453224,0.08714552223682404,0.012098053470253944,-0.028123565018177032,0.037588730454444885,-0.05214126780629158,-0.013876096345484257,0.01117959525436163,0.040077369660139084,0.05504918098449707,-0.018233731389045715,-0.04293924942612648,-0.09143655747175217,0.03807086497545242,0.05914945527911186,0.026226405054330826,0.052036453038454056,-0.007151710335165262,0.022868696600198746,-0.04726528376340866,0.0574808195233345,0.023573489859700203,0.004537091124802828,-0.014644629321992397,0.0012403784785419703,0.04026862606406212,-0.07539390027523041,-0.028610292822122574,-0.015408603474497795,0.002089104847982526,0.060553766787052155,0.06359490007162094,0.012699398212134838,-0.07467301934957504,0.035668063908815384,-0.029579440131783485,0.16960082948207855,0.01713634841144085,-0.0020555653609335423,0.03831657022237778,-0.05221996456384659,-0.06559356302022934,0.01588488183915615,0.030951878055930138,-0.0008858206565491855,-0.10225681960582733,0.04341033473610878,0.05600602924823761,0.017178690060973167,0.05047602206468582,0.05869779363274574,0.023891549557447433,0.030242349952459335,-0.03994089365005493,0.06172607094049454,-0.06295505911111832,-0.09788691997528076,-0.11176768690347672,0.024554649367928505,0.10988998413085938,0.0811767578125,0.02076864056289196,-0.020750505849719048,0.038435205817222595,0.0004065260582137853,-0.052509766072034836,-0.03357883170247078,-0.08535460382699966,0.0056801289319992065,0.05629177391529083,-0.014402669854462147,0.03429607301950455,-0.03960629552602768,-0.005294870585203171,-0.08358693867921829,0.014158971607685089,0.010424386709928513,0.04360246658325195,-0.08547551929950714,0.03250037878751755,0.014682765118777752,-0.03734621778130531,-0.045415040105581284,-0.07246500253677368,-0.02870880998671055,-0.0069679017178714275,-0.06259361654520035,0.01634390465915203,-0.07238709926605225,-0.07458871603012085,-0.039749421179294586,-0.0718175545334816,-0.08461634814739227,0.017554473131895065,0.09822738170623779,0.004010009579360485,0.09014040976762772,0.0006486843922175467,-0.060274213552474976,-0.030490156263113022,-0.07790940999984741,0.02703605778515339,0.07463619112968445,3.0744430264383055e-33,0.03472291678190231,-0.024286430329084396,0.011483244597911835,0.08717193454504013,0.03384571522474289,-0.04433882609009743,-0.051814690232276917,0.04190630838274956,0.001541200908832252,-0.0036892930511385202,0.016777122393250465,0.006698726676404476,-0.025692738592624664,0.021192332729697227,-0.019430045038461685,-0.050465088337659836,-0.0023115326184779406,0.04090104624629021,0.029527870938181877,0.0005430449964478612,-0.03617006912827492,-0.02025086246430874,-0.015505813993513584,-0.09477248042821884,-0.009855362586677074,0.04878155142068863,-0.09246297925710678,-0.019345922395586967,-0.11389283835887909,0.029299551621079445,0.031973134726285934,-0.05888296663761139,-0.053783122450113297,-0.012058621272444725,0.08214282989501953,0.022938372567296028,-0.066770538687706,0.0009467948693782091,0.025479532778263092,0.019798820838332176,-0.03061157837510109,-0.06466341763734818,-0.0365481823682785,-0.1013646125793457,-0.006399152800440788,0.005363014061003923,-0.06654021143913269,0.04958382248878479,0.051242802292108536,0.11963890492916107,-0.061953261494636536,0.05288451537489891,-0.0337737500667572,-0.03652537241578102,0.016618795692920685,-0.04833105579018593,0.043201882392168045,0.08553820848464966,-0.030473671853542328,-0.01807759329676628,-0.08556807786226273,0.07855580747127533,0.02540900930762291,-0.02840731479227543,-0.004214110318571329,-0.042673297226428986,0.022059854120016098,-0.1210315078496933,0.031941384077072144,-0.005896182265132666,-0.0016720456769689918,0.014144852757453918,0.009007112123072147,-0.021057642996311188,-0.012007513083517551,-0.08839048445224762,0.0020155818201601505,0.002900915453210473,-0.07250487804412842,-0.07248342782258987,-0.07396931946277618,-0.08142772316932678,-0.025578564032912254,0.023668119683861732,-0.023266661912202835,-0.018926694989204407,0.07520297169685364,-0.07778056710958481,0.05555938556790352,-0.0033886900637298822,-0.05260676145553589,-0.03788795322179794,-0.02653023786842823,0.019507749006152153,0.020874451845884323,-4.328839496823662e-33,0.004165871534496546,-0.04340173676609993,0.00902244821190834,-0.01663975603878498,-0.003125511109828949,-0.08012697100639343,0.06945226341485977,0.11892644315958023,0.03859918564558029,0.04672204330563545,0.01874181255698204,0.00590874208137393,-0.0648505836725235,-0.028520673513412476,0.04784487932920456,0.08149471879005432,0.008076019585132599,-0.04984549805521965,-0.005436434876173735,-0.08213093876838684,-0.024500859901309013,-0.0029393036384135485,-0.0817689597606659,0.056164804846048355,0.03144238889217377,0.02745584025979042,0.08863391727209091,-0.05027173087000847,-0.0012242806842550635,-0.08432843536138535,-0.003474098164588213,-0.06117869168519974,-0.03080114722251892,0.04070403054356575,-0.12164762616157532,-0.0087207006290555,0.07644063234329224,-0.009530914947390556,0.0061177657917141914,0.06698193401098251,-0.015585586428642273,0.036427464336156845,0.008219687268137932,0.03364018723368645,-0.010661324486136436,0.017187513411045074,-0.0064093247056007385,0.07277899235486984,0.06370208412408829,0.05664599686861038,0.06971543282270432,-0.045614492148160934,-0.01759354956448078,-0.015762651339173317,-0.024006733670830727,0.050469618290662766,-0.015549913980066776,-0.04436573386192322,0.052056003361940384,-0.016535088419914246,-0.043203238397836685,-0.003356901928782463,-0.017110614106059074,-0.025701358914375305,0.007267494220286608,0.02902902662754059,-0.03883322700858116,-0.06739835441112518,-0.09600109606981277,-0.08780031651258469,-0.02620590478181839,-0.006173909641802311,-0.02498328499495983,-0.023088499903678894,-0.024238213896751404,-0.01348968967795372,0.05688123032450676,0.05697622150182724,0.018612926825881004,-0.0714542493224144,0.010168676264584064,0.007689285092055798,0.0071740648709237576,0.045799821615219116,0.05632747337222099,0.062120672315359116,-0.024854552000761032,-0.024507690221071243,0.012102911248803139,-0.08543515205383301,-0.06344164907932281,0.06831827759742737,-0.014436483383178711,-0.019676845520734787,-0.04888400435447693,-3.969050155205878e-8,-0.18018652498722076,0.01927439495921135,-0.01322413794696331,0.004592208191752434,-0.0035815127193927765,0.043428175151348114,0.09447786957025528,0.003484258195385337,0.021709268912672997,-0.08028683066368103,0.12340930104255676,0.0655527114868164,-0.0030365115962922573,-0.04188579320907593,0.08161455392837524,-0.07137621194124222,-0.06542039662599564,0.00599421001970768,-0.030052488669753075,0.04766235500574112,0.048756539821624756,-0.005514497868716717,0.038210026919841766,-0.029808469116687775,-0.0021495739929378033,-0.007385317701846361,-0.01882357895374298,0.06611254066228867,0.09387112408876419,0.08624761551618576,0.03199048712849617,0.07680362462997437,0.14196988940238953,0.010105591267347336,-0.01419106312096119,0.013663703575730324,0.004738194867968559,0.003470142837613821,-0.0031220633536577225,0.08993493020534515,0.038898833096027374,-0.02502012439072132,-0.08629648387432098,0.05334798991680145,0.04885173216462135,0.006599721498787403,0.031494129449129105,-0.04188314452767372,0.015613271854817867,-0.07329710572957993,-0.07012119144201279,-0.0392318032681942,-0.014244452118873596,0.014197505079209805,-0.06200595200061798,0.012909699231386185,0.021593550220131874,-0.026636984199285507,0.012290876358747482,0.03473808243870735,-0.0487312376499176,0.039647333323955536,-0.030338145792484283,0.1202210932970047]},{"id":"ZXhwb3J0LTUwNTUt","type":"export","qualifiedName":"exports) {\n    module.exports = { spreads, advancedSpreads };","file":"/mnt/c/dev/tarot/js/spreads.js","startLine":94,"endLine":95,"lines":2,"code":"exports) {\n    module.exports = { spreads, advancedSpreads };","mtime":1752833850126.0938,"doc":"","modulePath":"","elements":["module.exports = { spreads","advancedSpreads"],"embedding":[-0.04706675186753273,-0.05402010306715965,-0.09595827758312225,0.03639312833547592,0.05550898611545563,-0.028081005439162254,-0.08707787096500397,0.1344931572675705,-0.07528679817914963,-0.029006201773881912,0.023909328505396843,0.01331817451864481,-0.04155203700065613,-0.015622029080986977,0.04133472964167595,0.02888588421046734,-0.008850302547216415,0.06012231856584549,-0.02350590005517006,0.0014647765783593059,0.03650306910276413,0.03788670897483826,0.020007066428661346,-0.006033215206116438,0.0622379444539547,-0.016672475263476372,-0.0372493751347065,-0.016872065141797066,-0.004020912107080221,0.0229111909866333,-0.07457698881626129,0.060852233320474625,-0.008739840239286423,0.07517059892416,0.032420530915260315,0.07844996452331543,-0.017550362274050713,-0.013813912868499756,0.03535623848438263,-0.10556201636791229,0.050223998725414276,0.00982180330902338,0.013795112259685993,-0.03199086710810661,-0.0022352556698024273,-0.06689731776714325,-0.05060111731290817,-0.010770780965685844,-0.006439026910811663,0.0020382641814649105,-0.06415213644504547,-0.011666731908917427,-0.12044210731983185,0.00980671588331461,0.02343343012034893,-0.003070544684305787,-0.019339589402079582,-0.0636691078543663,0.03907298296689987,0.031216103583574295,-0.020843351259827614,0.027193816378712654,-0.017283832654356956,0.05040581524372101,-0.05055214464664459,0.005627299193292856,-0.005050890147686005,0.12028726190328598,-0.045017071068286896,-0.07901494950056076,-0.1150733008980751,0.026340754702687263,-0.05320606008172035,0.01658693328499794,0.0037293857894837856,-0.08983125537633896,-0.01653519831597805,-0.025960857048630714,-0.044408224523067474,0.0008115922682918608,-0.04552025347948074,0.022141877561807632,-0.015461631119251251,0.07164643704891205,-0.002707328414544463,0.006859571672976017,0.05633748695254326,0.0902424231171608,-0.014253275468945503,0.0777197852730751,-0.05864567309617996,-0.08709884434938431,0.04560205340385437,0.10773052275180817,-0.08039791882038116,0.04486066848039627,-0.023952480405569077,0.02702096290886402,-0.0072363801300525665,-0.029922854155302048,-0.03061687760055065,-0.007203897461295128,0.07484762370586395,-0.04862813651561737,-0.08506380766630173,-0.08096207678318024,0.04919610917568207,-0.006477781571447849,0.03683800250291824,-0.035316046327352524,-0.009993525221943855,0.055296629667282104,-0.045133911073207855,-0.17601095139980316,-0.08093675971031189,-0.05593504384160042,-0.08113915473222733,-0.04328368604183197,0.07081729918718338,0.0325903445482254,0.07087639719247818,0.0580962710082531,0.04995359480381012,0.016969578340649605,0.055048879235982895,-0.02690112590789795,-0.00390379736199975,5.771104668218887e-34,-0.0934140756726265,-0.11123747378587723,0.006052479613572359,0.15298448503017426,-0.022572994232177734,0.013913779519498348,0.006625062320381403,-0.04278945550322533,-0.08433973044157028,0.00063284020870924,-0.04771604761481285,0.138956218957901,-0.09286977350711823,0.09789709001779556,-0.013310717418789864,-0.04685017094016075,0.053636036813259125,0.03261152282357216,0.09519200026988983,0.0657593160867691,0.0017123641446232796,-0.04393716901540756,0.011732852086424828,0.024438928812742233,0.03971753641963005,0.07353450357913971,0.03872820734977722,-0.028265807777643204,0.03334900364279747,0.059185195714235306,-0.007115812040865421,-0.05193991959095001,-0.0022869508247822523,0.021664954721927643,0.022948335856199265,0.04417426511645317,-0.0913502648472786,-0.027034468948841095,-0.0732397586107254,0.022915273904800415,-0.08907315880060196,-0.029435446485877037,-0.08412246406078339,0.024127384647727013,0.02867482416331768,0.034128785133361816,-0.07018734514713287,0.0543217808008194,0.11303553730249405,-0.0002578851708676666,-0.010523876175284386,0.023629995062947273,0.04450013488531113,-0.027181651443243027,0.04104429483413696,-0.021798916161060333,0.014145642518997192,0.05959949642419815,-0.020144451409578323,-0.017725037410855293,-0.06410393118858337,0.0662478432059288,-0.08730017393827438,0.0013620792888104916,0.007098262198269367,0.06135363131761551,-0.04604528471827507,-0.06089015677571297,0.007062227930873632,0.0127103878185153,-0.0393473319709301,0.03881651535630226,-0.03049195557832718,0.05260074883699417,0.08704672753810883,-0.012475935742259026,0.02779555320739746,0.04866880550980568,0.013447510078549385,-0.0884823352098465,-0.08357975631952286,-0.02932453341782093,-0.04493987187743187,-0.008444412611424923,-0.0832158550620079,0.04021895304322243,-0.015486565418541431,0.011712913401424885,0.03708561137318611,0.007422537077218294,-0.02083786018192768,-0.023023661226034164,-0.03393689915537834,0.02155892737209797,-0.05932450294494629,-1.8256547661323252e-33,-0.011416676454246044,0.030331432819366455,-0.0754142627120018,0.07678088545799255,-0.0017147461185231805,0.0002719829499255866,-0.006086464039981365,0.008871609345078468,0.094491146504879,0.014626407995820045,-0.06663781404495239,-0.018790217116475105,-0.05302870273590088,-0.002048863796517253,0.009829849936068058,0.03424949571490288,0.017770854756236076,-0.04602932557463646,-0.014687757007777691,-0.06207195296883583,-0.1035473495721817,0.06238746643066406,0.08169905096292496,0.014925820752978325,0.05246223136782646,0.050307247787714005,-0.07418569922447205,0.06441717594861984,-0.008232035674154758,-0.014450992457568645,-0.007954411208629608,0.07431439310312271,0.006178729701787233,-0.01732003502547741,-0.14040368795394897,0.017054008319973946,0.07218316197395325,0.009575707837939262,0.08064302802085876,0.05113659426569939,0.03514799103140831,-0.025224443525075912,-0.031161295250058174,0.04416102170944214,-0.03500163555145264,0.011575842276215553,-0.038200393319129944,0.06685766577720642,0.021591976284980774,-0.003149616066366434,0.01623103767633438,0.01702570915222168,-0.05334382876753807,-0.09926686435937881,0.03861536085605621,-0.01061207428574562,0.07087400555610657,-0.027019238099455833,-0.0004473473527468741,-0.06613739579916,0.03943125158548355,-0.05165594443678856,0.03422032296657562,0.021991804242134094,-0.06455955654382706,0.01176251471042633,-0.03696390613913536,-0.02562248893082142,-0.04225558042526245,0.05175835266709328,0.008057354018092155,-0.009228072129189968,-0.05361747369170189,-0.06595367938280106,0.024652771651744843,0.03568373620510101,-0.05499451979994774,-0.010116640478372574,0.010790836997330189,0.08042334765195847,0.06749899685382843,0.03338070958852768,0.03961732238531113,0.05875976011157036,0.014606659300625324,-0.07323954999446869,0.009389997459948063,0.046410173177719116,0.02836383692920208,0.010166071355342865,-0.06014901027083397,0.020462563261389732,0.031075872480869293,0.03478540852665901,-0.06473249197006226,-2.363049667053474e-8,-0.07435178011655807,0.017716027796268463,-0.06968016177415848,-0.011193165555596352,-0.03481343016028404,0.032411154359579086,0.017157752066850662,0.07109206914901733,0.047137439250946045,0.034814655780792236,-0.005180875770747662,-0.026167668402194977,-0.020117606967687607,0.040991418063640594,0.06178118288516998,0.03128330782055855,0.02290717139840126,0.032801754772663116,-0.046071991324424744,-0.025608550757169724,0.045152585953474045,0.029089277610182762,0.003041800344362855,0.06053681671619415,0.043096136301755905,-0.047884803265333176,-0.0434243343770504,0.013496093451976776,0.10204736888408661,-0.05090352147817612,-0.016246836632490158,0.06539599597454071,-0.017040127888321877,-0.03398099169135094,-0.0541071817278862,0.07100673019886017,0.07521304488182068,-0.012707216665148735,0.010565022006630898,0.11142409592866898,-0.04013838246464729,-0.03615241497755051,-0.05815599858760834,-0.00324803008697927,-0.02343868836760521,-0.039849329739809036,-0.032412461936473846,0.022795751690864563,-0.020676231011748314,-0.034113168716430664,0.026200873777270317,0.009381704963743687,-0.0569269098341465,0.0468917153775692,-0.03470452129840851,-0.002954550087451935,-0.02958275005221367,-0.04049677774310112,0.036039408296346664,-0.05585368350148201,-0.07108297199010849,0.09441589564085007,0.06830845028162003,0.05685602128505707]},{"id":"Y2xhc3MtVGFyb3RB","type":"class","name":"TarotAppController","qualifiedName":"TarotAppController","parentClass":null,"file":"/mnt/c/dev/tarot/js/tarot-app-controller.js","startLine":3,"endLine":2151,"lines":2149,"code":"class TarotAppController {\n    constructor() {\n        this.cardRenderer = new CardRenderer();\n        this.analysisEngine = new AnalysisEngine();\n        this.currentDeck = [];\n        this.drawnCards = [];\n        this.currentSpread = null;\n        this.readingInProgress = false;\n        this.savedReadings = JSON.parse(localStorage.getItem('tarotReadings')) || [];\n        this.currentAnalysis = null;\n        this.readingMode = 'draw'; // 'draw' or 'manual'\n        this.cardSelectionInProgress = false;\n        \n        this.initializeEventListeners();\n        this.loadSavedReadings();\n        this.initializeUI();\n    }\n\n    initializeEventListeners() {\n        // Spread selection\n        document.querySelectorAll('.spread-option').forEach(option => {\n            option.addEventListener('click', (e) => this.selectSpread(e.target.closest('.spread-option')));\n        });\n\n        // Main action buttons\n        document.getElementById('startReadingBtn').addEventListener('click', () => this.startReading());\n        document.getElementById('resetReadingBtn').addEventListener('click', () => this.resetReading());\n        document.getElementById('saveReadingBtn').addEventListener('click', () => this.saveReading());\n        document.getElementById('analyzeReadingBtn').addEventListener('click', () => this.analyzeReading());\n        \n        // Deck interaction\n        document.getElementById('deckContainer').addEventListener('click', () => this.drawCard());\n        \n        // Modal events\n        document.getElementById('closeModal').addEventListener('click', () => this.closeModal());\n        document.getElementById('cardModal').addEventListener('click', (e) => {\n            if (e.target.id === 'cardModal') this.closeModal();\n        });\n\n        // Analysis tab events\n        document.querySelectorAll('.tab-button').forEach(button => {\n            button.addEventListener('click', (e) => this.switchAnalysisTab(e.target.dataset.tab));\n        });\n\n        // Keyboard shortcuts\n        document.addEventListener('keydown', (e) => this.handleKeyboardShortcuts(e));\n    }\n\n    initializeUI() {\n        this.updateInstructionText(\"Select a spread type to begin your mystical journey\");\n        this.hideAllButtons();\n        this.clearReadingArea();\n    }\n\n    selectSpread(option) {\n        // Remove previous selection\n        document.querySelectorAll('.spread-option').forEach(opt => opt.classList.remove('selected'));\n        \n        // Add selection to clicked option\n        option.classList.add('selected');\n        \n        // Get spread configuration\n        const spreadType = option.dataset.spread;\n        this.currentSpread = { ...spreads[spreadType], type: spreadType };\n        \n        // Update UI\n        this.showButton('startReadingBtn');\n        this.updateInstructionText(\n            `You've selected the ${this.currentSpread.name}. Click \"Begin Reading\" to start your journey into the cards' wisdom.`\n        );\n    }\n\n    startReading() {\n        if (!this.currentSpread) return;\n\n        // Initialize reading state\n        this.currentDeck = this.shuffleDeck([...tarotCards]);\n        this.drawnCards = [];\n        this.readingInProgress = true;\n        this.currentAnalysis = null;\n\n        // Update UI\n        this.hideElement('spreadSelection');\n        this.hideButton('startReadingBtn');\n        this.showButton('resetReadingBtn');\n        this.clearReadingArea();\n        this.hideElement('readingSummary');\n        this.hideElement('analysisPanel');\n        \n        // Set up the reading grid first (without cards)\n        const readingArea = document.getElementById('readingArea');\n        const spreadContainer = document.createElement('div');\n        spreadContainer.className = `reading-grid reading-grid-${this.currentSpread.type}`;\n        readingArea.appendChild(spreadContainer);\n        \n        // Create placeholder positions\n        for (let i = 0; i < this.currentSpread.cardCount; i++) {\n            const placeholder = document.createElement('div');\n            placeholder.className = 'card-placeholder-slot';\n            placeholder.dataset.position = i;\n            placeholder.innerHTML = `\n                <div class=\"card-position-label\">${this.currentSpread.positions[i].name}</div>\n                <div class=\"card-placeholder-inner\">\n                    <span class=\"placeholder-number\">${i + 1}</span>\n                </div>\n            `;\n            spreadContainer.appendChild(placeholder);\n        }\n        \n        // Show mode selection\n        this.showModeSelection();\n    }\n\n    drawCard() {\n        if (!this.readingInProgress || this.drawnCards.length >= this.currentSpread.cardCount) return;\n\n        // Draw random card from deck\n        const cardIndex = Math.floor(Math.random() * this.currentDeck.length);\n        const card = this.currentDeck.splice(cardIndex, 1)[0];\n        \n        // Determine if reversed (30% chance for more balanced readings)\n        const isReversed = Math.random() < 0.3;\n        \n        // Create drawn card with position info\n        const drawnCard = {\n            ...card,\n            isReversed,\n            position: this.currentSpread.positions[this.drawnCards.length],\n            positionIndex: this.drawnCards.length,\n            timestamp: new Date().toISOString()\n        };\n\n        // Add to drawn cards\n        this.drawnCards.push(drawnCard);\n        \n        // Display the card\n        this.displayCard(drawnCard);\n        \n        // Update instruction and check if reading is complete\n        this.updateReadingProgress();\n        \n        // Disable deck if all cards drawn\n        if (this.drawnCards.length >= this.currentSpread.cardCount) {\n            this.completeReading();\n        }\n    }\n\n    displayCard(card) {\n        const readingArea = document.getElementById('readingArea');\n        const spreadContainer = readingArea.querySelector('.reading-grid');\n        \n        // Find the placeholder for this position\n        const placeholder = spreadContainer.querySelector(`.card-placeholder-slot[data-position=\"${card.positionIndex}\"]`);\n        \n        if (placeholder) {\n            // Create card element\n            const cardElement = this.cardRenderer.createCardElement(card, card.position);\n            \n            // Replace placeholder with actual card\n            placeholder.replaceWith(cardElement);\n            \n            // Animate card appearance\n            this.cardRenderer.animateCardAppearance(cardElement);\n        }\n    }\n\n    updateReadingProgress() {\n        const remaining = this.currentSpread.cardCount - this.drawnCards.length;\n        if (remaining > 0) {\n            this.updateInstructionText(\n                `${remaining} more card${remaining > 1 ? 's' : ''} to draw. Click the deck to continue your reading.`\n            );\n        }\n    }\n\n    completeReading() {\n        this.readingInProgress = false;\n        this.disableDeckInteraction();\n        this.hideElement('deckContainer');\n        // Remove ready-to-draw class when hiding deck\n        const deckCard = document.querySelector('.deck-card');\n        if (deckCard) {\n            deckCard.classList.remove('ready-to-draw');\n        }\n        \n        // Show action buttons\n        this.showButton('saveReadingBtn');\n        this.showButton('analyzeReadingBtn');\n        \n        // Generate and display reading summary\n        this.generateReadingSummary();\n        \n        this.updateInstructionText(\n            \"Your reading is complete! Explore the detailed meanings by clicking on individual cards, or use the analysis tools for deeper insights.\"\n        );\n    }\n\n    generateReadingSummary() {\n        const summaryElement = document.getElementById('readingSummary');\n        const contentElement = document.getElementById('summaryContent');\n        \n        // Generate detailed elemental and numerical analysis\n        const elementalStats = this.getElementalStats();\n        const numericalStats = this.getNumericalStats();\n        const energeticStats = this.getEnergeticStats();\n        \n        let summaryHTML = `\n            <div class=\"reading-header\">\n                <h4 class=\"text-xl font-semibold mb-2 text-teal-400\">${this.currentSpread.name}</h4>\n                <p class=\"text-gray-300 mb-4\">${this.currentSpread.interpretation}</p>\n                \n                <!-- Quick Stats -->\n                <div class=\"reading-stats grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                    <div class=\"stat-card\">\n                        <span class=\"stat-value\">${this.drawnCards.filter(c => c.suit === 'Major Arcana').length}</span>\n                        <span class=\"stat-label\">Major Arcana</span>\n                    </div>\n                    <div class=\"stat-card\">\n                        <span class=\"stat-value\">${this.drawnCards.filter(c => c.isReversed).length}</span>\n                        <span class=\"stat-label\">Reversed</span>\n                    </div>\n                    <div class=\"stat-card\">\n                        <span class=\"stat-value\">${elementalStats.dominant}</span>\n                        <span class=\"stat-label\">Dominant Element</span>\n                    </div>\n                    <div class=\"stat-card\">\n                        <span class=\"stat-value\">${energeticStats.overall}</span>\n                        <span class=\"stat-label\">Energy Level</span>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"cards-overview\">\n                <h5 class=\"font-semibold text-purple-300 mb-4\">Detailed Card Analysis</h5>\n                <div class=\"grid grid-cols-1 gap-4\">\n        `;\n        \n        this.drawnCards.forEach((card, index) => {\n            const cardAnalysis = this.getDetailedCardAnalysis(card);\n            summaryHTML += `\n                <div class=\"detailed-card-summary\">\n                    <div class=\"card-header\">\n                        <div class=\"card-position-indicator\">\n                            <span class=\"position-number\">${index + 1}</span>\n                        </div>\n                        <div class=\"card-title-section\">\n                            <h5 class=\"font-semibold text-blue-300\">${card.position.name}</h5>\n                            <p class=\"text-sm text-gray-400\">${card.position.description}</p>\n                        </div>\n                        <div class=\"card-energy-indicator ${card.element?.toLowerCase() || 'neutral'}\">\n                            ${this.getElementSymbol(card.element)}\n                        </div>\n                    </div>\n                    \n                    <div class=\"card-main-info\">\n                        <div class=\"card-name-section\">\n                            <p class=\"font-medium text-white text-lg\">${card.name}${card.isReversed ? ' (Reversed)' : ''}</p>\n                            <div class=\"card-metadata\">\n                                <span class=\"metadata-item\">${card.suit}</span>\n                                ${card.number ? `<span class=\"metadata-item\">Number ${card.number}</span>` : ''}\n                                ${card.element ? `<span class=\"metadata-item\">${card.element}</span>` : ''}\n                                ${card.astrology ? `<span class=\"metadata-item\">${card.astrology}</span>` : ''}\n                            </div>\n                        </div>\n                        \n                        <div class=\"card-analysis-grid\">\n                            <div class=\"analysis-section\">\n                                <h6 class=\"analysis-title\">Primary Meaning</h6>\n                                <p class=\"text-sm text-gray-300\">${cardAnalysis.primaryMeaning}</p>\n                            </div>\n                            \n                            <div class=\"analysis-section\">\n                                <h6 class=\"analysis-title\">Position-Specific Interpretation</h6>\n                                <p class=\"text-sm text-gray-300\">${cardAnalysis.positionSpecific}</p>\n                            </div>\n                            \n                            <div class=\"analysis-section\">\n                                <h6 class=\"analysis-title\">Keywords</h6>\n                                <div class=\"keywords-list\">\n                                    ${cardAnalysis.keywords.map(kw => `<span class=\"keyword-tag\">${kw}</span>`).join('')}\n                                </div>\n                            </div>\n                            \n                            <div class=\"analysis-section\">\n                                <h6 class=\"analysis-title\">Energetic Influence</h6>\n                                <p class=\"text-sm text-gray-300\">${cardAnalysis.energeticInfluence}</p>\n                            </div>\n                            \n                            <div class=\"analysis-section\">\n                                <h6 class=\"analysis-title\">Psychological Aspect</h6>\n                                <p class=\"text-sm text-gray-300\">${cardAnalysis.psychological}</p>\n                            </div>\n                            \n                            <div class=\"analysis-section\">\n                                <h6 class=\"analysis-title\">Spiritual Message</h6>\n                                <p class=\"text-sm text-gray-300\">${cardAnalysis.spiritual}</p>\n                            </div>\n                            \n                            ${card.isReversed ? `\n                                <div class=\"analysis-section reversed-analysis\">\n                                    <h6 class=\"analysis-title\">Reversed Significance</h6>\n                                    <p class=\"text-sm text-gray-300\">${cardAnalysis.reversedSignificance}</p>\n                                </div>\n                            ` : ''}\n                        </div>\n                    </div>\n                </div>\n            `;\n        });\n        \n        summaryHTML += `\n                </div>\n            </div>\n            \n            <div class=\"comprehensive-insights mt-8\">\n                <h5 class=\"font-semibold text-purple-300 mb-4\">Comprehensive Reading Insights</h5>\n                \n                <div class=\"insights-grid\">\n                    <div class=\"insight-section\">\n                        <h6 class=\"insight-title\">Elemental Analysis</h6>\n                        <p class=\"text-sm text-gray-300\">${elementalStats.analysis}</p>\n                        <div class=\"element-breakdown\">\n                            ${Object.entries(elementalStats.breakdown).map(([element, count]) => \n                                `<div class=\"element-stat\">\n                                    <span class=\"element-icon ${element.toLowerCase()}\">${this.getElementSymbol(element)}</span>\n                                    <span class=\"element-name\">${element}</span>\n                                    <span class=\"element-count\">${count}</span>\n                                </div>`\n                            ).join('')}\n                        </div>\n                    </div>\n                    \n                    <div class=\"insight-section\">\n                        <h6 class=\"insight-title\">Numerical Significance</h6>\n                        <p class=\"text-sm text-gray-300\">${numericalStats.analysis}</p>\n                        <div class=\"numerical-patterns\">\n                            ${numericalStats.patterns.map(pattern => \n                                `<div class=\"number-pattern\">${pattern}</div>`\n                            ).join('')}\n                        </div>\n                    </div>\n                    \n                    <div class=\"insight-section\">\n                        <h6 class=\"insight-title\">Energetic Flow</h6>\n                        <p class=\"text-sm text-gray-300\">${energeticStats.analysis}</p>\n                        <div class=\"energy-flow-map\">\n                            ${this.drawnCards.map((card, i) => \n                                `<div class=\"flow-node ${this.getEnergyDirection(card, i)}\">\n                                    <span class=\"node-number\">${i + 1}</span>\n                                    <span class=\"node-energy\">${this.getCardEnergyType(card)}</span>\n                                </div>`\n                            ).join('')}\n                        </div>\n                    </div>\n                    \n                    <div class=\"insight-section full-width\">\n                        <h6 class=\"insight-title\">Overall Reading Synthesis</h6>\n                        <p class=\"text-gray-300\">${this.generateComprehensiveInsight()}</p>\n                    </div>\n                    \n                    <div class=\"insight-section full-width\">\n                        <h6 class=\"insight-title\">Practical Guidance</h6>\n                        <div class=\"guidance-list\">\n                            ${this.generatePracticalGuidance().map(guidance => \n                                `<div class=\"guidance-item\">\n                                    <span class=\"guidance-icon\">💡</span>\n                                    <span class=\"guidance-text\">${guidance}</span>\n                                </div>`\n                            ).join('')}\n                        </div>\n                    </div>\n                    \n                    <div class=\"insight-section full-width\">\n                        <h6 class=\"insight-title\">Questions for Reflection</h6>\n                        <div class=\"reflection-questions\">\n                            ${this.generateReflectionQuestions().map(question => \n                                `<div class=\"reflection-question\">\n                                    <span class=\"question-icon\">❓</span>\n                                    <span class=\"question-text\">${question}</span>\n                                </div>`\n                            ).join('')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n        \n        contentElement.innerHTML = summaryHTML;\n        summaryElement.classList.remove('hidden');\n    }\n\n    getCardSummary(card) {\n        const meaning = card.isReversed ? card.meanings.reversed.general : card.meanings.upright.general;\n        return meaning.substring(0, 120) + '...';\n    }\n\n    getElementalStats() {\n        const breakdown = {};\n        let dominant = 'Balanced';\n        let maxCount = 0;\n        \n        this.drawnCards.forEach(card => {\n            if (card.element) {\n                breakdown[card.element] = (breakdown[card.element] || 0) + 1;\n                if (breakdown[card.element] > maxCount) {\n                    maxCount = breakdown[card.element];\n                    dominant = card.element;\n                }\n            }\n        });\n        \n        const analysis = this.generateElementalAnalysis(breakdown, dominant);\n        \n        return { breakdown, dominant, analysis };\n    }\n    \n    getNumericalStats() {\n        const numbers = this.drawnCards\n            .filter(card => card.number !== null)\n            .map(card => card.number);\n        \n        const patterns = [];\n        const sum = numbers.reduce((a, b) => a + b, 0);\n        const average = numbers.length > 0 ? (sum / numbers.length).toFixed(1) : 0;\n        \n        // Find sequences\n        const sortedNumbers = [...numbers].sort((a, b) => a - b);\n        let sequences = [];\n        let currentSeq = [sortedNumbers[0]];\n        \n        for (let i = 1; i < sortedNumbers.length; i++) {\n            if (sortedNumbers[i] === sortedNumbers[i-1] + 1) {\n                currentSeq.push(sortedNumbers[i]);\n            } else {\n                if (currentSeq.length > 1) sequences.push([...currentSeq]);\n                currentSeq = [sortedNumbers[i]];\n            }\n        }\n        if (currentSeq.length > 1) sequences.push(currentSeq);\n        \n        if (sequences.length > 0) {\n            patterns.push(`Sequential pattern: ${sequences.map(seq => seq.join('-')).join(', ')}`);\n        }\n        \n        patterns.push(`Average numerical value: ${average}`);\n        patterns.push(`Total numerical sum: ${sum}`);\n        \n        // Check for master numbers\n        const masterNumbers = numbers.filter(n => [11, 22, 33].includes(n));\n        if (masterNumbers.length > 0) {\n            patterns.push(`Master numbers present: ${masterNumbers.join(', ')}`);\n        }\n        \n        const analysis = `The numerical frequency suggests ${this.getNumericalFrequencyMeaning(average)}. ` +\n                        `With a total sum of ${sum}, the reading vibrates at ${this.getNumericalVibrationMeaning(sum)}.`;\n        \n        return { patterns, analysis, average, sum };\n    }\n    \n    getEnergeticStats() {\n        const energyTypes = {\n            active: 0,\n            passive: 0,\n            transformative: 0,\n            stable: 0\n        };\n        \n        this.drawnCards.forEach(card => {\n            const energyType = this.getCardEnergyType(card);\n            energyTypes[energyType]++;\n        });\n        \n        const dominant = Object.entries(energyTypes)\n            .sort(([,a], [,b]) => b - a)[0][0];\n        \n        const overall = this.getOverallEnergyLevel(energyTypes);\n        const analysis = this.generateEnergeticAnalysis(energyTypes, dominant);\n        \n        return { energyTypes, dominant, overall, analysis };\n    }\n    \n    getDetailedCardAnalysis(card) {\n        const primaryMeaning = card.isReversed ? \n            card.meanings.reversed.general : \n            card.meanings.upright.general;\n        \n        const keywords = card.isReversed ? \n            card.keywords.reversed : \n            card.keywords.upright;\n        \n        const positionSpecific = this.getPositionSpecificMeaning(card, card.position);\n        const energeticInfluence = this.getEnergeticInfluence(card);\n        const psychological = this.getPsychologicalAspect(card);\n        const spiritual = this.getSpiritualMessage(card);\n        const reversedSignificance = card.isReversed ? \n            this.getReversedSignificance(card) : '';\n        \n        return {\n            primaryMeaning,\n            keywords,\n            positionSpecific,\n            energeticInfluence,\n            psychological,\n            spiritual,\n            reversedSignificance\n        };\n    }\n    \n    getElementSymbol(element) {\n        const symbols = {\n            'Fire': '🔥',\n            'Water': '💧',\n            'Air': '💨',\n            'Earth': '🌍',\n            'Spirit': '✨'\n        };\n        return symbols[element] || '❔';\n    }\n    \n    getCardEnergyType(card) {\n        if (card.suit === 'Major Arcana') {\n            const transformativeCards = ['Death', 'The Tower', 'Judgement', 'The World'];\n            if (transformativeCards.includes(card.name)) return 'transformative';\n            return 'active';\n        }\n        \n        if (card.suit === 'Wands') return 'active';\n        if (card.suit === 'Cups') return 'passive';\n        if (card.suit === 'Swords') return 'transformative';\n        if (card.suit === 'Pentacles') return 'stable';\n        \n        return 'active';\n    }\n    \n    getEnergyDirection(card, index) {\n        const energyType = this.getCardEnergyType(card);\n        const position = index % 4; // Create cyclical pattern\n        \n        if (energyType === 'active') return 'ascending';\n        if (energyType === 'transformative') return 'dynamic';\n        if (energyType === 'passive') return 'descending';\n        return 'stable';\n    }\n    \n    generateElementalAnalysis(breakdown, dominant) {\n        const elementalMeanings = {\n            'Fire': 'passionate energy, creativity, and action-oriented approach',\n            'Water': 'emotional depth, intuition, and spiritual flow',\n            'Air': 'mental clarity, communication, and intellectual pursuits',\n            'Earth': 'practical grounding, material stability, and tangible results'\n        };\n        \n        let analysis = `This reading is strongly influenced by ${dominant} energy, bringing ${elementalMeanings[dominant] || 'balanced forces'}. `;\n        \n        const missingElements = ['Fire', 'Water', 'Air', 'Earth'].filter(el => !breakdown[el]);\n        if (missingElements.length > 0) {\n            analysis += `The absence of ${missingElements.join(' and ')} suggests areas that may need attention or conscious integration.`;\n        }\n        \n        return analysis;\n    }\n    \n    getNumericalFrequencyMeaning(average) {\n        if (average < 5) return 'foundational energy and new beginnings';\n        if (average < 10) return 'manifestation energy and practical development';\n        if (average < 15) return 'completion energy and mastery';\n        return 'transformational energy and spiritual evolution';\n    }\n    \n    getNumericalVibrationMeaning(sum) {\n        const reduced = this.reduceNumber(sum);\n        const vibrations = {\n            1: 'leadership and new beginnings',\n            2: 'partnership and balance', \n            3: 'creativity and expression',\n            4: 'stability and foundation',\n            5: 'change and freedom',\n            6: 'harmony and responsibility',\n            7: 'spiritual seeking and introspection',\n            8: 'material mastery and achievement',\n            9: 'completion and wisdom'\n        };\n        return vibrations[reduced] || 'unique spiritual frequency';\n    }\n    \n    reduceNumber(num) {\n        while (num > 9 && num !== 11 && num !== 22 && num !== 33) {\n            num = num.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b), 0);\n        }\n        return num;\n    }\n    \n    getOverallEnergyLevel(energyTypes) {\n        const total = Object.values(energyTypes).reduce((a, b) => a + b, 0);\n        const activeScore = energyTypes.active * 3 + energyTypes.transformative * 2 + energyTypes.passive * 1 + energyTypes.stable * 2;\n        const percentage = (activeScore / (total * 3)) * 100;\n        \n        if (percentage > 75) return 'High';\n        if (percentage > 50) return 'Moderate';\n        if (percentage > 25) return 'Gentle';\n        return 'Subtle';\n    }\n    \n    generateEnergeticAnalysis(energyTypes, dominant) {\n        const energyDescriptions = {\n            active: 'dynamic forward movement and initiating action',\n            passive: 'receptive flow and emotional processing',\n            transformative: 'catalytic change and breakthrough energy',\n            stable: 'grounding force and sustained growth'\n        };\n        \n        return `The energetic signature is primarily ${dominant}, emphasizing ${energyDescriptions[dominant]}. ` +\n               `This creates a reading focused on ${this.getEnergeticFocus(dominant)}.`;\n    }\n    \n    getEnergeticFocus(dominantEnergy) {\n        const focuses = {\n            active: 'taking initiative and moving forward with confidence',\n            passive: 'deep emotional healing and intuitive guidance',\n            transformative: 'breakthrough moments and significant life changes',\n            stable: 'building lasting foundations and practical manifestation'\n        };\n        return focuses[dominantEnergy] || 'balanced growth and development';\n    }\n    \n    getPositionSpecificMeaning(card, position) {\n        const meaning = card.isReversed ? card.meanings.reversed.general : card.meanings.upright.general;\n        return `In the ${position.name} position, ${card.name} specifically addresses ${this.getPositionContext(position.name, card)}. ${meaning.substring(0, 150)}...`;\n    }\n    \n    getPositionContext(positionName, card) {\n        const contexts = {\n            'Past': 'the foundational influences and experiences that have led to the current situation',\n            'Present': 'the immediate circumstances and energies surrounding you now',\n            'Future': 'the potential outcomes and directions available to you',\n            'Conscious': 'what you are actively aware of and can directly influence',\n            'Subconscious': 'hidden influences, desires, and unconscious patterns',\n            'Self': 'your inner nature, core identity, and personal power',\n            'Situation': 'the external circumstances and environmental factors',\n            'Challenges': 'obstacles to overcome and lessons to learn',\n            'Action': 'the steps you need to take and decisions to make',\n            'Outcome': 'the ultimate resolution and transformation available'\n        };\n        \n        return contexts[positionName] || 'the specific area of focus in your life';\n    }\n    \n    getEnergeticInfluence(card) {\n        const element = card.element;\n        const suit = card.suit;\n        const isReversed = card.isReversed;\n        \n        let influence = `This card radiates ${element || 'balanced'} energy, `;\n        \n        if (suit === 'Major Arcana') {\n            influence += 'carrying universal archetypal power that operates beyond personal will. ';\n        } else {\n            const suitInfluences = {\n                'Wands': 'igniting passion and creative fire within your spirit',\n                'Cups': 'opening emotional depths and enhancing intuitive receptivity',\n                'Swords': 'sharpening mental clarity and cutting through illusion',\n                'Pentacles': 'grounding aspirations into tangible, practical reality'\n            };\n            influence += suitInfluences[suit] || 'bringing specific directional energy';\n        }\n        \n        if (isReversed) {\n            influence += ' The reversed orientation suggests this energy is internalized, blocked, or in transition.';\n        }\n        \n        return influence;\n    }\n    \n    getPsychologicalAspect(card) {\n        // Map to Jungian concepts\n        const majorArcanaMappe = {\n            'The Fool': 'Embracing the innocent, spontaneous aspect of the psyche',\n            'The Magician': 'Activating personal will and conscious manifestation',\n            'The High Priestess': 'Accessing the anima and intuitive wisdom',\n            'The Empress': 'Nurturing the creative, fertile aspects of consciousness',\n            'The Emperor': 'Establishing order, structure, and paternal authority',\n            'The Hierophant': 'Seeking wisdom through tradition and collective knowledge',\n            'The Lovers': 'Integrating opposites and making conscious choices',\n            'The Chariot': 'Directing willpower toward a specific goal',\n            'Strength': 'Balancing instinct with conscious control',\n            'The Hermit': 'Turning inward for self-discovery and enlightenment',\n            'Wheel of Fortune': 'Understanding cycles and surrendering to greater forces',\n            'Justice': 'Seeking balance and examining consequences',\n            'The Hanged Man': 'Surrendering ego for higher perspective',\n            'Death': 'Transforming through letting go of outdated patterns',\n            'Temperance': 'Harmonizing opposing forces within the psyche',\n            'The Devil': 'Confronting shadow aspects and material attachments',\n            'The Tower': 'Breaking through rigid mental structures',\n            'The Star': 'Connecting with hope and spiritual guidance',\n            'The Moon': 'Navigating the unconscious and facing illusions',\n            'The Sun': 'Achieving integration and conscious illumination',\n            'Judgement': 'Experiencing spiritual awakening and rebirth',\n            'The World': 'Achieving wholeness and completion of a cycle'\n        };\n        \n        if (card.suit === 'Major Arcana') {\n            return majorArcanaMappe[card.name] || 'Working with archetypal energies to integrate aspects of the collective unconscious';\n        }\n        \n        const suitPsychology = {\n            'Wands': 'Exploring motivation, passion, and the drive for self-expression',\n            'Cups': 'Processing emotions, relationships, and the feeling function',\n            'Swords': 'Engaging with thoughts, communication, and mental challenges',\n            'Pentacles': 'Focusing on sensation, security, and material manifestation'\n        };\n        \n        return suitPsychology[card.suit] || 'Integrating practical life experiences into psychological growth';\n    }\n    \n    getSpiritualMessage(card) {\n        // Enhanced spiritual interpretations\n        const spiritualMessages = {\n            'Major Arcana': 'This card carries a message from your higher self about your spiritual evolution and soul\\'s journey.',\n            'Wands': 'Your spirit calls for creative expression and passionate engagement with your life\\'s purpose.',\n            'Cups': 'Divine love flows through your emotional experiences, offering healing and spiritual nourishment.',\n            'Swords': 'Truth and clarity are being revealed to cut through illusion and align with your authentic path.',\n            'Pentacles': 'The material world serves as a temple for spiritual growth and conscious manifestation.'\n        };\n        \n        let message = spiritualMessages[card.suit] || spiritualMessages['Major Arcana'];\n        \n        if (card.isReversed) {\n            message += ' The reversed energy suggests an invitation to look within for the spiritual lesson being offered.';\n        }\n        \n        return message;\n    }\n    \n    getReversedSignificance(card) {\n        return `The reversed orientation of ${card.name} indicates that its energy is operating internally, suggesting a need for ` +\n               `inner work, patience, or a different approach than the upright meaning would suggest. This may represent ` +\n               `blocked energy, shadow work, or a period of gestation before external manifestation.`;\n    }\n    \n    generateComprehensiveInsight() {\n        const majorArcanaCount = this.drawnCards.filter(c => c.suit === 'Major Arcana').length;\n        const reversedCount = this.drawnCards.filter(c => c.isReversed).length;\n        const elements = {};\n        \n        this.drawnCards.forEach(card => {\n            if (card.element) {\n                elements[card.element] = (elements[card.element] || 0) + 1;\n            }\n        });\n        \n        let insight = 'This reading reveals ';\n        \n        if (majorArcanaCount > this.drawnCards.length / 2) {\n            insight += 'a powerful spiritual awakening and major life themes demanding attention. The universe is actively guiding you through significant transformations. ';\n        } else if (majorArcanaCount === 0) {\n            insight += 'a focus on practical, day-to-day matters and personal development within your current life circumstances. ';\n        } else {\n            insight += 'a balanced blend of spiritual guidance and practical considerations, suggesting both inner work and outer action are needed. ';\n        }\n        \n        if (reversedCount > this.drawnCards.length / 2) {\n            insight += 'The predominance of reversed cards indicates a time of internal processing, reflection, and shadow work. ';\n        }\n        \n        const dominantElement = Object.entries(elements).sort(([,a], [,b]) => b - a)[0];\n        if (dominantElement) {\n            const elementInsights = {\n                'Fire': 'Your path forward requires courage, creativity, and bold action.',\n                'Water': 'Trust your intuition and allow emotions to guide you toward healing.',\n                'Air': 'Mental clarity and honest communication will illuminate your way.',\n                'Earth': 'Focus on practical steps and building solid foundations for lasting success.'\n            };\n            insight += elementInsights[dominantElement[0]] || '';\n        }\n        \n        insight += ' This reading encourages you to integrate all aspects of your experience—spiritual, emotional, mental, and physical—for holistic growth and authentic self-expression.';\n        \n        return insight;\n    }\n    \n    generatePracticalGuidance() {\n        const guidance = [];\n        const elements = {};\n        const suits = {};\n        \n        this.drawnCards.forEach(card => {\n            if (card.element) elements[card.element] = (elements[card.element] || 0) + 1;\n            suits[card.suit] = (suits[card.suit] || 0) + 1;\n        });\n        \n        // Element-based guidance\n        Object.entries(elements).forEach(([element, count]) => {\n            if (count >= 2) {\n                const elementGuidance = {\n                    'Fire': 'Take bold action on your creative projects and trust your passionate impulses.',\n                    'Water': 'Honor your emotional needs and create space for intuitive reflection.',\n                    'Air': 'Engage in meaningful conversations and seek new learning opportunities.',\n                    'Earth': 'Focus on practical steps, financial planning, and physical wellness.'\n                };\n                guidance.push(elementGuidance[element]);\n            }\n        });\n        \n        // Reversed card guidance\n        const reversedCount = this.drawnCards.filter(c => c.isReversed).length;\n        if (reversedCount > 0) {\n            guidance.push('Practice patience and self-reflection before taking major external actions.');\n        }\n        \n        // Major Arcana guidance\n        const majorCount = this.drawnCards.filter(c => c.suit === 'Major Arcana').length;\n        if (majorCount > 0) {\n            guidance.push('Pay attention to synchronicities and spiritual signs guiding your path.');\n        }\n        \n        // Default guidance\n        if (guidance.length === 0) {\n            guidance.push('Trust the process and remain open to unexpected opportunities.');\n            guidance.push('Balance action with reflection for optimal results.');\n        }\n        \n        return guidance;\n    }\n    \n    generateReflectionQuestions() {\n        const questions = [];\n        const themes = new Set();\n        \n        this.drawnCards.forEach(card => {\n            themes.add(card.suit);\n            if (card.isReversed) themes.add('shadow');\n        });\n        \n        if (themes.has('Major Arcana')) {\n            questions.push('What major life lesson is the universe trying to teach me right now?');\n            questions.push('How can I align more closely with my soul\\'s purpose?');\n        }\n        \n        if (themes.has('Wands')) {\n            questions.push('What creative project or passion deserves more of my energy?');\n            questions.push('Where in my life do I need to take more initiative?');\n        }\n        \n        if (themes.has('Cups')) {\n            questions.push('What emotions am I avoiding that need to be felt and healed?');\n            questions.push('How can I nurture my relationships and emotional well-being?');\n        }\n        \n        if (themes.has('Swords')) {\n            questions.push('What mental patterns or beliefs need to be examined and possibly released?');\n            questions.push('Where do I need more clarity or honest communication in my life?');\n        }\n        \n        if (themes.has('Pentacles')) {\n            questions.push('How can I better manifest my goals in the physical world?');\n            questions.push('What practical steps will move me toward greater security and abundance?');\n        }\n        \n        if (themes.has('shadow')) {\n            questions.push('What hidden aspects of myself are seeking integration and acceptance?');\n            questions.push('How might current challenges be gifts in disguise?');\n        }\n        \n        // Ensure we have at least 3 questions\n        if (questions.length < 3) {\n            questions.push('What is my highest priority for personal growth right now?');\n            questions.push('How can I trust my inner wisdom more fully?');\n            questions.push('What would love do in this situation?');\n        }\n        \n        return questions.slice(0, 5); // Return max 5 questions\n    }\n\n    generateOverallInsight() {\n        const majorArcanaCount = this.drawnCards.filter(c => c.suit === \"Major Arcana\").length;\n        const reversedCount = this.drawnCards.filter(c => c.isReversed).length;\n        const elements = this.getElementalDistribution();\n        \n        let insight = \"\";\n        \n        if (majorArcanaCount > this.drawnCards.length / 2) {\n            insight += \"This reading carries significant spiritual weight with major life lessons at play. \";\n        }\n        \n        if (reversedCount > this.drawnCards.length / 2) {\n            insight += \"The presence of reversed cards suggests internal processing and the need for reflection. \";\n        }\n        \n        const dominantElement = Object.keys(elements).reduce((a, b) => elements[a] > elements[b] ? a : b);\n        if (elements[dominantElement] > 1) {\n            insight += `The ${dominantElement} element dominates, emphasizing ${this.getElementalFocus(dominantElement)}. `;\n        }\n        \n        return insight || \"This reading provides a balanced perspective on your current situation with varied influences at play.\";\n    }\n\n    getElementalDistribution() {\n        const elements = { Fire: 0, Water: 0, Air: 0, Earth: 0 };\n        this.drawnCards.forEach(card => {\n            if (card.element && elements.hasOwnProperty(card.element)) {\n                elements[card.element]++;\n            }\n        });\n        return elements;\n    }\n\n    getElementalFocus(element) {\n        const focuses = {\n            Fire: \"passion, creativity, and taking action\",\n            Water: \"emotions, intuition, and spiritual connection\",\n            Air: \"communication, thoughts, and mental clarity\",\n            Earth: \"practical matters, material stability, and grounding\"\n        };\n        return focuses[element] || \"balanced energy\";\n    }\n\n    analyzeReading() {\n        if (!this.drawnCards.length) return;\n\n        // Generate comprehensive analysis\n        this.currentAnalysis = this.analysisEngine.analyzeReading(this.drawnCards, this.currentSpread.type);\n        \n        // Display analysis\n        this.displayAnalysis();\n        \n        // Show analysis panel\n        this.showElement('analysisPanel');\n        \n        // Smooth scroll to analysis\n        document.getElementById('analysisPanel').scrollIntoView({ behavior: 'smooth' });\n    }\n\n    displayAnalysis() {\n        if (!this.currentAnalysis) return;\n\n        // Update each analysis tab\n        this.updateOverviewTab();\n        this.updatePsychologyTab();\n        this.updateSpiritualTab();\n        this.updateKabbalahTab();\n        this.updateChakrasTab();\n        this.updateArchetypesTab();\n        this.updateTimingTab();\n        this.updateKarmaTab();\n        this.updateNumerologyTab();\n        this.updateElementsTab();\n        this.updateAstrologyTab();\n        this.updateGeometryTab();\n        this.updateSymbolismTab();\n        this.updateInteractionsTab();\n        this.updateShadowTab();\n        this.updateAlchemyTab();\n        this.updateMythologyTab();\n        this.updateQuantumTab();\n    }\n\n    updateOverviewTab() {\n        const analysis = this.currentAnalysis;\n        \n        document.getElementById('readingOverview').innerHTML = `\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Spiritual Intensity</span>\n                <span class=\"metric-value\">${analysis.overview.intensity}</span>\n            </div>\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Major Arcana Cards</span>\n                <span class=\"metric-value\">${analysis.overview.majorArcanaCount}</span>\n            </div>\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Reversed Cards</span>\n                <span class=\"metric-value\">${analysis.overview.reversedCount}</span>\n            </div>\n            <p class=\"text-sm text-gray-300 mt-3\">${analysis.overview.interpretation}</p>\n        `;\n        \n        document.getElementById('elementalBalance').innerHTML = `\n            <div class=\"element-breakdown\">\n                ${Object.entries(analysis.elemental.distribution).map(([element, count]) => `\n                    <div class=\"element-item\">\n                        <div class=\"element-indicator ${element.toLowerCase()}\"></div>\n                        <span class=\"element-name\">${element}</span>\n                        <span class=\"element-count\">${count}</span>\n                    </div>\n                `).join('')}\n            </div>\n            <div class=\"progress-bar-container mt-3\">\n                <div class=\"progress-bar-fill\" style=\"width: ${analysis.elemental.balance}%\"></div>\n            </div>\n            <p class=\"text-sm text-gray-300 mt-2\">Balance Score: ${Math.round(analysis.elemental.balance)}%</p>\n            <p class=\"text-sm text-gray-300 mt-2\">${analysis.elemental.interpretation}</p>\n        `;\n        \n        document.getElementById('suitDistribution').innerHTML = `\n            <div class=\"suit-breakdown\">\n                ${Object.entries(analysis.suits.distribution).map(([suit, count]) => `\n                    <div class=\"analysis-metric\">\n                        <span class=\"metric-label\">${suit}</span>\n                        <span class=\"metric-value\">${count}</span>\n                    </div>\n                `).join('')}\n            </div>\n            <p class=\"text-sm text-gray-300 mt-3\">${analysis.suits.interpretation}</p>\n        `;\n        \n        document.getElementById('energyAssessment').innerHTML = `\n            <div class=\"energy-metrics\">\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\">Energy Type</span>\n                    <span class=\"metric-value\">${analysis.energy.energyType}</span>\n                </div>\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\">Forward-Moving</span>\n                    <span class=\"metric-value\">${analysis.energy.forwardMoving}</span>\n                </div>\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\">Blocked/Internal</span>\n                    <span class=\"metric-value\">${analysis.energy.blocked}</span>\n                </div>\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\">Transformative</span>\n                    <span class=\"metric-value\">${analysis.energy.transformative}</span>\n                </div>\n            </div>\n            <p class=\"text-sm text-gray-300 mt-3\">${analysis.energy.interpretation}</p>\n        `;\n    }\n\n    updatePsychologyTab() {\n        const analysis = this.currentAnalysis.psychology;\n        \n        document.getElementById('jungianAnalysis').innerHTML = `\n            <div class=\"archetype-list\">\n                ${Object.entries(analysis.dominantArchetypes).map(([archetype, count]) => `\n                    <div class=\"pattern-indicator\">\n                        <div class=\"pattern-dot\"></div>\n                        <span>${archetype} (${count})</span>\n                    </div>\n                `).join('')}\n            </div>\n            <p class=\"text-sm text-gray-300 mt-3\">${analysis.interpretation}</p>\n        `;\n        \n        document.getElementById('shadowWork').innerHTML = `\n            <ul class=\"insights-list\">\n                ${analysis.shadowWork.map(work => `<li>${work}</li>`).join('')}\n            </ul>\n            ${analysis.shadowWork.length === 0 ? '<p class=\"text-gray-400\">No significant shadow work indicated in this reading.</p>' : ''}\n        `;\n        \n        document.getElementById('animaAnimus').innerHTML = `\n            <ul class=\"insights-list\">\n                ${analysis.animaAnimus.map(aspect => `<li>${aspect}</li>`).join('')}\n            </ul>\n            ${analysis.animaAnimus.length === 0 ? '<p class=\"text-gray-400\">No significant anima/animus dynamics present.</p>' : ''}\n        `;\n        \n        document.getElementById('collectiveUnconscious').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.collectiveUnconscious}</p>\n        `;\n        \n        document.getElementById('psychologicalPatterns').innerHTML = `\n            <p class=\"text-sm text-gray-300\">Psychological patterns indicate themes of personal growth, integration, and the journey toward wholeness.</p>\n        `;\n    }\n\n    updateSpiritualTab() {\n        const analysis = this.currentAnalysis.spiritual;\n        \n        document.getElementById('soulLessons').innerHTML = `\n            <ul class=\"insights-list\">\n                ${analysis.soulLessons.map(lesson => `<li>${lesson}</li>`).join('')}\n            </ul>\n        `;\n        \n        document.getElementById('spiritualGifts').innerHTML = `\n            <ul class=\"insights-list\">\n                ${analysis.spiritualGifts.map(gift => `<li>${gift}</li>`).join('')}\n            </ul>\n            ${analysis.spiritualGifts.length === 0 ? '<p class=\"text-gray-400\">Spiritual gifts are present but may need development.</p>' : ''}\n        `;\n        \n        document.getElementById('higherSelfMessages').innerHTML = `\n            <ul class=\"insights-list\">\n                ${analysis.higherSelf.map(message => `<li>${message}</li>`).join('')}\n            </ul>\n        `;\n        \n        document.getElementById('ascensionPath').innerHTML = `\n            <ul class=\"insights-list\">\n                ${analysis.ascension.map(path => `<li>${path}</li>`).join('')}\n            </ul>\n            ${analysis.ascension.length === 0 ? '<p class=\"text-gray-400\">Continue on your current spiritual path with patience and dedication.</p>' : ''}\n        `;\n    }\n\n    updateKabbalahTab() {\n        const analysis = this.currentAnalysis.kabbalah;\n        \n        document.getElementById('treeOfLife').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.interpretation}</p>\n        `;\n        \n        document.getElementById('sephirothInfluences').innerHTML = `\n            <div class=\"sephiroth-list\">\n                ${Object.entries(analysis.sephirothInfluence).map(([sephira, count]) => `\n                    <div class=\"analysis-metric\">\n                        <span class=\"metric-label\">${sephira}</span>\n                        <span class=\"metric-value\">${count}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('pathworking').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.activePaths.length} active paths on the Tree of Life are highlighted in this reading.</p>\n        `;\n        \n        document.getElementById('hebrewLetters').innerHTML = `\n            <div class=\"hebrew-letters\">\n                ${analysis.hebrewLetters.map(letter => `<span class=\"hebrew-letter\">${letter}</span>`).join(' ')}\n            </div>\n        `;\n    }\n\n    updateChakrasTab() {\n        const analysis = this.currentAnalysis.chakras;\n        \n        document.getElementById('chakraAlignment').innerHTML = `\n            <div class=\"chakra-list\">\n                ${Object.entries(analysis.alignment).map(([chakra, count]) => `\n                    <div class=\"analysis-metric\">\n                        <span class=\"metric-label\">${chakra}</span>\n                        <span class=\"metric-value\">${count}</span>\n                    </div>\n                `).join('')}\n            </div>\n            <p class=\"text-sm text-gray-300 mt-3\">${analysis.interpretation}</p>\n        `;\n        \n        document.getElementById('energyBlocks').innerHTML = `\n            <p class=\"text-sm text-gray-300\">Energy blocks may be present in areas with zero activation. Focus on balancing these chakras.</p>\n        `;\n        \n        document.getElementById('kundaliniFlow').innerHTML = `\n            <p class=\"text-sm text-gray-300\">Kundalini energy flows most freely through activated chakras. Meditation and yoga can enhance this flow.</p>\n        `;\n        \n        document.getElementById('meridianActivity').innerHTML = `\n            <p class=\"text-sm text-gray-300\">Meridian activity corresponds to chakra activation. Consider acupuncture or energy healing for balance.</p>\n        `;\n    }\n\n    updateArchetypesTab() {\n        const analysis = this.currentAnalysis.archetypes;\n        \n        document.getElementById('primaryArchetypes').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.primary}</p>\n        `;\n        \n        document.getElementById('mythologicalConnections').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.mythological}</p>\n        `;\n        \n        document.getElementById('heroJourney').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.interpretation}</p>\n        `;\n        \n        document.getElementById('goddessAspects').innerHTML = `\n            <p class=\"text-sm text-gray-300\">Divine feminine energy is present in various forms throughout this reading.</p>\n        `;\n    }\n\n    updateTimingTab() {\n        const analysis = this.currentAnalysis.timing;\n        \n        document.getElementById('seasonalTiming').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.seasonal}</p>\n        `;\n        \n        document.getElementById('lunarCycles').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.lunar}</p>\n        `;\n        \n        document.getElementById('planetaryTransits').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.planetary}</p>\n        `;\n        \n        document.getElementById('manifestationWindows').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.interpretation}</p>\n        `;\n    }\n\n    updateKarmaTab() {\n        const analysis = this.currentAnalysis.karma;\n        \n        document.getElementById('karmicDebts').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.debts}</p>\n        `;\n        \n        document.getElementById('pastLifeInfluences').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.pastLife}</p>\n        `;\n        \n        document.getElementById('soulContracts').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.contracts}</p>\n        `;\n        \n        document.getElementById('dharmicPurpose').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.dharma}</p>\n        `;\n    }\n\n    updateNumerologyTab() {\n        const analysis = this.currentAnalysis.numerology;\n        \n        document.getElementById('numerologyLifePath').innerHTML = `\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Life Path Number</span>\n                <span class=\"metric-value text-2xl\">${analysis.lifePath}</span>\n            </div>\n            ${analysis.masterNumbers.length > 0 ? `\n                <div class=\"master-numbers mt-3\">\n                    <h5 class=\"text-sm font-semibold text-yellow-400 mb-2\">Master Numbers Present:</h5>\n                    ${analysis.masterNumbers.map(m => `\n                        <div class=\"master-number-item\">\n                            <span class=\"text-lg font-bold\">${m.number}</span> - ${m.card}<br>\n                            <span class=\"text-xs text-gray-400\">${m.meaning}</span>\n                        </div>\n                    `).join('')}\n                </div>\n            ` : ''}\n        `;\n        \n        document.getElementById('numerologyPatterns').innerHTML = `\n            ${analysis.repeatingPatterns.length > 0 ? `\n                <div class=\"repeating-patterns\">\n                    ${analysis.repeatingPatterns.map(p => `\n                        <div class=\"pattern-item mb-2\">\n                            <span class=\"font-semibold\">${p.number}</span> appears ${p.frequency} times<br>\n                            <span class=\"text-xs text-gray-400\">${p.meaning}</span>\n                        </div>\n                    `).join('')}\n                </div>\n            ` : '<p class=\"text-sm text-gray-400\">No repeating patterns detected</p>'}\n        `;\n        \n        document.getElementById('pythagoreanAnalysis').innerHTML = `\n            <div class=\"pythagorean-grid\">\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\">Soul Urge</span>\n                    <span class=\"metric-value\">${analysis.pythagoreanAnalysis.soulUrge}</span>\n                </div>\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\">Expression</span>\n                    <span class=\"metric-value\">${analysis.pythagoreanAnalysis.expression}</span>\n                </div>\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\">Personality</span>\n                    <span class=\"metric-value\">${analysis.pythagoreanAnalysis.personality}</span>\n                </div>\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\">Maturity</span>\n                    <span class=\"metric-value\">${analysis.pythagoreanAnalysis.maturity}</span>\n                </div>\n            </div>\n        `;\n        \n        document.getElementById('angelNumbers').innerHTML = `\n            ${analysis.angelNumbers.length > 0 ? `\n                <div class=\"angel-numbers\">\n                    ${analysis.angelNumbers.map(a => `\n                        <div class=\"angel-number-item mb-2\">\n                            <span class=\"font-bold text-teal-400\">${a.sequence}</span><br>\n                            <span class=\"text-sm\">${a.meaning}</span>\n                        </div>\n                    `).join('')}\n                </div>\n            ` : ''}\n            <div class=\"frequency-info mt-3\">\n                <span class=\"text-xs text-gray-400\">Overall Vibrational Frequency:</span><br>\n                <span class=\"text-lg font-semibold\">${analysis.vibrationalFrequencies.overall.toFixed(2)} Hz</span>\n            </div>\n        `;\n    }\n\n    updateElementsTab() {\n        const analysis = this.currentAnalysis.elementalDignities;\n        \n        document.getElementById('elementalDignities').innerHTML = `\n            <div class=\"dignities-summary\">\n                <p class=\"text-sm mb-2\">Dominant Element: <span class=\"font-semibold text-teal-400\">${analysis.dominantElement || 'Balanced'}</span></p>\n                ${analysis.missingElements.length > 0 ? `\n                    <p class=\"text-sm text-yellow-400\">Missing: ${analysis.missingElements.join(', ')}</p>\n                ` : ''}\n            </div>\n        `;\n        \n        document.getElementById('elementalFlow').innerHTML = `\n            <div class=\"flow-diagram\">\n                ${analysis.elementalFlow.map((flow, i) => `\n                    <div class=\"flow-item\">\n                        <span class=\"position-number\">${flow.position}</span>\n                        <span class=\"element-name\">${flow.element}</span>\n                        ${flow.flowDirection !== 'terminus' ? `\n                            <span class=\"flow-arrow ${flow.flowDirection}\">→</span>\n                        ` : ''}\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('strengtheningPairs').innerHTML = `\n            ${analysis.strengtheningPairs.length > 0 ? `\n                <div class=\"pair-list\">\n                    ${analysis.strengtheningPairs.map(p => `\n                        <div class=\"pair-item mb-2\">\n                            <span class=\"font-semibold\">${p.cards[0]} + ${p.cards[1]}</span><br>\n                            <span class=\"text-sm text-gray-400\">${p.effect}</span>\n                        </div>\n                    `).join('')}\n                </div>\n            ` : '<p class=\"text-sm text-gray-400\">No strengthening combinations found</p>'}\n        `;\n        \n        document.getElementById('elementalBalanceDetail').innerHTML = `\n            <div class=\"element-chart\">\n                ${Object.entries(analysis.elementalBalance).map(([element, count]) => `\n                    <div class=\"element-bar\">\n                        <span class=\"element-label\">${element}</span>\n                        <div class=\"bar-container\">\n                            <div class=\"bar-fill ${element.toLowerCase()}\" style=\"width: ${(count / this.drawnCards.length) * 100}%\"></div>\n                        </div>\n                        <span class=\"element-count\">${count}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n    }\n\n    updateAstrologyTab() {\n        const analysis = this.currentAnalysis.astrologicalTransits;\n        \n        document.getElementById('currentTransits').innerHTML = `\n            <div class=\"transit-info\">\n                <p class=\"mb-2\">Lunar Phase: <span class=\"font-semibold\">${analysis.lunarPhase}</span></p>\n                <p class=\"mb-2\">Planetary Hour: <span class=\"font-semibold\">${analysis.planetaryHours}</span></p>\n                ${analysis.retrogrades.length > 0 ? `\n                    <p class=\"text-yellow-400\">Retrogrades: ${analysis.retrogrades.join(', ')}</p>\n                ` : ''}\n            </div>\n        `;\n        \n        document.getElementById('planetaryInfluences').innerHTML = `\n            <div class=\"planetary-list\">\n                ${analysis.cardAstrology.map(ca => `\n                    <div class=\"planetary-item mb-2\">\n                        <span class=\"font-semibold\">${ca.card}</span> - ${ca.astrological}<br>\n                        <span class=\"text-sm text-gray-400\">${ca.currentTransit}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('lunarPhaseImpact').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.interpretation.split('\\n')[0]}</p>\n        `;\n        \n        document.getElementById('aspectPatterns').innerHTML = `\n            ${analysis.aspectPatterns.length > 0 ? `\n                <div class=\"aspect-list\">\n                    ${analysis.aspectPatterns.map(pattern => `\n                        <div class=\"aspect-item\">${pattern}</div>\n                    `).join('')}\n                </div>\n            ` : '<p class=\"text-sm text-gray-400\">No significant aspect patterns detected</p>'}\n        `;\n    }\n\n    updateGeometryTab() {\n        const analysis = this.currentAnalysis.sacredGeometry;\n        \n        document.getElementById('goldenRatio').innerHTML = `\n            ${analysis.goldenRatio.length > 0 ? `\n                <div class=\"ratio-list\">\n                    ${analysis.goldenRatio.map(r => `\n                        <div class=\"ratio-item mb-2\">\n                            <span class=\"font-semibold\">${r.card}</span><br>\n                            ${r.relationships.map(rel => `\n                                <span class=\"text-sm\">With ${rel.withCard}: ${rel.ratio.toFixed(3)} - ${rel.significance}</span><br>\n                            `).join('')}\n                        </div>\n                    `).join('')}\n                </div>\n            ` : '<p class=\"text-sm text-gray-400\">No golden ratio relationships found</p>'}\n        `;\n        \n        document.getElementById('fibonacciSequences').innerHTML = `\n            ${analysis.fibonacciSequence.length > 0 ? `\n                <div class=\"fibonacci-list\">\n                    ${analysis.fibonacciSequence.map(f => `\n                        <div class=\"fib-item mb-2\">\n                            <span class=\"font-semibold\">${f.card}</span> - Number ${f.number}<br>\n                            <span class=\"text-sm text-gray-400\">${f.meaning}</span>\n                        </div>\n                    `).join('')}\n                </div>\n            ` : '<p class=\"text-sm text-gray-400\">No Fibonacci numbers present</p>'}\n        `;\n        \n        document.getElementById('platonicSolids').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.platonicSolids.length} Platonic solid correspondences found</p>\n        `;\n        \n        document.getElementById('sacredPatterns').innerHTML = `\n            <div class=\"pattern-summary\">\n                ${analysis.geometricPatterns.map(pattern => `\n                    <div class=\"pattern-badge\">${pattern}</div>\n                `).join('')}\n            </div>\n        `;\n    }\n\n    updateSymbolismTab() {\n        const analysis = this.currentAnalysis.symbolism;\n        \n        document.getElementById('archetypicalSymbols').innerHTML = `\n            <div class=\"symbol-grid\">\n                ${analysis.archetypicalSymbols.slice(0, 6).map(s => `\n                    <div class=\"symbol-item\">\n                        <span class=\"symbol-name\">${s.symbol}</span><br>\n                        <span class=\"text-xs text-gray-400\">${s.card}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('colorSymbolism').innerHTML = `\n            <div class=\"color-analysis\">\n                ${analysis.colorSymbolism.slice(0, 4).map(c => `\n                    <div class=\"color-item mb-2\">\n                        <span class=\"color-indicator\" style=\"background-color: ${c.color}\"></span>\n                        <span class=\"ml-2\">${c.color} - ${c.meaning}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('animalPlantTotems').innerHTML = `\n            <div class=\"totem-list\">\n                ${analysis.animalSymbolism.slice(0, 3).map(a => `\n                    <div class=\"totem-item\">${a.animal} - ${a.totemMeaning}</div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('alchemicalSymbols').innerHTML = `\n            <p class=\"text-sm text-gray-300\">Dominant themes: ${analysis.dominantThemes.join(', ')}</p>\n        `;\n    }\n\n    updateInteractionsTab() {\n        const analysis = this.currentAnalysis.cardInteractions;\n        \n        document.getElementById('cardConnections').innerHTML = `\n            <div class=\"connection-list\">\n                ${analysis.directConnections.slice(0, 4).map(conn => `\n                    <div class=\"connection-item mb-2\">\n                        <span class=\"font-semibold\">${conn.from} → ${conn.to}</span><br>\n                        <span class=\"text-sm text-gray-400\">${conn.connectionType}: ${conn.narrative}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('energyFlows').innerHTML = `\n            <div class=\"energy-flow-diagram\">\n                ${analysis.energyFlows.map(flow => `\n                    <div class=\"energy-node\">${flow}</div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('narrativeThreads').innerHTML = `\n            <div class=\"narrative-list\">\n                ${analysis.narrativeThreads.slice(0, 3).map(thread => `\n                    <div class=\"narrative-item mb-2\">${thread}</div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('cardClusters').innerHTML = `\n            ${analysis.cardClusters.length > 0 ? `\n                <div class=\"cluster-list\">\n                    ${analysis.cardClusters.map(cluster => `\n                        <div class=\"cluster-item\">${cluster}</div>\n                    `).join('')}\n                </div>\n            ` : '<p class=\"text-sm text-gray-400\">No significant card clusters detected</p>'}\n        `;\n    }\n\n    updateShadowTab() {\n        const analysis = this.currentAnalysis.shadowWork;\n        \n        document.getElementById('shadowAspects').innerHTML = `\n            <div class=\"shadow-list\">\n                ${analysis.shadowAspects.map(aspect => `\n                    <div class=\"shadow-item mb-3\">\n                        <span class=\"font-semibold\">${aspect.card}</span><br>\n                        <span class=\"text-sm\">Manifestation: ${aspect.shadowManifestation}</span><br>\n                        <span class=\"text-sm text-gray-400\">Fear: ${aspect.underlyingFear}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('projectionsDenials').innerHTML = `\n            ${analysis.projections.length > 0 ? `\n                <div class=\"projection-list\">\n                    ${analysis.projections.map(proj => `\n                        <div class=\"projection-item mb-2\">\n                            <span class=\"font-semibold\">${proj.card}</span><br>\n                            <span class=\"text-sm\">${proj.projectedQualities.join(', ')}</span>\n                        </div>\n                    `).join('')}\n                </div>\n            ` : '<p class=\"text-sm text-gray-400\">No significant projections identified</p>'}\n        `;\n        \n        document.getElementById('integrationOpportunities').innerHTML = `\n            <div class=\"integration-list\">\n                ${analysis.integrationOpportunities.map(opp => `\n                    <div class=\"integration-item mb-2\">• ${opp}</div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('shadowGifts').innerHTML = `\n            <div class=\"gift-list\">\n                ${analysis.shadowGifts.map(gift => `\n                    <div class=\"gift-item text-teal-400\">✦ ${gift}</div>\n                `).join('')}\n            </div>\n        `;\n    }\n\n    updateAlchemyTab() {\n        const analysis = this.currentAnalysis.alchemical;\n        \n        document.getElementById('alchemicalStage').innerHTML = `\n            <div class=\"stage-indicator\">\n                <span class=\"text-2xl font-bold\">${analysis.currentStage || 'Prima Materia'}</span>\n                <p class=\"text-sm text-gray-400 mt-2\">${this.getAlchemicalStageDescription(analysis.currentStage)}</p>\n            </div>\n        `;\n        \n        document.getElementById('transformationProcess').innerHTML = `\n            <div class=\"process-steps\">\n                ${analysis.transformation.map((step, i) => `\n                    <div class=\"process-step\">\n                        <span class=\"step-number\">${i + 1}</span>\n                        <span class=\"step-description\">${step}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('primaMateria').innerHTML = `\n            <p class=\"text-sm text-gray-300\">${analysis.primaMateria.join(', ')}</p>\n        `;\n        \n        document.getElementById('philosophersStone').innerHTML = `\n            ${analysis.philosophersStone.length > 0 ? `\n                <div class=\"stone-indicators\">\n                    ${analysis.philosophersStone.map(indicator => `\n                        <div class=\"stone-item text-yellow-400\">✦ ${indicator}</div>\n                    `).join('')}\n                </div>\n            ` : '<p class=\"text-sm text-gray-400\">The Great Work continues...</p>'}\n        `;\n    }\n\n    updateMythologyTab() {\n        const analysis = this.currentAnalysis.mythological;\n        \n        document.getElementById('heroJourneyStage').innerHTML = `\n            <div class=\"journey-map\">\n                ${analysis.heroJourney.map(stage => `\n                    <div class=\"journey-stage mb-2\">\n                        <span class=\"font-semibold\">${stage.card}</span> - ${stage.stage}<br>\n                        <span class=\"text-sm text-gray-400\">${stage.meaning}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('divineArchetypes').innerHTML = `\n            <div class=\"archetype-grid\">\n                ${analysis.goddessArchetypes.concat(analysis.godArchetypes).slice(0, 4).map(arch => `\n                    <div class=\"archetype-card\">\n                        <span class=\"archetype-name\">${arch.goddess || arch.god}</span><br>\n                        <span class=\"text-xs\">${arch.card}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('culturalMythologies').innerHTML = `\n            <div class=\"mythology-list\">\n                ${Object.entries(analysis.culturalMythologies).filter(([_, myths]) => myths.length > 0).map(([culture, myths]) => `\n                    <div class=\"mythology-item mb-2\">\n                        <span class=\"font-semibold capitalize\">${culture}:</span> ${myths.slice(0, 2).join(', ')}\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('cosmicCycles').innerHTML = `\n            <div class=\"cycle-list\">\n                ${analysis.cosmicCycles.map(cycle => `\n                    <div class=\"cycle-item\">${cycle}</div>\n                `).join('')}\n            </div>\n        `;\n    }\n\n    updateQuantumTab() {\n        const analysis = this.currentAnalysis.quantumField;\n        \n        document.getElementById('fieldCoherence').innerHTML = `\n            <div class=\"coherence-meter\">\n                <span class=\"text-2xl font-bold\">${(analysis.fieldCoherence * 100).toFixed(1)}%</span>\n                <div class=\"coherence-bar\">\n                    <div class=\"coherence-fill\" style=\"width: ${analysis.fieldCoherence * 100}%\"></div>\n                </div>\n                <p class=\"text-sm text-gray-400 mt-2\">Field coherence indicates energetic alignment</p>\n            </div>\n        `;\n        \n        document.getElementById('quantumEntanglements').innerHTML = `\n            <div class=\"entanglement-list\">\n                ${analysis.entanglements.map(ent => `\n                    <div class=\"entanglement-item mb-2\">\n                        <span class=\"font-semibold\">${ent.cards[0]} ↔ ${ent.cards[1]}</span><br>\n                        <span class=\"text-sm\">Strength: ${(ent.strength * 100).toFixed(0)}% - ${ent.type}</span>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('probabilityFields').innerHTML = `\n            <div class=\"probability-visualization\">\n                ${analysis.probabilityFields.map(field => `\n                    <div class=\"probability-node\">${field}</div>\n                `).join('')}\n            </div>\n        `;\n        \n        document.getElementById('synchronicities').innerHTML = `\n            <div class=\"sync-list\">\n                ${analysis.synchronicities.map(sync => `\n                    <div class=\"sync-item text-teal-400\">✨ ${sync}</div>\n                `).join('')}\n            </div>\n        `;\n    }\n\n    getAlchemicalStageDescription(stage) {\n        const descriptions = {\n            'nigredo': 'The blackening - decomposition and shadow work',\n            'albedo': 'The whitening - purification and illumination',\n            'citrinitas': 'The yellowing - solar consciousness emerging',\n            'rubedo': 'The reddening - final integration and wholeness'\n        };\n        return descriptions[stage?.toLowerCase()] || 'The beginning of transformation';\n    }\n\n    switchAnalysisTab(tabName) {\n        // Hide all tab contents\n        document.querySelectorAll('.tab-content').forEach(content => {\n            content.classList.remove('active');\n        });\n        \n        // Remove active class from all buttons\n        document.querySelectorAll('.tab-button').forEach(button => {\n            button.classList.remove('active');\n        });\n        \n        // Show selected tab content\n        document.getElementById(`${tabName}Tab`).classList.add('active');\n        \n        // Add active class to clicked button\n        document.querySelector(`[data-tab=\"${tabName}\"]`).classList.add('active');\n    }\n\n    saveReading() {\n        if (!this.drawnCards.length) return;\n\n        const reading = {\n            id: Date.now(),\n            date: new Date().toISOString(),\n            spreadType: this.currentSpread.type,\n            spreadName: this.currentSpread.name,\n            cards: this.drawnCards.map(card => ({\n                name: card.name,\n                isReversed: card.isReversed,\n                position: card.position,\n                positionIndex: card.positionIndex\n            })),\n            analysis: this.currentAnalysis\n        };\n\n        this.savedReadings.unshift(reading);\n        \n        // Keep only last 50 readings\n        if (this.savedReadings.length > 50) {\n            this.savedReadings = this.savedReadings.slice(0, 50);\n        }\n        \n        localStorage.setItem('tarotReadings', JSON.stringify(this.savedReadings));\n        this.loadSavedReadings();\n        \n        // Show success message\n        this.showTemporaryMessage('Reading saved successfully!', 'success');\n    }\n\n    loadSavedReadings() {\n        const container = document.getElementById('savedReadingsList');\n        if (!container) return;\n\n        if (this.savedReadings.length === 0) {\n            container.innerHTML = '<p class=\"text-gray-400 text-center py-8\">No saved readings yet. Complete a reading and save it to see it here.</p>';\n            return;\n        }\n\n        container.innerHTML = this.savedReadings.map(reading => `\n            <div class=\"saved-reading-card\" data-reading-id=\"${reading.id}\">\n                <div class=\"saved-reading-header\">\n                    <h4 class=\"font-semibold text-blue-300\">${reading.spreadName}</h4>\n                    <span class=\"text-sm text-gray-400\">${new Date(reading.date).toLocaleDateString()}</span>\n                </div>\n                <div class=\"saved-reading-preview\">\n                    <p class=\"text-sm text-gray-300\">${reading.cards.length} cards drawn</p>\n                    <div class=\"saved-reading-cards\">\n                        ${reading.cards.slice(0, 3).map(card => `\n                            <span class=\"saved-card-name\">${card.name}${card.isReversed ? ' (R)' : ''}</span>\n                        `).join(', ')}\n                        ${reading.cards.length > 3 ? '...' : ''}\n                    </div>\n                </div>\n                <div class=\"saved-reading-actions\">\n                    <button class=\"load-reading-btn\" onclick=\"tarotApp.loadSavedReading(${reading.id})\">Load</button>\n                    <button class=\"delete-reading-btn\" onclick=\"tarotApp.deleteSavedReading(${reading.id})\">Delete</button>\n                </div>\n            </div>\n        `).join('');\n    }\n\n    loadSavedReading(readingId) {\n        const reading = this.savedReadings.find(r => r.id === readingId);\n        if (!reading) return;\n\n        // Reset current state\n        this.resetReading();\n        \n        // Set up the reading\n        this.currentSpread = { ...spreads[reading.spreadType], type: reading.spreadType };\n        this.drawnCards = reading.cards.map(cardData => {\n            const fullCard = tarotCards.find(c => c.name === cardData.name);\n            return {\n                ...fullCard,\n                isReversed: cardData.isReversed,\n                position: cardData.position,\n                positionIndex: cardData.positionIndex\n            };\n        });\n        \n        // Display the reading\n        this.displaySavedReading();\n        \n        // Load analysis if available\n        if (reading.analysis) {\n            this.currentAnalysis = reading.analysis;\n            this.displayAnalysis();\n        }\n        \n        this.showTemporaryMessage('Reading loaded successfully!', 'success');\n    }\n\n    displaySavedReading() {\n        const readingArea = document.getElementById('readingArea');\n        readingArea.innerHTML = '';\n        \n        const spreadContainer = document.createElement('div');\n        spreadContainer.className = `reading-grid reading-grid-${this.currentSpread.type}`;\n        \n        this.drawnCards.forEach(card => {\n            const cardElement = this.cardRenderer.createCardElement(card, card.position);\n            spreadContainer.appendChild(cardElement);\n        });\n        \n        readingArea.appendChild(spreadContainer);\n        \n        // Show relevant buttons\n        this.showButton('resetReadingBtn');\n        this.showButton('saveReadingBtn');\n        this.showButton('analyzeReadingBtn');\n        \n        // Generate summary\n        this.generateReadingSummary();\n        \n        // Update instruction\n        this.updateInstructionText(\"Saved reading loaded. Click on cards for detailed meanings or use the analysis tools.\");\n    }\n\n    deleteSavedReading(readingId) {\n        if (!confirm('Are you sure you want to delete this reading?')) return;\n        \n        this.savedReadings = this.savedReadings.filter(r => r.id !== readingId);\n        localStorage.setItem('tarotReadings', JSON.stringify(this.savedReadings));\n        this.loadSavedReadings();\n        \n        this.showTemporaryMessage('Reading deleted successfully!', 'success');\n    }\n\n    resetReading() {\n        this.readingInProgress = false;\n        this.currentSpread = null;\n        this.drawnCards = [];\n        this.currentDeck = [];\n        this.currentAnalysis = null;\n        \n        // Reset UI\n        this.showElement('spreadSelection');\n        this.hideAllButtons();\n        this.hideElement('deckContainer');\n        // Remove ready-to-draw class when resetting\n        const deckCard = document.querySelector('.deck-card');\n        if (deckCard) {\n            deckCard.classList.remove('ready-to-draw');\n        }\n        this.hideElement('readingSummary');\n        this.hideElement('analysisPanel');\n        this.clearReadingArea();\n        \n        // Clear selections\n        document.querySelectorAll('.spread-option').forEach(opt => opt.classList.remove('selected'));\n        \n        this.updateInstructionText(\"Select a spread type to begin your mystical journey\");\n    }\n\n    shuffleDeck(deck) {\n        const shuffled = [...deck];\n        for (let i = shuffled.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n        }\n        return shuffled;\n    }\n\n    closeModal() {\n        document.getElementById('cardModal').classList.add('hidden');\n        document.getElementById('cardModal').classList.remove('flex');\n    }\n\n    handleKeyboardShortcuts(e) {\n        if (e.ctrlKey || e.metaKey) {\n            switch (e.key) {\n                case 'n':\n                    e.preventDefault();\n                    this.resetReading();\n                    break;\n                case 's':\n                    e.preventDefault();\n                    if (this.drawnCards.length > 0) {\n                        this.saveReading();\n                    }\n                    break;\n                case 'a':\n                    e.preventDefault();\n                    if (this.drawnCards.length > 0) {\n                        this.analyzeReading();\n                    }\n                    break;\n            }\n        }\n        \n        if (e.key === 'Escape') {\n            this.closeModal();\n        }\n    }\n\n    // Utility methods\n    showElement(elementId) {\n        const element = document.getElementById(elementId);\n        if (element) element.classList.remove('hidden');\n    }\n\n    hideElement(elementId) {\n        const element = document.getElementById(elementId);\n        if (element) element.classList.add('hidden');\n    }\n\n    showButton(buttonId) {\n        const button = document.getElementById(buttonId);\n        if (button) button.classList.remove('hidden');\n    }\n\n    hideButton(buttonId) {\n        const button = document.getElementById(buttonId);\n        if (button) button.classList.add('hidden');\n    }\n\n    hideAllButtons() {\n        ['startReadingBtn', 'resetReadingBtn', 'saveReadingBtn', 'analyzeReadingBtn'].forEach(id => {\n            this.hideButton(id);\n        });\n    }\n\n    clearReadingArea() {\n        const readingArea = document.getElementById('readingArea');\n        if (readingArea) readingArea.innerHTML = '';\n    }\n\n    updateInstructionText(text) {\n        const instructionElement = document.getElementById('instructionText');\n        if (instructionElement) instructionElement.textContent = text;\n    }\n\n    enableDeckInteraction() {\n        const deckContainer = document.getElementById('deckContainer');\n        if (deckContainer) {\n            deckContainer.classList.remove('disabled');\n            deckContainer.style.cursor = 'pointer';\n        }\n    }\n\n    disableDeckInteraction() {\n        const deckContainer = document.getElementById('deckContainer');\n        if (deckContainer) {\n            deckContainer.classList.add('disabled');\n            deckContainer.style.cursor = 'not-allowed';\n        }\n    }\n\n    showTemporaryMessage(message, type = 'info') {\n        // Create temporary message element\n        const messageDiv = document.createElement('div');\n        messageDiv.className = `temporary-message ${type}`;\n        messageDiv.textContent = message;\n        messageDiv.style.cssText = `\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background: ${type === 'success' ? '#10b981' : '#3b82f6'};\n            color: white;\n            padding: 1rem 1.5rem;\n            border-radius: 8px;\n            z-index: 1000;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n            animation: slideIn 0.3s ease-out;\n        `;\n        \n        document.body.appendChild(messageDiv);\n        \n        // Remove after 3 seconds\n        setTimeout(() => {\n            messageDiv.style.animation = 'slideOut 0.3s ease-in';\n            setTimeout(() => {\n                if (messageDiv.parentNode) {\n                    messageDiv.parentNode.removeChild(messageDiv);\n                }\n            }, 300);\n        }, 3000);\n    }\n\n    // Show mode selection UI\n    showModeSelection() {\n        const modalDiv = document.createElement('div');\n        modalDiv.id = 'modeSelectionModal';\n        modalDiv.className = 'mode-selection-modal';\n        modalDiv.innerHTML = `\n            <div class=\"mode-selection-content\">\n                <h3 class=\"text-xl font-semibold mb-4 text-teal-400\">Choose Your Reading Method</h3>\n                <div class=\"mode-options\">\n                    <button class=\"mode-option-btn\" data-mode=\"draw\">\n                        <div class=\"mode-icon\">🎴</div>\n                        <h4 class=\"text-lg font-semibold mb-2\">Draw Cards</h4>\n                        <p class=\"text-sm text-gray-300\">Let fate guide your reading by randomly drawing cards from the deck</p>\n                    </button>\n                    <button class=\"mode-option-btn\" data-mode=\"manual\">\n                        <div class=\"mode-icon\">🔮</div>\n                        <h4 class=\"text-lg font-semibold mb-2\">Select Cards</h4>\n                        <p class=\"text-sm text-gray-300\">Choose specific cards from the deck for your reading</p>\n                    </button>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(modalDiv);\n        \n        // Add event listeners\n        modalDiv.querySelectorAll('.mode-option-btn').forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                this.readingMode = e.currentTarget.dataset.mode;\n                this.closeModeSelection();\n                \n                if (this.readingMode === 'draw') {\n                    this.startDrawMode();\n                } else {\n                    this.startManualMode();\n                }\n            });\n        });\n    }\n    \n    closeModeSelection() {\n        const modal = document.getElementById('modeSelectionModal');\n        if (modal) {\n            modal.remove();\n        }\n    }\n    \n    startDrawMode() {\n        this.showElement('deckContainer');\n        this.updateInstructionText(`Draw ${this.currentSpread.cardCount} card(s) for your ${this.currentSpread.name} reading. Click the deck to draw your first card.`);\n        this.enableDeckInteraction();\n        // Add ready-to-draw class to show \"CLICK TO DRAW\" text\n        const deckCard = document.querySelector('.deck-card');\n        if (deckCard) {\n            deckCard.classList.add('ready-to-draw');\n        }\n    }\n    \n    startManualMode() {\n        this.cardSelectionInProgress = true;\n        this.showCardPicker();\n    }\n    \n    showCardPicker() {\n        const pickerDiv = document.createElement('div');\n        pickerDiv.id = 'cardPickerModal';\n        pickerDiv.className = 'card-picker-modal';\n        \n        // Group cards by suit\n        const cardsBySuit = {\n            'Major Arcana': [],\n            'Wands': [],\n            'Cups': [],\n            'Swords': [],\n            'Pentacles': []\n        };\n        \n        tarotCards.forEach(card => {\n            cardsBySuit[card.suit].push(card);\n        });\n        \n        const cardsNeeded = this.currentSpread.cardCount - this.drawnCards.length;\n        \n        pickerDiv.innerHTML = `\n            <div class=\"card-picker-content\">\n                <div class=\"card-picker-header\">\n                    <h3 class=\"text-xl font-semibold text-teal-400\">Select ${cardsNeeded} Card${cardsNeeded > 1 ? 's' : ''}</h3>\n                    <p class=\"text-sm text-gray-300\">Position: ${this.currentSpread.positions[this.drawnCards.length].name}</p>\n                    <button id=\"closeCardPicker\" class=\"close-picker-btn\">×</button>\n                </div>\n                <div class=\"card-picker-suits\">\n                    ${Object.entries(cardsBySuit).map(([suit, cards]) => `\n                        <div class=\"suit-section\">\n                            <h4 class=\"suit-header\">${suit}</h4>\n                            <div class=\"suit-cards\">\n                                ${cards.map(card => `\n                                    <button class=\"picker-card\" data-card-name=\"${card.name}\" \n                                            ${this.isCardAlreadyDrawn(card) ? 'disabled' : ''}>\n                                        <span class=\"picker-card-name\">${card.name}</span>\n                                        ${this.isCardAlreadyDrawn(card) ? '<span class=\"card-used\">Used</span>' : ''}\n                                    </button>\n                                `).join('')}\n                            </div>\n                        </div>\n                    `).join('')}\n                </div>\n                <div class=\"card-picker-footer\">\n                    <label class=\"reversed-option\">\n                        <input type=\"checkbox\" id=\"reverseCardOption\">\n                        <span>Draw as reversed</span>\n                    </label>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(pickerDiv);\n        \n        // Add event listeners\n        document.getElementById('closeCardPicker').addEventListener('click', () => this.closeCardPicker());\n        \n        pickerDiv.querySelectorAll('.picker-card:not([disabled])').forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                const cardName = e.currentTarget.dataset.cardName;\n                const isReversed = document.getElementById('reverseCardOption').checked;\n                this.selectCard(cardName, isReversed);\n            });\n        });\n    }\n    \n    closeCardPicker() {\n        const picker = document.getElementById('cardPickerModal');\n        if (picker) {\n            picker.remove();\n        }\n        this.cardSelectionInProgress = false;\n    }\n    \n    isCardAlreadyDrawn(card) {\n        return this.drawnCards.some(drawn => drawn.name === card.name);\n    }\n    \n    selectCard(cardName, isReversed) {\n        const card = tarotCards.find(c => c.name === cardName);\n        if (!card) return;\n        \n        // Create drawn card with position info\n        const drawnCard = {\n            ...card,\n            isReversed,\n            position: this.currentSpread.positions[this.drawnCards.length],\n            positionIndex: this.drawnCards.length,\n            timestamp: new Date().toISOString()\n        };\n        \n        // Add to drawn cards\n        this.drawnCards.push(drawnCard);\n        \n        // Display the card\n        this.displayCard(drawnCard);\n        \n        // Close picker\n        this.closeCardPicker();\n        \n        // Check if more cards needed\n        if (this.drawnCards.length < this.currentSpread.cardCount) {\n            setTimeout(() => {\n                this.showCardPicker();\n            }, 300);\n        } else {\n            this.completeReading();\n        }\n    }\n}","mtime":1753008922904.6213,"doc":"Main Tarot Application Controller Orchestrates all modules and handles the main application logic","isExported":false,"methods":["bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90"],"properties":["cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy"],"embedding":[-0.09528309106826782,0.07450249791145325,-0.09467936307191849,-0.020896514877676964,0.031137937679886818,-0.0018502132734283805,0.047199733555316925,0.08136913180351257,-0.05549909546971321,-0.07561875134706497,0.011947992257773876,-0.036929745227098465,-0.07704093307256699,-0.030839571729302406,-0.03318208456039429,0.023270798847079277,-0.013947965577244759,-0.0070726945996284485,0.05513190105557442,0.006026815623044968,0.06349486857652664,0.03290168568491936,0.03907189890742302,0.015129158273339272,-0.10641659796237946,0.08272020518779755,-0.04204047843813896,0.0027229872066527605,0.08874987810850143,-0.039554279297590256,-0.037597205489873886,0.09946829080581665,-0.04621089622378349,0.031561922281980515,-0.02745937928557396,0.04379357397556305,0.03493634983897209,0.021233638748526573,-0.019317204132676125,0.0054248664528131485,0.04618816077709198,0.03444268926978111,-0.06240805983543396,-0.0017585072200745344,-0.0037875580601394176,-0.0715184435248375,-0.03701494261622429,-0.004555057268589735,0.0068466863594949245,-0.046631503850221634,-0.014513750560581684,-0.0022421914618462324,0.037893664091825485,-0.06491988897323608,0.00966672319918871,-0.04316845163702965,0.026124637573957443,-0.04882919788360596,0.005743683315813541,-0.04207264631986618,-0.025913195684552193,0.08749031275510788,0.02144213765859604,0.007485433481633663,0.04205050691962242,-0.02736210636794567,0.01921331137418747,0.04880669340491295,0.10101957619190216,-0.06794368475675583,-0.05074096843600273,-0.00918670929968357,0.05791117623448372,-0.007459818385541439,-0.04580419883131981,-0.020423980429768562,0.03080575168132782,0.08476097136735916,0.00015054371033329517,-0.09249144047498703,-0.07935356348752975,-0.01894734799861908,0.06434489786624908,-0.008379935286939144,-0.004979202523827553,0.0014124728040769696,0.040292926132678986,0.004699650686234236,0.10241437703371048,0.013711326755583286,0.06720162183046341,-0.0177925992757082,-0.03507278859615326,0.025623738765716553,-0.027082476764917374,-0.005386735778301954,0.028136130422353745,-0.038164686411619186,-0.1015995517373085,0.05642009899020195,-0.02386820688843727,-0.009469876997172832,-0.0010761242592707276,-0.03389497473835945,0.09426873177289963,-0.006379661615937948,0.02527843602001667,-0.034533459693193436,-0.015606993809342384,-0.022301819175481796,-0.010835029184818268,-0.05444706603884697,-0.05668222904205322,-0.019015243276953697,0.0650525763630867,-0.033634502440690994,-0.07668444514274597,0.00831170380115509,-0.006594487000256777,0.11570426821708679,0.0071162390522658825,0.010843113996088505,0.09261453151702881,-0.01650921441614628,-0.025943057611584663,-0.023751407861709595,-0.05617540702223778,4.634593658996201e-33,0.02585015632212162,-0.011771454475820065,-0.049929216504096985,0.06397413462400436,-0.002762402407824993,0.039034001529216766,-0.005237701814621687,0.06305432319641113,0.01574014313519001,0.03576648607850075,-0.013778858818113804,0.021364498883485794,0.014748633839190006,0.10406993329524994,-0.025797856971621513,-0.02505161613225937,-0.07473064959049225,-0.000994559028185904,0.025823161005973816,-0.12308192253112793,-0.02424832433462143,0.08381140977144241,0.06728585064411163,-0.09228579699993134,-0.04040324687957764,0.16208942234516144,0.016548210754990578,-0.000748520134948194,0.015379729680716991,0.050717465579509735,0.12830674648284912,-0.019593525677919388,-0.03665938228368759,0.009453603997826576,0.03932156041264534,0.07518836110830307,-0.018698791041970253,0.007084493990987539,-0.026867112144827843,0.05087454244494438,-0.08650339394807816,-0.04025180637836456,-0.010694913566112518,-0.10380972176790237,-0.02196112647652626,-0.06214490532875061,0.05387580767273903,0.035689014941453934,-0.044553495943546295,0.025710564106702805,-0.11235940456390381,0.02173970639705658,0.023072946816682816,0.02963152714073658,-0.014201892539858818,-0.05885801836848259,0.060336142778396606,-0.002166330348700285,0.03322615474462509,-0.0367969311773777,-0.08894175291061401,0.04678750038146973,-0.07907935976982117,0.0029354384168982506,-0.06440228223800659,0.059219371527433395,-0.06529513001441956,-0.11372643709182739,-0.005367496982216835,-0.012638832442462444,-0.021130435168743134,-0.0015298451762646437,0.03336228430271149,0.07692066580057144,0.02159857377409935,0.012780271470546722,-0.02710002101957798,0.012403753586113453,-0.1069180890917778,-0.05417688563466072,-0.11782459914684296,-0.030173378065228462,0.0029897410422563553,-0.0604550801217556,-0.014678017236292362,-0.061871372163295746,0.04614608362317085,0.022069811820983887,-0.02577788755297661,-0.005029856227338314,-0.07423371821641922,0.0026487656868994236,0.019352678209543228,-0.027489956468343735,0.09655088186264038,-6.631237670109059e-33,0.05097069591283798,0.012940319254994392,-0.07739295065402985,-0.06665017455816269,0.01026009302586317,-0.04241650179028511,0.04391440749168396,0.0003736511862371117,-0.016579696908593178,-0.026040468364953995,-0.031984537839889526,0.052884068340063095,0.04082392528653145,0.03902271017432213,0.027532445266842842,0.04563285410404205,-0.07879187911748886,-0.018491720780730247,0.009615285322070122,-0.0612296462059021,-0.06773573160171509,0.03675689920783043,-0.05193642899394035,0.05951707437634468,-0.06706814467906952,-0.005904707126319408,0.03978423401713371,-0.03525351360440254,0.06091470271348953,-0.07101073861122131,0.07957080006599426,-0.05100564658641815,-0.01254585012793541,0.02559945173561573,-0.06075233221054077,0.05350055173039436,0.0775824636220932,-0.00041777073056437075,-0.046529799699783325,0.004112304653972387,0.05955516919493675,-0.006482829339802265,-0.04357533901929855,-0.0452662855386734,-0.01641071029007435,-0.04337625205516815,-0.02672622911632061,-0.017422519624233246,0.005839717574417591,0.006603224202990532,0.011212165467441082,-0.10052009671926498,0.0639427974820137,-0.04837770015001297,0.029210872948169708,0.035157058387994766,0.03597544506192207,0.047062624245882034,-0.08804290741682053,0.1182473674416542,0.0561002716422081,-0.04444439709186554,0.002515834989026189,-0.05063540115952492,0.016983501613140106,-0.023038504645228386,-0.03439365699887276,-0.004461071919649839,0.04516459256410599,-0.0027966133784502745,0.03048740327358246,0.07961282134056091,-0.029840299859642982,-0.006208788137882948,-0.05011396482586861,-0.003798340680077672,0.07151459157466888,-0.01736960932612419,0.10000927746295929,-0.1433277130126953,0.024518979713320732,-0.08916385471820831,0.034886278212070465,0.012083248235285282,0.010495000518858433,-0.011120093055069447,0.038858503103256226,-0.04643935337662697,0.0567607544362545,-0.04994521290063858,0.006988449487835169,0.017875997349619865,0.003669210011139512,0.07944215834140778,-0.006966686341911554,-4.085561045030772e-8,-0.02103029377758503,0.006803139578551054,0.006182191427797079,0.038364265114068985,-0.05889900401234627,-0.004142416175454855,0.037683237344026566,-0.020264560356736183,-0.10429626703262329,-0.01319038588553667,0.06194687634706497,0.07856670767068863,0.019810127094388008,-0.02136843279004097,0.08973752707242966,-0.006467924918979406,-0.028391167521476746,0.04557725414633751,-0.05628901347517967,-0.03688126429915428,0.032159678637981415,-0.07289684563875198,0.02562369778752327,0.0116205383092165,0.02153213880956173,-0.0527203194797039,0.08820471167564392,0.0002981121651828289,0.006436380557715893,0.0029558546375483274,0.025804273784160614,0.08435021340847015,0.040876321494579315,-0.012256992049515247,0.08599571138620377,0.10979574918746948,-0.047097183763980865,-0.010715210810303688,0.08488696068525314,0.13427141308784485,-0.055537570267915726,-0.0195473562926054,-0.09827246516942978,-0.08412516862154007,0.03664923831820488,-0.0021435909438878298,-0.09078913182020187,-0.047804638743400574,-0.04316180944442749,0.01361164916306734,-0.015537800267338753,0.08121463656425476,-0.03512866795063019,0.06914615631103516,0.007918483577668667,0.04380945488810539,-0.022540045902132988,-0.05691913887858391,0.026032796129584312,-0.010882892645895481,0.04438479617238045,0.023761270567774773,0.055462419986724854,0.016859324648976326]},{"id":"aW1wb3J0LTM2NDkt","type":"import","qualifiedName":"important to do your research and seek advice before making major career moves.\",\n                \n                spiritual: \"Spiritually, the reversed Fool suggests spiritual bypassing or avoiding necessary inner work. You may be seeking quick fixes or following spiritual trends without true understanding. This card encourages you to ground your spiritual practice in genuine self-reflection and growth.\"\n            }\n        },\n        \n        correlations: {\n            mythology: \"The Fool is connected to the Greek god Dionysus, representing divine madness and ecstasy. In Norse mythology, this energy is reflected in Odin's willingness to sacrifice himself for wisdom.\",\n            psychology: \"Corresponds to Jung's concept of the puer aeternus (eternal child) and the archetype of the Innocent. Represents the unconscious mind's unlimited potential before being shaped by experience.\",\n            alchemy: \"Represents the prima materia, the raw material from which all transformation begins. The Fool embodies the alchemical principle of solve et coagula (dissolve and coagulate).\",\n            iching: \"Correlates with Hexagram 25 (Wu Wang) - Innocence/The Unexpected, representing spontaneous action and natural flow.\",\n            bodySystem: \"Associated with the nervous system and brain, particularly the frontal lobe responsible for decision-making and impulse control.\"\n        },\n        \n        bookReferences: [\n            \"Waite, A.E. 'The Pictorial Key to the Tarot' (1910) - Original RWS interpretation\",\n            \"Crowley, Aleister 'The Book of Thoth' (1944) - Thelemic perspective on The Fool\",\n            \"Case, Paul Foster 'The Tarot: A Key to the Wisdom of the Ages' (1947) - Hermetic Qabalah connections\",\n            \"Nichols, Sallie 'Jung and Tarot: An Archetypal Journey' (1980) - Jungian psychological analysis\",\n            \"Pollack, Rachel 'Seventy-Eight Degrees of Wisdom' (1980) - Modern interpretive approach\",\n            \"Greer, Mary K. 'Tarot for Your Self' (1984) - Psychological and spiritual development\",\n            \"Bunning, Joan 'Learning the Tarot' (1998) - Beginner-friendly interpretation\",\n            \"Place, Robert 'The Tarot: History, Symbolism, and Divination' (2005) - Historical context\"\n        ],\n        \n        deeperMeaning: {\n            esoteric: \"The Fool represents the divine spark before incarnation, the soul's journey from unity to multiplicity. In Kabbalistic terms, it's the path from Kether (Crown) to Chokmah (Wisdom), representing the first emanation of divine consciousness into form.\",\n            \n            philosophical: \"Embodies the existentialist concept of radical freedom and the courage to create meaning in an absurd universe. The Fool represents authentic being before societal conditioning.\",\n            \n            archetypal: \"The Fool is the Hero at the beginning of the Hero's Journey, representing the call to adventure and the willingness to leave the familiar for the unknown. This archetype appears in stories worldwide as the unlikely hero who succeeds through innocence and pure intention.\"\n        }\n    },\n    \n    {\n        name: \"The Magician\",\n        number: 1,\n        suit: \"Major Arcana\",\n        element: \"Air\",\n        astrology: \"Mercury\",\n        numerology: 1,\n        hebrewLetter: \"Beth\",\n        kabbalisticPath: 12,\n        treeOfLife: [\"Kether\", \"Binah\"],\n        chakra: \"Throat\",\n        jungianArchetype: \"The Magician\",\n        image: \"img/big/major_01_Magician.jpg\",\n        \n        keywords: {\n            upright: [\"Manifestation\", \"Resourcefulness\", \"Power\", \"Inspired action\", \"Will\", \"Concentration\", \"Skill\", \"Mastery\"],\n            reversed: [\"Manipulation\", \"Poor planning\", \"Untapped talents\", \"Lack of focus\", \"Trickery\", \"Misuse of power\"]\n        },\n        \n        meanings: {\n            upright: {\n                general: \"The Magician symbolizes the power of will and the ability to manifest desires into reality. This card represents having all the tools and skills necessary to achieve your goals. The Magician channels divine energy through focused intention and skilled action. This is the card of the skilled craftsperson, the visionary leader, and the person who can turn ideas into tangible results through dedication and expertise.\",\n                \n                love: \"In relationships, The Magician suggests you have the power to create the love life you desire. This card indicates strong communication skills, charisma, and the ability to attract what you seek. For those in relationships, it suggests the power to transform and improve the partnership through conscious effort and clear intention.\",\n                \n                career: \"Professionally, The Magician represents leadership, innovation, and the ability to manifest career success. This card suggests you have the skills and resources needed to advance your professional goals. It's an excellent time for launching new projects, starting businesses, or taking on leadership roles. The Magician encourages you to use your unique talents and vision.\",\n                \n                spiritual: \"Spiritually, The Magician represents the power of focused intention in spiritual practice. This card suggests mastery over the elements and the ability to manifest spiritual goals through disciplined practice. It represents the conscious use of will in spiritual development and the integration of spiritual principles into daily life.\"\n            },\n            \n            reversed: {\n                general: \"When reversed, The Magician warns against manipulation, trickery, or the misuse of power. This card can indicate that you're not using your full potential or that you lack the focus needed to achieve your goals. There may be a tendency to use shortcuts or unethical means to get what you want. The reversed Magician can also suggest feeling powerless or lacking confidence in your abilities.\",\n                \n                love: \"In love, the reversed Magician may indicate manipulation or deception in relationships. Someone may be using their charm or influence for selfish purposes. This card warns against trying to control or manipulate partners. It can also suggest that you're not being authentic in your relationships or that you're trying too hard to impress others.\",\n                \n                career: \"Career-wise, the reversed Magician suggests poor planning, lack of focus, or the misuse of professional skills. You may be taking shortcuts that could damage your reputation or using your position for personal gain at others' expense. This card encourages you to examine your motivations and ensure your actions align with your values.\",\n                \n                spiritual: \"Spiritually, the reversed Magician warns against spiritual materialism or using spiritual practices for ego gratification. You may be seeking power over others rather than true spiritual development. This card encourages humility and the ethical use of any spiritual gifts or abilities you may have.\"\n            }\n        },\n        \n        correlations: {\n            mythology: \"Connected to Hermes/Mercury, the messenger god and guide between worlds. Also relates to Thoth, the Egyptian god of wisdom and magic, and to Odin's shamanic abilities.\",\n            psychology: \"Represents the ego at its most functional - the ability to focus will and manifest desires. Corresponds to Jung's concept of the individuated self that has integrated all aspects of the psyche.\",\n            alchemy: \"Represents the alchemist who transforms base metals into gold, symbolizing the transformation of consciousness. The four tools on the altar represent the four elements under the magician's control.\",\n            iching: \"Correlates with Hexagram 1 (Qian) - The Creative, representing pure yang energy and the power of focused intention.\",\n            bodySystem: \"Associated with the hands and nervous system, representing the ability to channel energy and intention into physical manifestation.\"\n        },\n        \n        bookReferences: [\n            \"Waite, A.E. 'The Pictorial Key to the Tarot' (1910) - Classical interpretation of The Magician\",\n            \"Crowley, Aleister 'The Book of Thoth' (1944) - The Magus in Thelemic philosophy\",\n            \"Case, Paul Foster 'The Tarot: A Key to the Wisdom of the Ages' (1947) - Hermetic symbolism\",\n            \"Fortune, Dion 'The Mystical Qabalah' (1935) - Kabbalistic associations\",\n            \"Regardie, Israel 'The Golden Dawn' (1937) - Ceremonial magic connections\",\n            \"Nichols, Sallie 'Jung and Tarot: An Archetypal Journey' (1980) - Psychological depth\",\n            \"Pollack, Rachel 'Seventy-Eight Degrees of Wisdom' (1980) - Modern interpretation\",\n            \"Greer, Mary K. 'The Complete Guide to Tarot Spreads' (1987) - Practical applications\"\n        ],\n        \n        deeperMeaning: {\n            esoteric: \"The Magician represents the divine will manifesting through human consciousness. In Kabbalistic terms, it's the path from Kether (pure consciousness) to Binah (form), representing the first act of creation through divine will.\",\n            \n            philosophical: \"Embodies the Hermetic principle 'As above, so below' - the ability to bring spiritual truths into material reality. Represents the philosopher's stone of consciousness - the ability to transform any situation through focused will.\",\n            \n            archetypal: \"The Magician is the Wise Old Man/Woman archetype, the master teacher who has learned to work with natural and spiritual laws. This figure appears in myths as the wizard, shaman, or sage who helps the hero develop their powers.\"\n        }\n    },\n    \n    {\n        name: \"The High Priestess\",\n        number: 2,\n        suit: \"Major Arcana\",\n        element: \"Water\",\n        astrology: \"Moon\",\n        numerology: 2,\n        hebrewLetter: \"Gimel\",\n        kabbalisticPath: 13,\n        treeOfLife: [\"Kether\", \"Tiphereth\"],\n        chakra: \"Third Eye\",\n        jungianArchetype: \"The Wise Woman\",\n        image: \"img/big/major_02_High_Priestess.jpg\",\n        \n        keywords: {\n            upright: [\"Intuition\", \"Sacred knowledge\", \"Divine feminine\", \"Subconscious mind\", \"Mystery\", \"Wisdom\", \"Spirituality\", \"Inner guidance\"],\n            reversed: [\"Secrets\", \"Disconnected from intuition\", \"Lack of center\", \"Repressed feminine\", \"Superficial knowledge\"]\n        },\n        \n        meanings: {\n            upright: {\n                general: \"The High Priestess represents the divine feminine principle, intuition, and access to sacred knowledge. This card suggests a time for introspection and listening to your inner voice. The High Priestess is the guardian of the subconscious mind and the keeper of hidden wisdom. She represents the part of ourselves that knows without being taught, that understands through feeling rather than thinking.\",\n                \n                love: \"In love, The High Priestess suggests a deep, intuitive connection with a partner or the need to trust your instincts about relationships. This card often appears when there are hidden aspects to a relationship that need to be uncovered. It encourages you to look beyond the surface and trust your emotional intelligence in matters of the heart.\",\n                \n                career: \"Professionally, The High Priestess suggests careers involving intuition, counseling, healing, or spiritual guidance. This card encourages you to trust your instincts in business decisions and to value wisdom over mere facts. It can indicate success in fields that require understanding of human nature or working with the subconscious mind.\",\n                \n                spiritual: \"Spiritually, The High Priestess represents deep spiritual wisdom and the ability to access higher consciousness. This card suggests that you have natural psychic abilities or strong intuitive gifts. It encourages meditation, dreamwork, and other practices that connect you with your inner wisdom and the collective unconscious.\"\n            },\n            \n            reversed: {\n                general: \"When reversed, The High Priestess suggests disconnection from intuition and inner wisdom. You may be ignoring your inner voice or being overly influenced by external opinions. This card can indicate secrets being kept or hidden knowledge that needs to be revealed. There may be a tendency to intellectualize everything rather than trusting your gut feelings.\",\n                \n                love: \"In love, the reversed High Priestess may indicate being out of touch with your emotional needs or ignoring red flags in relationships. You may be keeping secrets from your partner or not trusting your instincts about someone's character. This card encourages you to reconnect with your intuitive understanding of love and relationships.\",\n                \n                career: \"Career-wise, the reversed High Priestess suggests that you may be ignoring your instincts about workplace situations or colleagues. You might be relying too heavily on data and facts while ignoring the human element in business decisions. This card encourages you to balance logic with intuition in professional matters.\",\n                \n                spiritual: \"Spiritually, the reversed High Priestess indicates a disconnect from your spiritual practice or inner wisdom. You may be seeking spiritual truth outside yourself rather than trusting your own spiritual experiences. This card encourages you to return to practices that connect you with your inner knowing.\"\n            }\n        },\n        \n        correlations: {\n            mythology: \"Connected to Isis, Artemis, Diana, and other lunar goddesses. Represents the Oracle at Delphi and the priestesses who served at ancient temples as intermediaries between the divine and human realms.\",\n            psychology: \"Represents Jung's anima archetype and the collective unconscious. Corresponds to the right brain's intuitive and holistic processing capabilities.\",\n            alchemy: \"Represents the divine sophia (wisdom) and the alchemical principle of receptivity. The High Priestess embodies the lunar, receptive principle that balances the solar, active principle.\",\n            iching: \"Correlates with Hexagram 2 (Kun) - The Receptive, representing the pure yin principle and the power of yielding wisdom.\",\n            bodySystem: \"Associated with the pineal gland, often called the 'third eye,' and the limbic system, which processes emotions and intuition.\"\n        },\n        \n        bookReferences: [\n            \"Waite, A.E. 'The Pictorial Key to the Tarot' (1910) - Traditional interpretation\",\n            \"Crowley, Aleister 'The Book of Thoth' (1944) - The Priestess in Thelemic tradition\",\n            \"Case, Paul Foster 'The Tarot: A Key to the Wisdom of the Ages' (1947) - Hermetic symbolism\",\n            \"Hall, Manly P. 'The Secret Teachings of All Ages' (1928) - Esoteric symbolism\",\n            \"Nichols, Sallie 'Jung and Tarot: An Archetypal Journey' (1980) - Jungian analysis\",\n            \"Noble, Vicki 'Motherpeace: A Way to the Goddess' (1983) - Feminist interpretation\",\n            \"Pollack, Rachel 'The Body of the Goddess' (1997) - Divine feminine perspective\",\n            \"Greer, Mary K. 'Women of the Golden Dawn' (1995) - Historical feminine wisdom traditions\"\n        ],\n        \n        deeperMeaning: {\n            esoteric: \"The High Priestess represents the divine feminine aspect of consciousness, the receptive principle that receives divine inspiration. She guards the veil between the conscious and unconscious minds, between the known and unknown.\",\n            \n            philosophical: \"Embodies the Platonic concept of intuitive knowledge and the Gnostic tradition of direct spiritual experience. Represents the wisdom that comes through being rather than doing.\",\n            \n            archetypal: \"The High Priestess is the Great Mother archetype in her aspect as the Wise Woman. She appears in myths as the Oracle, the Sibyl, the Goddess of Wisdom who grants knowledge to those who approach her with reverence and humility.\"\n        }\n    }\n    \n    // Additional cards would continue with the same depth and academic rigor...\n    // For the complete deck, each card would include:\n    // - Extensive correlations across multiple systems\n    // - 8-10 book references minimum\n    // - Deep esoteric, philosophical, and archetypal meanings\n    // - Connections to mythology, psychology, alchemy, I-Ching, and body systems\n];","file":"/mnt/c/dev/tarot/js/tarot-data-enhanced.js","startLine":40,"endLine":218,"lines":179,"code":"important to do your research and seek advice before making major career moves.\",\n                \n                spiritual: \"Spiritually, the reversed Fool suggests spiritual bypassing or avoiding necessary inner work. You may be seeking quick fixes or following spiritual trends without true understanding. This card encourages you to ground your spiritual practice in genuine self-reflection and growth.\"\n            }\n        },\n        \n        correlations: {\n            mythology: \"The Fool is connected to the Greek god Dionysus, representing divine madness and ecstasy. In Norse mythology, this energy is reflected in Odin's willingness to sacrifice himself for wisdom.\",\n            psychology: \"Corresponds to Jung's concept of the puer aeternus (eternal child) and the archetype of the Innocent. Represents the unconscious mind's unlimited potential before being shaped by experience.\",\n            alchemy: \"Represents the prima materia, the raw material from which all transformation begins. The Fool embodies the alchemical principle of solve et coagula (dissolve and coagulate).\",\n            iching: \"Correlates with Hexagram 25 (Wu Wang) - Innocence/The Unexpected, representing spontaneous action and natural flow.\",\n            bodySystem: \"Associated with the nervous system and brain, particularly the frontal lobe responsible for decision-making and impulse control.\"\n        },\n        \n        bookReferences: [\n            \"Waite, A.E. 'The Pictorial Key to the Tarot' (1910) - Original RWS interpretation\",\n            \"Crowley, Aleister 'The Book of Thoth' (1944) - Thelemic perspective on The Fool\",\n            \"Case, Paul Foster 'The Tarot: A Key to the Wisdom of the Ages' (1947) - Hermetic Qabalah connections\",\n            \"Nichols, Sallie 'Jung and Tarot: An Archetypal Journey' (1980) - Jungian psychological analysis\",\n            \"Pollack, Rachel 'Seventy-Eight Degrees of Wisdom' (1980) - Modern interpretive approach\",\n            \"Greer, Mary K. 'Tarot for Your Self' (1984) - Psychological and spiritual development\",\n            \"Bunning, Joan 'Learning the Tarot' (1998) - Beginner-friendly interpretation\",\n            \"Place, Robert 'The Tarot: History, Symbolism, and Divination' (2005) - Historical context\"\n        ],\n        \n        deeperMeaning: {\n            esoteric: \"The Fool represents the divine spark before incarnation, the soul's journey from unity to multiplicity. In Kabbalistic terms, it's the path from Kether (Crown) to Chokmah (Wisdom), representing the first emanation of divine consciousness into form.\",\n            \n            philosophical: \"Embodies the existentialist concept of radical freedom and the courage to create meaning in an absurd universe. The Fool represents authentic being before societal conditioning.\",\n            \n            archetypal: \"The Fool is the Hero at the beginning of the Hero's Journey, representing the call to adventure and the willingness to leave the familiar for the unknown. This archetype appears in stories worldwide as the unlikely hero who succeeds through innocence and pure intention.\"\n        }\n    },\n    \n    {\n        name: \"The Magician\",\n        number: 1,\n        suit: \"Major Arcana\",\n        element: \"Air\",\n        astrology: \"Mercury\",\n        numerology: 1,\n        hebrewLetter: \"Beth\",\n        kabbalisticPath: 12,\n        treeOfLife: [\"Kether\", \"Binah\"],\n        chakra: \"Throat\",\n        jungianArchetype: \"The Magician\",\n        image: \"img/big/major_01_Magician.jpg\",\n        \n        keywords: {\n            upright: [\"Manifestation\", \"Resourcefulness\", \"Power\", \"Inspired action\", \"Will\", \"Concentration\", \"Skill\", \"Mastery\"],\n            reversed: [\"Manipulation\", \"Poor planning\", \"Untapped talents\", \"Lack of focus\", \"Trickery\", \"Misuse of power\"]\n        },\n        \n        meanings: {\n            upright: {\n                general: \"The Magician symbolizes the power of will and the ability to manifest desires into reality. This card represents having all the tools and skills necessary to achieve your goals. The Magician channels divine energy through focused intention and skilled action. This is the card of the skilled craftsperson, the visionary leader, and the person who can turn ideas into tangible results through dedication and expertise.\",\n                \n                love: \"In relationships, The Magician suggests you have the power to create the love life you desire. This card indicates strong communication skills, charisma, and the ability to attract what you seek. For those in relationships, it suggests the power to transform and improve the partnership through conscious effort and clear intention.\",\n                \n                career: \"Professionally, The Magician represents leadership, innovation, and the ability to manifest career success. This card suggests you have the skills and resources needed to advance your professional goals. It's an excellent time for launching new projects, starting businesses, or taking on leadership roles. The Magician encourages you to use your unique talents and vision.\",\n                \n                spiritual: \"Spiritually, The Magician represents the power of focused intention in spiritual practice. This card suggests mastery over the elements and the ability to manifest spiritual goals through disciplined practice. It represents the conscious use of will in spiritual development and the integration of spiritual principles into daily life.\"\n            },\n            \n            reversed: {\n                general: \"When reversed, The Magician warns against manipulation, trickery, or the misuse of power. This card can indicate that you're not using your full potential or that you lack the focus needed to achieve your goals. There may be a tendency to use shortcuts or unethical means to get what you want. The reversed Magician can also suggest feeling powerless or lacking confidence in your abilities.\",\n                \n                love: \"In love, the reversed Magician may indicate manipulation or deception in relationships. Someone may be using their charm or influence for selfish purposes. This card warns against trying to control or manipulate partners. It can also suggest that you're not being authentic in your relationships or that you're trying too hard to impress others.\",\n                \n                career: \"Career-wise, the reversed Magician suggests poor planning, lack of focus, or the misuse of professional skills. You may be taking shortcuts that could damage your reputation or using your position for personal gain at others' expense. This card encourages you to examine your motivations and ensure your actions align with your values.\",\n                \n                spiritual: \"Spiritually, the reversed Magician warns against spiritual materialism or using spiritual practices for ego gratification. You may be seeking power over others rather than true spiritual development. This card encourages humility and the ethical use of any spiritual gifts or abilities you may have.\"\n            }\n        },\n        \n        correlations: {\n            mythology: \"Connected to Hermes/Mercury, the messenger god and guide between worlds. Also relates to Thoth, the Egyptian god of wisdom and magic, and to Odin's shamanic abilities.\",\n            psychology: \"Represents the ego at its most functional - the ability to focus will and manifest desires. Corresponds to Jung's concept of the individuated self that has integrated all aspects of the psyche.\",\n            alchemy: \"Represents the alchemist who transforms base metals into gold, symbolizing the transformation of consciousness. The four tools on the altar represent the four elements under the magician's control.\",\n            iching: \"Correlates with Hexagram 1 (Qian) - The Creative, representing pure yang energy and the power of focused intention.\",\n            bodySystem: \"Associated with the hands and nervous system, representing the ability to channel energy and intention into physical manifestation.\"\n        },\n        \n        bookReferences: [\n            \"Waite, A.E. 'The Pictorial Key to the Tarot' (1910) - Classical interpretation of The Magician\",\n            \"Crowley, Aleister 'The Book of Thoth' (1944) - The Magus in Thelemic philosophy\",\n            \"Case, Paul Foster 'The Tarot: A Key to the Wisdom of the Ages' (1947) - Hermetic symbolism\",\n            \"Fortune, Dion 'The Mystical Qabalah' (1935) - Kabbalistic associations\",\n            \"Regardie, Israel 'The Golden Dawn' (1937) - Ceremonial magic connections\",\n            \"Nichols, Sallie 'Jung and Tarot: An Archetypal Journey' (1980) - Psychological depth\",\n            \"Pollack, Rachel 'Seventy-Eight Degrees of Wisdom' (1980) - Modern interpretation\",\n            \"Greer, Mary K. 'The Complete Guide to Tarot Spreads' (1987) - Practical applications\"\n        ],\n        \n        deeperMeaning: {\n            esoteric: \"The Magician represents the divine will manifesting through human consciousness. In Kabbalistic terms, it's the path from Kether (pure consciousness) to Binah (form), representing the first act of creation through divine will.\",\n            \n            philosophical: \"Embodies the Hermetic principle 'As above, so below' - the ability to bring spiritual truths into material reality. Represents the philosopher's stone of consciousness - the ability to transform any situation through focused will.\",\n            \n            archetypal: \"The Magician is the Wise Old Man/Woman archetype, the master teacher who has learned to work with natural and spiritual laws. This figure appears in myths as the wizard, shaman, or sage who helps the hero develop their powers.\"\n        }\n    },\n    \n    {\n        name: \"The High Priestess\",\n        number: 2,\n        suit: \"Major Arcana\",\n        element: \"Water\",\n        astrology: \"Moon\",\n        numerology: 2,\n        hebrewLetter: \"Gimel\",\n        kabbalisticPath: 13,\n        treeOfLife: [\"Kether\", \"Tiphereth\"],\n        chakra: \"Third Eye\",\n        jungianArchetype: \"The Wise Woman\",\n        image: \"img/big/major_02_High_Priestess.jpg\",\n        \n        keywords: {\n            upright: [\"Intuition\", \"Sacred knowledge\", \"Divine feminine\", \"Subconscious mind\", \"Mystery\", \"Wisdom\", \"Spirituality\", \"Inner guidance\"],\n            reversed: [\"Secrets\", \"Disconnected from intuition\", \"Lack of center\", \"Repressed feminine\", \"Superficial knowledge\"]\n        },\n        \n        meanings: {\n            upright: {\n                general: \"The High Priestess represents the divine feminine principle, intuition, and access to sacred knowledge. This card suggests a time for introspection and listening to your inner voice. The High Priestess is the guardian of the subconscious mind and the keeper of hidden wisdom. She represents the part of ourselves that knows without being taught, that understands through feeling rather than thinking.\",\n                \n                love: \"In love, The High Priestess suggests a deep, intuitive connection with a partner or the need to trust your instincts about relationships. This card often appears when there are hidden aspects to a relationship that need to be uncovered. It encourages you to look beyond the surface and trust your emotional intelligence in matters of the heart.\",\n                \n                career: \"Professionally, The High Priestess suggests careers involving intuition, counseling, healing, or spiritual guidance. This card encourages you to trust your instincts in business decisions and to value wisdom over mere facts. It can indicate success in fields that require understanding of human nature or working with the subconscious mind.\",\n                \n                spiritual: \"Spiritually, The High Priestess represents deep spiritual wisdom and the ability to access higher consciousness. This card suggests that you have natural psychic abilities or strong intuitive gifts. It encourages meditation, dreamwork, and other practices that connect you with your inner wisdom and the collective unconscious.\"\n            },\n            \n            reversed: {\n                general: \"When reversed, The High Priestess suggests disconnection from intuition and inner wisdom. You may be ignoring your inner voice or being overly influenced by external opinions. This card can indicate secrets being kept or hidden knowledge that needs to be revealed. There may be a tendency to intellectualize everything rather than trusting your gut feelings.\",\n                \n                love: \"In love, the reversed High Priestess may indicate being out of touch with your emotional needs or ignoring red flags in relationships. You may be keeping secrets from your partner or not trusting your instincts about someone's character. This card encourages you to reconnect with your intuitive understanding of love and relationships.\",\n                \n                career: \"Career-wise, the reversed High Priestess suggests that you may be ignoring your instincts about workplace situations or colleagues. You might be relying too heavily on data and facts while ignoring the human element in business decisions. This card encourages you to balance logic with intuition in professional matters.\",\n                \n                spiritual: \"Spiritually, the reversed High Priestess indicates a disconnect from your spiritual practice or inner wisdom. You may be seeking spiritual truth outside yourself rather than trusting your own spiritual experiences. This card encourages you to return to practices that connect you with your inner knowing.\"\n            }\n        },\n        \n        correlations: {\n            mythology: \"Connected to Isis, Artemis, Diana, and other lunar goddesses. Represents the Oracle at Delphi and the priestesses who served at ancient temples as intermediaries between the divine and human realms.\",\n            psychology: \"Represents Jung's anima archetype and the collective unconscious. Corresponds to the right brain's intuitive and holistic processing capabilities.\",\n            alchemy: \"Represents the divine sophia (wisdom) and the alchemical principle of receptivity. The High Priestess embodies the lunar, receptive principle that balances the solar, active principle.\",\n            iching: \"Correlates with Hexagram 2 (Kun) - The Receptive, representing the pure yin principle and the power of yielding wisdom.\",\n            bodySystem: \"Associated with the pineal gland, often called the 'third eye,' and the limbic system, which processes emotions and intuition.\"\n        },\n        \n        bookReferences: [\n            \"Waite, A.E. 'The Pictorial Key to the Tarot' (1910) - Traditional interpretation\",\n            \"Crowley, Aleister 'The Book of Thoth' (1944) - The Priestess in Thelemic tradition\",\n            \"Case, Paul Foster 'The Tarot: A Key to the Wisdom of the Ages' (1947) - Hermetic symbolism\",\n            \"Hall, Manly P. 'The Secret Teachings of All Ages' (1928) - Esoteric symbolism\",\n            \"Nichols, Sallie 'Jung and Tarot: An Archetypal Journey' (1980) - Jungian analysis\",\n            \"Noble, Vicki 'Motherpeace: A Way to the Goddess' (1983) - Feminist interpretation\",\n            \"Pollack, Rachel 'The Body of the Goddess' (1997) - Divine feminine perspective\",\n            \"Greer, Mary K. 'Women of the Golden Dawn' (1995) - Historical feminine wisdom traditions\"\n        ],\n        \n        deeperMeaning: {\n            esoteric: \"The High Priestess represents the divine feminine aspect of consciousness, the receptive principle that receives divine inspiration. She guards the veil between the conscious and unconscious minds, between the known and unknown.\",\n            \n            philosophical: \"Embodies the Platonic concept of intuitive knowledge and the Gnostic tradition of direct spiritual experience. Represents the wisdom that comes through being rather than doing.\",\n            \n            archetypal: \"The High Priestess is the Great Mother archetype in her aspect as the Wise Woman. She appears in myths as the Oracle, the Sibyl, the Goddess of Wisdom who grants knowledge to those who approach her with reverence and humility.\"\n        }\n    }\n    \n    // Additional cards would continue with the same depth and academic rigor...\n    // For the complete deck, each card would include:\n    // - Extensive correlations across multiple systems\n    // - 8-10 book references minimum\n    // - Deep esoteric, philosophical, and archetypal meanings\n    // - Connections to mythology, psychology, alchemy, I-Ching, and body systems\n];","mtime":1752839934055.529,"doc":"","modulePath":"","elements":["mythology: \"The Fool is connected to the Greek god Dionysus","representing divine madness and ecstasy. In Norse mythology","this energy is reflected in Odin's willingness to sacrifice himself for wisdom.\"","psychology: \"Corresponds to Jung's concept of the puer aeternus (eternal child) and the archetype of the Innocent. Represents the unconscious mind's unlimited potential before being shaped by experience.\"","alchemy: \"Represents the prima materia","the raw material from which all transformation begins. The Fool embodies the alchemical principle of solve et coagula (dissolve and coagulate).\"","iching: \"Correlates with Hexagram 25 (Wu Wang) - Innocence/The Unexpected","representing spontaneous action and natural flow.\"","bodySystem: \"Associated with the nervous system and brain","particularly the frontal lobe responsible for decision-making and impulse control.\""],"relationships":{"dependsOn":"","imports":["mythology: \"The Fool is connected to the Greek god Dionysus","representing divine madness and ecstasy. In Norse mythology","this energy is reflected in Odin's willingness to sacrifice himself for wisdom.\"","psychology: \"Corresponds to Jung's concept of the puer aeternus (eternal child) and the archetype of the Innocent. Represents the unconscious mind's unlimited potential before being shaped by experience.\"","alchemy: \"Represents the prima materia","the raw material from which all transformation begins. The Fool embodies the alchemical principle of solve et coagula (dissolve and coagulate).\"","iching: \"Correlates with Hexagram 25 (Wu Wang) - Innocence/The Unexpected","representing spontaneous action and natural flow.\"","bodySystem: \"Associated with the nervous system and brain","particularly the frontal lobe responsible for decision-making and impulse control.\""]},"embedding":[-0.010106020607054234,0.0468725748360157,0.02341730147600174,0.019103625789284706,-0.02414829283952713,0.017148127779364586,0.02548578567802906,-0.005201305262744427,0.0036620679311454296,0.009957520291209221,-0.034371424466371536,0.05171702057123184,-0.031177999451756477,-0.05308399349451065,0.005956224165856838,0.00008850507583701983,-0.06321746855974197,0.04971259459853172,-0.03022482432425022,-0.015914294868707657,-0.047302838414907455,-0.013409428298473358,-0.010180942714214325,0.009470649063587189,0.09215158969163895,0.00648202421143651,-0.04610113427042961,-0.002108400920405984,0.012274272739887238,-0.028515899553894997,0.018752502277493477,0.11698757857084274,0.0008331189746968448,0.014072454534471035,-0.05790459364652634,0.1301296204328537,-0.038070060312747955,0.07471157610416412,0.15155190229415894,-0.019105499610304832,-0.02926712855696678,-0.013891217298805714,0.0031089801341295242,-0.09391286224126816,-0.0039850324392318726,-0.1392751932144165,-0.004907835274934769,-0.04960975795984268,0.03315018117427826,-0.076470747590065,-0.13337014615535736,-0.09718277305364609,-0.08047045767307281,0.06084425002336502,-0.02103099226951599,0.03940804302692413,0.027505790814757347,-0.014501336961984634,-0.004618203733116388,-0.011665484867990017,0.03560459241271019,0.019082168117165565,0.033600371330976486,0.017916284501552582,0.009828698821365833,0.009693179279565811,-0.015690471976995468,0.007850763387978077,-0.07387364655733109,0.05107560381293297,-0.0009649056009948254,-0.10861989110708237,-0.052571091800928116,0.007009296212345362,0.07594341039657593,-0.05234352871775627,-0.04425820708274841,-0.03827282413840294,-0.0009970933897420764,0.014238978736102581,0.043376874178647995,0.07373031973838806,-0.015683500096201897,0.05182332918047905,-0.035329025238752365,0.02160601317882538,0.02639349363744259,0.005172353703528643,0.08234881609678268,0.0408005528151989,-0.008846317417919636,-0.11754906922578812,-0.030592547729611397,0.04875471442937851,0.02099846862256527,0.0605313703417778,-0.0403006337583065,-0.0791209414601326,-0.006945659872144461,0.04251054301857948,-0.002030565869063139,-0.011955532245337963,0.036468926817178726,-0.026274630799889565,0.01807287335395813,0.021468069404363632,0.012237411923706532,-0.01506546139717102,0.054909598082304,-0.037469182163476944,0.0037603951059281826,0.07826970517635345,-0.015667105093598366,0.0007246892200782895,0.04311464726924896,0.15249253809452057,-0.0005166298942640424,0.07215290516614914,-0.004951245617121458,0.04310552403330803,-0.0508236326277256,0.0877634584903717,0.09281369298696518,0.02429007552564144,-0.05422215908765793,-0.06280504912137985,0.014619439840316772,-2.1449434600576366e-33,0.03552067279815674,0.016635430976748466,0.05952005088329315,0.10255692154169083,-0.04264529421925545,0.0050202105194330215,-0.027495084330439568,-0.02644500322639942,-0.019090386107563972,0.011986657977104187,0.07428093254566193,0.10504801571369171,0.04068541154265404,0.06033354625105858,-0.08308178931474686,-0.0001893564040074125,-0.07287770509719849,-0.031203359365463257,0.05269051715731621,-0.07361607253551483,-0.013248368166387081,-0.04117770865559578,-0.01837817020714283,-0.02755158580839634,0.037707600742578506,-0.017379973083734512,0.014820669777691364,-0.04352688044309616,0.0005870141321793199,0.020901810377836227,-0.049421440809965134,0.03515566512942314,0.015021863393485546,-0.04347464442253113,0.041634608060121536,0.12006804347038269,-0.07777652889490128,-0.07581519335508347,0.029392460361123085,-0.03772879019379616,-0.11919707804918289,-0.005030756816267967,-0.06951479613780975,0.01958198845386505,0.03680228814482689,0.02037671208381653,-0.02072090469300747,-0.09652414172887802,0.003940569702535868,0.06752754002809525,-0.05362444743514061,0.01696622557938099,0.07820846885442734,-0.03659120202064514,-0.06529500335454941,-0.03218082711100578,0.06665027886629105,0.04002005606889725,-0.0734485611319542,-0.04518288001418114,-0.05230548977851868,-0.11658486723899841,-0.0621529296040535,-0.019372515380382538,-0.03456754982471466,-0.006054747849702835,-0.03665663301944733,-0.007391706109046936,0.05409236252307892,-0.004558572545647621,-0.0689932256937027,0.03145184367895126,-0.005486170761287212,0.04867590218782425,0.010398070327937603,0.03174535185098648,-0.07914552837610245,-0.01287525799125433,-0.004363004583865404,0.04702547565102577,0.038222674280405045,0.002446583239361644,-0.035429999232292175,0.02775394357740879,0.10704661160707474,-0.023765983060002327,0.06584201008081436,-0.07573658227920532,-0.008334976620972157,0.028095703572034836,0.01854393072426319,0.08778959512710571,0.041774582117795944,0.00547588337212801,-0.11433126032352448,-4.212933182438692e-34,0.005757274106144905,-0.0066535682417452335,0.029181741178035736,0.0676666870713234,0.029136016964912415,-0.0758090615272522,-0.02987692691385746,-0.027382442727684975,0.06605013459920883,0.07269427180290222,-0.003487911308184266,-0.008647315204143524,-0.01064237579703331,-0.005230674520134926,-0.023667242377996445,-0.08767896890640259,-0.06530924886465073,0.0413898341357708,-0.08421134948730469,0.04578200727701187,0.01472046971321106,0.05525702238082886,-0.09479116648435593,0.012606336735188961,-0.041467584669589996,0.05921301990747452,0.023339660838246346,0.06729156523942947,-0.05034015700221062,-0.0660451203584671,0.037194717675447464,0.11511476337909698,0.00282492907717824,-0.05905982106924057,-0.04930907115340233,0.04587806761264801,0.03439725935459137,-0.05026950314640999,-0.05786721408367157,0.03048550710082054,0.027873633429408073,0.02467154897749424,0.01918816938996315,-0.10640052706003189,-0.07814361900091171,-0.055074311792850494,-0.035722121596336365,0.07948198169469833,-0.016163650900125504,-0.029895281419157982,0.0062928274273872375,0.05261683464050293,-0.06194468215107918,-0.027703678235411644,0.054345063865184784,0.0008450186578556895,-0.015513543039560318,-0.01217660028487444,-0.00843724049627781,0.06284119933843613,0.06369391083717346,0.01815842092037201,0.11445055156946182,-0.0024918457493185997,-0.08130805194377899,-0.01276486273854971,-0.03995524346828461,0.02876882255077362,-0.06364379078149796,0.0020743461791425943,0.018034912645816803,0.0563984289765358,-0.04524196684360504,-0.004834158346056938,-0.046298492699861526,-0.015916625037789345,0.025047292932868004,-0.01911858469247818,0.03180192783474922,-0.005357778165489435,0.05573004111647606,-0.07752195000648499,-0.04026087746024132,0.023435575887560844,0.00723658362403512,0.01872275024652481,-0.06414127349853516,0.02117316983640194,-0.05819037929177284,-0.12526704370975494,-0.08421671390533447,-0.03307756036520004,-0.060167741030454636,-0.02295936644077301,0.05241775885224342,-3.967737427501561e-8,-0.02561013773083687,-0.013756762258708477,0.03660638630390167,0.051428139209747314,0.02279786393046379,-0.014773894101381302,0.004806939046829939,-0.06184724345803261,-0.06344862282276154,0.00885254330933094,0.015940114855766296,-0.03965945914387703,-0.025086592882871628,0.0558132529258728,0.06087879464030266,-0.030703675001859665,-0.00304161268286407,-0.0021018367260694504,-0.01578270085155964,-0.043627239763736725,0.01639709249138832,-0.00844256766140461,0.013294558972120285,0.015834283083677292,0.03208111599087715,0.013180133886635303,0.05198146030306816,0.12591493129730225,-0.018423793837428093,0.04843146353960037,0.038285572081804276,0.030998151749372482,-0.013449039310216904,-0.027791228145360947,-0.041821613907814026,-0.030770957469940186,-0.009337208233773708,-0.0807744562625885,0.05657156929373741,0.05954394116997719,0.021924573928117752,0.0023496164940297604,0.04450232535600662,0.04181336238980293,-0.08545800298452377,-0.04583015292882919,0.10449638962745667,0.07460249960422516,-0.03238299489021301,-0.01162742730230093,0.048495352268218994,-0.035914987325668335,0.003977038431912661,-0.02586216665804386,-0.010282711125910282,0.04951327294111252,0.003917797468602657,0.07910671830177307,-0.1354563683271408,-0.05569962412118912,0.11634363979101181,-0.0328114815056324,-0.0186153557151556,-0.007387565448880196]},{"id":"ZXhwb3J0LTI2ODU2","type":"export","qualifiedName":"exports) {\n    module.exports = {\n        tarotCards,\n        minorArcana,\n        tarotCorrelations,\n        tarotBibliography\n    };","file":"/mnt/c/dev/tarot/js/tarot-data-enhanced.js","startLine":365,"endLine":371,"lines":7,"code":"exports) {\n    module.exports = {\n        tarotCards,\n        minorArcana,\n        tarotCorrelations,\n        tarotBibliography\n    };","mtime":1752839934055.529,"doc":"","modulePath":"","elements":["module.exports = {\n        tarotCards","minorArcana","tarotCorrelations","tarotBibliography"],"embedding":[-0.04242025688290596,0.011967129074037075,-0.10276027768850327,0.0008102455176413059,0.03630136325955391,0.022542642429471016,-0.026135459542274475,0.06208363547921181,-0.03546997904777527,-0.05991457775235176,0.03909630328416824,-0.03818764165043831,-0.06950243562459946,-0.04144762456417084,-0.0017255147686228156,0.031852688640356064,-0.05244171619415283,0.07846296578645706,0.02665773406624794,-0.015566613525152206,0.029263339936733246,0.04801926761865616,-0.004505380988121033,0.008190542459487915,0.04102080687880516,0.016344550997018814,-0.01814858615398407,-0.025592120364308357,0.0021388728637248278,-0.0664600357413292,-0.027763668447732925,0.14961761236190796,0.010364064946770668,-0.01647445559501648,0.04537937045097351,0.0720478743314743,0.028543228283524513,-0.0069947452284395695,0.03450751304626465,-0.042462512850761414,0.012237763032317162,0.04785824939608574,0.008919722400605679,-0.006948405876755714,-0.02722550556063652,-0.06080326810479164,-0.013522390276193619,0.00570483785122633,-0.0002844396512955427,0.053275272250175476,-0.08513662219047546,0.008559216745197773,-0.14039935171604156,-0.030740728601813316,0.06726071983575821,-0.018055003136396408,-0.017953025177121162,-0.09986552596092224,0.025622816756367683,-0.005740087479352951,0.02634105086326599,0.011804184876382351,-0.03528416529297829,0.01710781455039978,-0.007638099137693644,-0.004688771441578865,-0.035442858934402466,0.11841604858636856,-0.024062832817435265,-0.03838598355650902,-0.10473531484603882,0.011327234096825123,-0.03787827119231224,0.0340975821018219,-0.020269976928830147,-0.010050726123154163,-0.03449798747897148,0.014711495488882065,0.03942679241299629,-0.1157064363360405,-0.13132956624031067,0.0043371450155973434,0.018956251442432404,0.03830217570066452,-0.005404619500041008,0.056225914508104324,0.10660680383443832,0.0444534607231617,0.02726968191564083,-0.01619681343436241,0.013081838376820087,-0.08079280704259872,0.029478998854756355,0.041124340146780014,-0.09766902029514313,0.025953713804483414,0.04874724894762039,0.027162626385688782,-0.0019380440935492516,0.02067149244248867,0.03255925327539444,0.02863478846848011,0.05484376847743988,0.002073143143206835,-0.08253348618745804,-0.030287249013781548,0.07130075246095657,-0.027807381004095078,0.03971187770366669,-0.006753144785761833,-0.07581973075866699,0.03785354271531105,-0.08506651967763901,-0.14025147259235382,0.008180411532521248,0.0248126070946455,-0.07817628979682922,-0.007960907183587551,0.03363918885588646,0.08716030418872833,0.0442671962082386,0.04211368411779404,0.11728771030902863,0.021885255351662636,-0.09328553825616837,-0.005565543193370104,0.010899999178946018,5.1576989306876886e-33,0.025695422664284706,-0.01657239906489849,-0.030209895223379135,0.08379392325878143,0.029942873865365982,-0.014431493356823921,-0.024966932833194733,-0.0031749445479363203,-0.10223592817783356,0.02091089077293873,-0.07801860570907593,0.14093869924545288,-0.024061180651187897,0.08910996466875076,-0.045923903584480286,0.0016627133591100574,-0.007362771313637495,-0.017574822530150414,0.06512515246868134,-0.08049823343753815,-0.023425208404660225,0.012640298344194889,0.017446359619498253,0.06730512529611588,0.02804345265030861,0.07087558507919312,0.04944572225213051,-0.02093503437936306,-0.03295024856925011,0.05921430513262749,0.07337840646505356,-0.06241355463862419,0.039951641112565994,-0.013197068125009537,0.049327556043863297,0.056349389255046844,-0.04262511432170868,0.0027690448332577944,-0.06857754290103912,0.03330087661743164,-0.05624433234333992,-0.01351200696080923,-0.05146796628832817,-0.03549529239535332,0.00955147948116064,-0.0053237369284033775,0.06601132452487946,0.03432482108473778,0.07505021244287491,0.04638253524899483,-0.09775251895189285,0.03258165717124939,0.019828245043754578,-0.046098433434963226,-0.020282616838812828,-0.01078116800636053,0.012322671711444855,0.04415880888700485,0.006588946562260389,-0.11447698622941971,-0.035827185958623886,0.08768095076084137,-0.004610323812812567,-0.020009830594062805,0.0014948034659028053,0.0515148900449276,-0.07057427614927292,-0.11196928471326828,0.05510912090539932,0.0038480788934975863,-0.017515042796730995,0.03839784488081932,0.0029398691840469837,0.026365138590335846,0.05317945033311844,0.02423500083386898,-0.06265623867511749,-0.006527774967253208,-0.06426296383142471,-0.08396875858306885,-0.1790778487920761,-0.03631666675209999,-0.017362060025334358,-0.062330376356840134,-0.08046623319387436,0.0064196535386145115,0.06677230447530746,-0.03828484192490578,-0.022434737533330917,0.02737235091626644,-0.029433630406856537,0.06565984338521957,-0.020003726705908775,-0.08833880722522736,0.03229987993836403,-5.295221116816342e-33,0.0464702732861042,-0.0031977142207324505,0.0040895878337323666,-0.06621063500642776,0.012460324913263321,-0.018383814021945,0.03688884153962135,0.022087953984737396,0.08633778244256973,-0.036297570914030075,-0.02130257710814476,-0.05785473436117172,0.004519435111433268,-0.0455128438770771,0.05484488233923912,-0.005510353483259678,0.002436743350699544,0.027002496644854546,0.039789751172065735,-0.04012184962630272,-0.041886478662490845,0.07042557746171951,-0.008137932047247887,0.0360364131629467,0.005137060768902302,0.038790833204984665,0.03912242129445076,-0.06289810687303543,0.02984183467924595,-0.08001165091991425,0.07547443360090256,0.021351750940084457,-0.021103907376527786,0.04245198890566826,-0.13544327020645142,-0.02664710022509098,0.07530593872070312,0.02810502238571644,-0.010744977742433548,-0.08515272289514542,0.017329510301351547,0.018400080502033234,-0.025844424962997437,-0.04136592149734497,-0.027155745774507523,-0.0780627578496933,-0.011772718280553818,0.10033810138702393,0.0345904603600502,-0.022894680500030518,0.04137253761291504,-0.06637029349803925,-0.04849320650100708,-0.08952585607767105,0.03359716013073921,0.04591144621372223,0.03788170590996742,0.013153585605323315,0.01944624073803425,0.026695406064391136,0.006627552676945925,-0.08154966682195663,0.020540984347462654,-0.057792384177446365,0.0046782721765339375,-0.014992740005254745,-0.0722537562251091,-0.007795215118676424,-0.03010847605764866,0.031685590744018555,0.002552440855652094,0.0517796128988266,-0.044633179903030396,-0.027392257004976273,-0.014675183221697807,0.011402514763176441,0.000978408963419497,0.014661942608654499,0.06521844863891602,-0.0660196840763092,0.025388112291693687,0.011455769650638103,0.022473860532045364,0.09338972717523575,0.04237049072980881,-0.08810015022754669,0.03437172621488571,-0.02049648016691208,0.06535109132528305,-0.004622060805559158,-0.03488170728087425,0.012334713712334633,0.027325734496116638,0.01981338858604431,0.01569455862045288,-2.999707859885348e-8,-0.0789143294095993,0.013752994127571583,-0.09193772077560425,0.04527328163385391,-0.043457407504320145,0.05534713342785835,0.050273019820451736,0.06571023166179657,-0.018829982727766037,0.0044922055676579475,0.0453665629029274,0.02657216787338257,-0.054090723395347595,0.01835803873836994,0.03495301306247711,0.0003704237751662731,0.040485527366399765,0.06255118548870087,-0.022133072838187218,-0.04347074404358864,0.06705082952976227,0.0018142432672902942,0.10292191058397293,0.03391484171152115,0.0024578936863690615,-0.029608432203531265,0.02830479107797146,-0.0010086291003972292,0.08829501271247864,-0.054902028292417526,0.01058958563953638,0.04362669959664345,0.02063015289604664,-0.12308168411254883,0.05313717573881149,0.07763605564832687,-0.023875853046774864,0.009449195116758347,0.0496666356921196,0.12736980617046356,-0.027866894379258156,-0.02131509594619274,-0.11265896260738373,-0.021167300641536713,0.015331481583416462,-0.052203111350536346,-0.025130534544587135,-0.020167669281363487,-0.05002506077289581,-0.048738304525613785,0.015100665390491486,-0.004443774465471506,0.030796928331255913,-0.02126104198396206,-0.058584727346897125,0.07716801017522812,0.03714883327484131,-0.030651293694972992,0.010057766921818256,-0.020304495468735695,0.041015297174453735,0.08044421672821045,0.06398672610521317,-0.040504634380340576]},{"id":"Y2xhc3MtVGFyb3RS","type":"class","name":"TarotReader","qualifiedName":"TarotReader","parentClass":null,"file":"/mnt/c/dev/tarot/tarot-app.js","startLine":1,"endLine":2633,"lines":2633,"code":"class TarotReader {\n    constructor() {\n        this.currentDeck = [];\n        this.drawnCards = [];\n        this.currentSpread = null;\n        this.readingInProgress = false;\n        this.savedReadings = JSON.parse(localStorage.getItem('tarotReadings')) || [];\n        this.initializeEventListeners();\n        this.loadSavedReadings();\n    }\n\n    initializeEventListeners() {\n        // Spread selection\n        document.querySelectorAll('.spread-option').forEach(option => {\n            option.addEventListener('click', (e) => this.selectSpread(e.target.closest('.spread-option')));\n        });\n\n        // Button events\n        document.getElementById('startReadingBtn').addEventListener('click', () => this.startReading());\n        document.getElementById('resetReadingBtn').addEventListener('click', () => this.resetReading());\n        document.getElementById('saveReadingBtn').addEventListener('click', () => this.saveReading());\n        document.getElementById('analyzeReadingBtn').addEventListener('click', () => this.analyzeReading());\n        \n        // Deck click\n        document.getElementById('deckContainer').addEventListener('click', () => this.drawCard());\n        \n        // Modal events\n        document.getElementById('closeModal').addEventListener('click', () => this.closeModal());\n        document.getElementById('cardModal').addEventListener('click', (e) => {\n            if (e.target.id === 'cardModal') this.closeModal();\n        });\n\n        // Analysis tab events\n        document.querySelectorAll('.tab-button').forEach(button => {\n            button.addEventListener('click', (e) => this.switchAnalysisTab(e.target.dataset.tab));\n        });\n    }\n\n\n    selectSpread(option) {\n        // Remove previous selection\n        document.querySelectorAll('.spread-option').forEach(opt => opt.classList.remove('selected'));\n        \n        // Add selection to clicked option\n        option.classList.add('selected');\n        \n        // Get spread type\n        const spreadType = option.dataset.spread;\n        this.currentSpread = spreads[spreadType];\n        \n        // Show start button\n        document.getElementById('startReadingBtn').classList.remove('hidden');\n        document.getElementById('instructionText').textContent = \n            `You've selected the ${this.currentSpread.name}. Click \"Begin Reading\" to start!`;\n    }\n\n    startReading() {\n        if (!this.currentSpread) return;\n\n        // Initialize reading\n        this.currentDeck = this.shuffleDeck([...tarotCards]);\n        this.drawnCards = [];\n        this.readingInProgress = true;\n\n        // Update UI\n        document.getElementById('spreadSelection').classList.add('hidden');\n        document.getElementById('startReadingBtn').classList.add('hidden');\n        document.getElementById('deckContainer').classList.remove('hidden');\n        document.getElementById('resetReadingBtn').classList.remove('hidden');\n        \n        // Clear area and prepare for cards\n        document.getElementById('readingArea').innerHTML = '';\n        document.getElementById('readingSummary').classList.add('hidden');\n        \n        // Set instruction\n        this.updateInstruction();\n    }\n\n    drawCard() {\n        if (!this.readingInProgress || this.drawnCards.length >= this.currentSpread.positions.length) return;\n\n        // Draw random card\n        const cardIndex = Math.floor(Math.random() * this.currentDeck.length);\n        const card = this.currentDeck.splice(cardIndex, 1)[0];\n        \n        // Determine if reversed (40% chance for more balanced readings)\n        const isReversed = Math.random() < 0.4;\n        \n        // Add position and reversed status\n        const drawnCard = {\n            ...card,\n            isReversed,\n            position: this.currentSpread.positions[this.drawnCards.length],\n            positionIndex: this.drawnCards.length\n        };\n\n        this.drawnCards.push(drawnCard);\n        this.displayCard(drawnCard);\n        this.updateInstruction();\n        \n        // Check if reading is complete\n        if (this.drawnCards.length >= this.currentSpread.positions.length) {\n            this.completeReading();\n        }\n    }\n\n    displayCard(card) {\n        const cardElement = this.createCardElement(card);\n        \n        // Add card to reading area\n        const readingArea = document.getElementById('readingArea');\n        \n        // Adjust grid layout based on spread\n        this.adjustReadingLayout(readingArea);\n        \n        readingArea.appendChild(cardElement);\n    }\n\n    createCardElement(card) {\n        const cardDiv = document.createElement('div');\n        cardDiv.className = 'tarot-card relative cursor-pointer';\n        cardDiv.onclick = () => this.showCardDetails(card);\n        \n        const orientation = card.isReversed ? 'Reversed' : 'Upright';\n        const meaningKey = card.isReversed ? 'reversed' : 'upright';\n        const meanings = card.meanings[meaningKey];\n        \n        cardDiv.innerHTML = `\n            <div class=\"card-position\">${card.positionIndex + 1}</div>\n            <div class=\"card-number\">${this.formatCardNumber(card)}</div>\n            \n            <div class=\"p-3 sm:p-4 lg:p-6\">\n                <!-- Card Image -->\n                <div class=\"mb-3 flex justify-center\">\n                    <div class=\"card-image-container bg-gradient-to-b from-indigo-900 to-purple-900 rounded-lg border-2 border-purple-400 flex items-center justify-center relative overflow-hidden ${card.isReversed ? 'transform rotate-180' : ''}\">\n                        <div class=\"image-loading absolute inset-0\"></div>\n                        <img src=\"${card.image}\" alt=\"${card.name}\" class=\"w-full h-full object-cover rounded-lg opacity-0 transition-opacity duration-500\" \n                             onload=\"this.style.opacity='1'; this.previousElementSibling.style.display='none'\"\n                             onerror=\"this.style.display='none'; this.nextElementSibling.style.display='flex'; this.previousElementSibling.style.display='none'\">\n                        <div class=\"absolute inset-0 flex items-center justify-center text-purple-300 text-xs font-medium text-center p-2\" style=\"display: none;\">\n                            ${card.name}\n                        </div>\n                    </div>\n                </div>\n                \n                <!-- Card Title -->\n                <h3 class=\"text-lg sm:text-xl font-bold text-center mb-2 text-amber-400\">\n                    ${card.name}\n                </h3>\n                \n                <!-- Position and Orientation -->\n                <div class=\"text-center mb-3\">\n                    <p class=\"text-base sm:text-lg font-semibold text-purple-300 mb-1\">${card.position}</p>\n                    <p class=\"text-xs sm:text-sm ${card.isReversed ? 'text-red-300' : 'text-green-300'}\">${orientation}</p>\n                </div>\n                \n                <!-- Keywords -->\n                <div class=\"keywords mb-3\">\n                    ${card.keywords[meaningKey].map(keyword => \n                        `<span class=\"keyword\">${keyword}</span>`\n                    ).join('')}\n                </div>\n                \n                <!-- Card Details -->\n                <div class=\"space-y-2 sm:space-y-3 text-xs sm:text-sm\">\n                    <div class=\"meaning-section\">\n                        <h4 class=\"font-semibold text-purple-300 mb-1 sm:mb-2\">General Meaning:</h4>\n                        <p class=\"text-gray-300 leading-relaxed\">${meanings.general}</p>\n                    </div>\n                    \n                    <div class=\"space-y-2 sm:grid sm:grid-cols-3 sm:gap-2 sm:space-y-0\">\n                        <div class=\"meaning-section\">\n                            <h5 class=\"font-semibold text-pink-300 mb-1\">💕 Love:</h5>\n                            <p class=\"text-gray-300 text-xs leading-relaxed\">${meanings.love}</p>\n                        </div>\n                        <div class=\"meaning-section\">\n                            <h5 class=\"font-semibold text-yellow-300 mb-1\">💼 Career:</h5>\n                            <p class=\"text-gray-300 text-xs leading-relaxed\">${meanings.career}</p>\n                        </div>\n                        <div class=\"meaning-section\">\n                            <h5 class=\"font-semibold text-blue-300 mb-1\">🔮 Spiritual:</h5>\n                            <p class=\"text-gray-300 text-xs leading-relaxed\">${meanings.spiritual}</p>\n                        </div>\n                    </div>\n                </div>\n                \n                <!-- Metaphysical Information -->\n                <div class=\"mt-3 pt-3 border-t border-purple-500/30\">\n                    <div class=\"flex flex-wrap items-center justify-center gap-1 text-xs\">\n                        <span class=\"element-badge element-${card.element.toLowerCase()}\">${card.element}</span>\n                        <span class=\"astro-symbol\">${this.getAstrologySymbol(card.astrology)}</span>\n                        <span class=\"text-gray-400\">Numerology: ${card.numerology}</span>\n                    </div>\n                </div>\n            </div>\n        `;\n        \n        return cardDiv;\n    }\n\n    adjustReadingLayout(readingArea) {\n        const cardCount = this.currentSpread.positions.length;\n        \n        if (cardCount === 1) {\n            readingArea.className = 'reading-grid-single mb-6';\n        } else if (cardCount === 3) {\n            readingArea.className = 'reading-grid-three mb-6';\n        } else if (cardCount === 4) {\n            readingArea.className = 'reading-grid-four mb-6';\n        } else if (cardCount === 10) {\n            readingArea.className = 'mb-6';\n            readingArea.innerHTML = '<div class=\"celtic-cross-grid grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-3\"></div>';\n        }\n    }\n\n    completeReading() {\n        this.readingInProgress = false;\n        \n        // Hide deck and show buttons\n        document.getElementById('deckContainer').classList.add('hidden');\n        document.getElementById('saveReadingBtn').classList.remove('hidden');\n        document.getElementById('analyzeReadingBtn').classList.remove('hidden');\n        \n        // Update instruction\n        const instructionText = document.getElementById('instructionText');\n        instructionText.textContent = \n            \"Your reading is complete! Click on any card for detailed information or analyze your reading.\";\n        \n        // Generate and show reading summary\n        this.generateReadingSummary();\n    }\n\n    generateReadingSummary() {\n        const summary = this.analyzeReadingBasic();\n        const summaryElement = document.getElementById('readingSummary');\n        const contentElement = document.getElementById('summaryContent');\n        \n        contentElement.innerHTML = `\n            <div class=\"space-y-4 lg:space-y-6\">\n                <div class=\"space-y-4 lg:grid lg:grid-cols-2 lg:gap-6 lg:space-y-0\">\n                    <div>\n                        <h4 class=\"text-base lg:text-lg font-semibold text-purple-300 mb-2 lg:mb-3\">📊 Reading Overview</h4>\n                        <ul class=\"space-y-1 lg:space-y-2 text-xs lg:text-sm text-gray-300\">\n                            <li><strong>Spread:</strong> ${this.currentSpread.name}</li>\n                            <li><strong>Total Cards:</strong> ${this.drawnCards.length}</li>\n                            <li><strong>Major Arcana:</strong> ${summary.majorArcanaCount}</li>\n                            <li><strong>Reversed Cards:</strong> ${summary.reversedCount}</li>\n                            <li><strong>Dominant Element:</strong> ${summary.dominantElement}</li>\n                        </ul>\n                    </div>\n                    \n                    <div>\n                        <h4 class=\"text-base lg:text-lg font-semibold text-purple-300 mb-2 lg:mb-3\">🔮 Key Themes</h4>\n                        <div class=\"keywords\">\n                            ${summary.keyThemes.map(theme => `<span class=\"keyword\">${theme}</span>`).join('')}\n                        </div>\n                    </div>\n                </div>\n                \n                <div>\n                    <h4 class=\"text-base lg:text-lg font-semibold text-purple-300 mb-2 lg:mb-3\">✨ Interpretation</h4>\n                    <div class=\"space-y-2 lg:space-y-3 text-xs lg:text-sm text-gray-300 leading-relaxed\">\n                        ${summary.interpretation.map(paragraph => `<p>${paragraph}</p>`).join('')}\n                    </div>\n                </div>\n                \n                <div>\n                    <h4 class=\"text-base lg:text-lg font-semibold text-purple-300 mb-2 lg:mb-3\">💡 Guidance</h4>\n                    <div class=\"bg-gradient-to-r from-purple-900/30 to-indigo-900/30 p-3 lg:p-4 rounded-lg border border-purple-500/30\">\n                        <p class=\"text-xs lg:text-sm text-gray-300 leading-relaxed\">${summary.guidance}</p>\n                    </div>\n                </div>\n            </div>\n        `;\n        \n        summaryElement.classList.remove('hidden');\n    }\n\n    analyzeReadingBasic() {\n        const majorArcanaCount = this.drawnCards.filter(card => card.suit === 'Major Arcana').length;\n        const reversedCount = this.drawnCards.filter(card => card.isReversed).length;\n        \n        // Count elements\n        const elementCounts = {};\n        this.drawnCards.forEach(card => {\n            elementCounts[card.element] = (elementCounts[card.element] || 0) + 1;\n        });\n        \n        const dominantElement = Object.entries(elementCounts).reduce((a, b) => \n            elementCounts[a[0]] > elementCounts[b[0]] ? a : b)[0];\n        \n        // Extract key themes\n        const allKeywords = this.drawnCards.flatMap(card => \n            card.isReversed ? card.keywords.reversed : card.keywords.upright\n        );\n        const keyThemes = [...new Set(allKeywords)].slice(0, 8);\n        \n        // Generate interpretation\n        const interpretation = this.generateInterpretation();\n        const guidance = this.generateGuidance();\n        \n        return {\n            majorArcanaCount,\n            reversedCount,\n            dominantElement,\n            keyThemes,\n            interpretation,\n            guidance\n        };\n    }\n\n    generateInterpretation() {\n        const interpretations = [];\n        \n        // Analyze Major Arcana presence\n        const majorArcanaCount = this.drawnCards.filter(card => card.suit === 'Major Arcana').length;\n        if (majorArcanaCount >= this.drawnCards.length * 0.5) {\n            interpretations.push(\"The strong presence of Major Arcana cards indicates that significant life themes and spiritual lessons are at play. This reading deals with important karmic influences and major life changes.\");\n        }\n        \n        // Analyze reversed cards\n        const reversedCount = this.drawnCards.filter(card => card.isReversed).length;\n        if (reversedCount >= this.drawnCards.length * 0.5) {\n            interpretations.push(\"Many reversed cards suggest a time of internal reflection and inner work. There may be blockages or delays that require patience and introspection to overcome.\");\n        }\n        \n        // Analyze suit patterns\n        const suitCounts = {};\n        this.drawnCards.forEach(card => {\n            if (card.suit !== 'Major Arcana') {\n                suitCounts[card.suit] = (suitCounts[card.suit] || 0) + 1;\n            }\n        });\n        \n        const dominantSuit = Object.entries(suitCounts).reduce((a, b) => \n            (suitCounts[a[0]] || 0) > (suitCounts[b[0]] || 0) ? a : b)[0];\n        \n        if (suitCounts[dominantSuit] >= 2) {\n            switch (dominantSuit) {\n                case 'Wands':\n                    interpretations.push(\"The presence of multiple Wands indicates themes of creativity, passion, and action. You're in a phase of dynamic energy and new projects.\");\n                    break;\n                case 'Cups':\n                    interpretations.push(\"Multiple Cups reveal emotional themes, relationships, and intuitive matters. Your heart and feelings are central to this reading.\");\n                    break;\n                case 'Swords':\n                    interpretations.push(\"The prevalence of Swords suggests mental challenges, communication issues, and the need for clear thinking and decisive action.\");\n                    break;\n                case 'Pentacles':\n                    interpretations.push(\"Multiple Pentacles highlight material concerns, career matters, and practical issues that require grounded, realistic approaches.\");\n                    break;\n            }\n        }\n        \n        // Add specific card interactions\n        if (this.drawnCards.length >= 3) {\n            interpretations.push(this.analyzeCardInteractions());\n        }\n        \n        return interpretations.length > 0 ? interpretations : \n            [\"This reading reveals a complex blend of energies and influences. Each card contributes its unique wisdom to your current situation.\"];\n    }\n\n    analyzeCardInteractions() {\n        // Look for interesting card combinations\n        const cardNames = this.drawnCards.map(card => card.name);\n        \n        // Check for complementary energies\n        if (cardNames.includes('The Sun') && cardNames.includes('The Moon')) {\n            return \"The presence of both The Sun and The Moon suggests a balance between conscious and unconscious forces, day and night energies in your life.\";\n        }\n        \n        if (cardNames.includes('The Lovers') && cardNames.includes('Two of Cups')) {\n            return \"The combination of The Lovers and Two of Cups strongly emphasizes love, relationships, and deep emotional connections.\";\n        }\n        \n        // Check for challenging combinations\n        if (cardNames.includes('The Tower') && cardNames.includes('Death')) {\n            return \"The presence of both The Tower and Death indicates a period of profound transformation and necessary endings that will lead to rebirth.\";\n        }\n        \n        // Check for Aces (new beginnings)\n        const aceCount = this.drawnCards.filter(card => card.name.includes('Ace')).length;\n        if (aceCount >= 2) {\n            return \"Multiple Aces indicate a time of new beginnings across different areas of your life - opportunities are abundant.\";\n        }\n        \n        return \"The cards in your reading create a unique narrative that speaks to your current journey and the energies surrounding you.\";\n    }\n\n    generateGuidance() {\n        const guidanceOptions = [\n            \"Trust in the wisdom of the cards and allow their messages to guide you forward. Remember that you have the power to shape your destiny.\",\n            \"The cards reveal both challenges and opportunities. Embrace the lessons they offer and use this insight to make empowered choices.\",\n            \"This reading invites you to reflect deeply on the themes presented. Meditation and journaling can help integrate these insights.\",\n            \"The universe is speaking to you through these cards. Pay attention to synchronicities and signs in your daily life.\",\n            \"Each card in your reading offers a piece of the puzzle. Trust your intuition to understand how they connect to your life.\"\n        ];\n        \n        // Choose guidance based on reading characteristics\n        const reversedCount = this.drawnCards.filter(card => card.isReversed).length;\n        if (reversedCount > this.drawnCards.length / 2) {\n            return \"The abundance of reversed cards suggests this is a time for patience and inner reflection. Trust that delays and challenges are preparing you for future success.\";\n        }\n        \n        const majorArcanaCount = this.drawnCards.filter(card => card.suit === 'Major Arcana').length;\n        if (majorArcanaCount > this.drawnCards.length / 2) {\n            return \"The strong Major Arcana presence indicates you're at an important spiritual crossroads. Pay attention to the deeper lessons and trust in divine timing.\";\n        }\n        \n        return guidanceOptions[Math.floor(Math.random() * guidanceOptions.length)];\n    }\n\n    showCardDetails(card) {\n        const modal = document.getElementById('cardModal');\n        const modalCardName = document.getElementById('modalCardName');\n        const modalCardContent = document.getElementById('modalCardContent');\n        \n        modalCardName.textContent = `${card.name} ${card.isReversed ? '(Reversed)' : ''}`;\n        \n        const meaningKey = card.isReversed ? 'reversed' : 'upright';\n        const meanings = card.meanings[meaningKey];\n        \n        modalCardContent.innerHTML = `\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-8\">\n                <div>\n                    <div class=\"text-center mb-4 lg:mb-6\">\n                        <div class=\"w-32 h-48 sm:w-40 sm:h-60 lg:w-48 lg:h-72 mx-auto bg-gradient-to-b from-indigo-900 to-purple-900 rounded-lg border-2 border-purple-400 flex items-center justify-center relative overflow-hidden ${card.isReversed ? 'transform rotate-180' : ''}\">\n                            <div class=\"image-loading absolute inset-0\"></div>\n                            <img src=\"${card.image}\" alt=\"${card.name}\" class=\"w-full h-full object-cover rounded-lg opacity-0 transition-opacity duration-500\" \n                                 onload=\"this.style.opacity='1'; this.previousElementSibling.style.display='none'\"\n                                 onerror=\"this.style.display='none'; this.nextElementSibling.style.display='flex'; this.previousElementSibling.style.display='none'\">\n                            <div class=\"absolute inset-0 flex items-center justify-center text-purple-300 text-sm lg:text-lg font-medium text-center p-2 lg:p-4\" style=\"display: none;\">\n                                ${card.name}\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"text-center space-y-3 lg:space-y-4\">\n                        <div>\n                            <h4 class=\"text-base lg:text-lg font-semibold text-purple-300 mb-2\">Metaphysical Properties</h4>\n                            <div class=\"space-y-1 lg:space-y-2 text-xs lg:text-sm\">\n                                <p><strong>Element:</strong> <span class=\"element-badge element-${card.element.toLowerCase()}\">${card.element}</span></p>\n                                <p><strong>Astrology:</strong> ${card.astrology} ${this.getAstrologySymbol(card.astrology)}</p>\n                                <p><strong>Numerology:</strong> ${card.numerology}</p>\n                                <p><strong>Suit:</strong> ${card.suit}</p>\n                            </div>\n                        </div>\n                        \n                        <div>\n                            <h4 class=\"text-base lg:text-lg font-semibold text-purple-300 mb-2\">Keywords</h4>\n                            <div class=\"keywords\">\n                                ${card.keywords[meaningKey].map(keyword => \n                                    `<span class=\"keyword\">${keyword}</span>`\n                                ).join('')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"space-y-4 lg:space-y-6\">\n                    <div>\n                        <h4 class=\"text-base lg:text-lg font-semibold text-purple-300 mb-2 lg:mb-3\">General Meaning</h4>\n                        <p class=\"text-sm lg:text-base text-gray-300 leading-relaxed\">${meanings.general}</p>\n                    </div>\n                    \n                    <div>\n                        <h4 class=\"text-base lg:text-lg font-semibold text-pink-300 mb-2 lg:mb-3\">💕 Love & Relationships</h4>\n                        <p class=\"text-sm lg:text-base text-gray-300 leading-relaxed\">${meanings.love}</p>\n                    </div>\n                    \n                    <div>\n                        <h4 class=\"text-base lg:text-lg font-semibold text-yellow-300 mb-2 lg:mb-3\">💼 Career & Finance</h4>\n                        <p class=\"text-sm lg:text-base text-gray-300 leading-relaxed\">${meanings.career}</p>\n                    </div>\n                    \n                    <div>\n                        <h4 class=\"text-base lg:text-lg font-semibold text-blue-300 mb-2 lg:mb-3\">🔮 Spiritual Growth</h4>\n                        <p class=\"text-sm lg:text-base text-gray-300 leading-relaxed\">${meanings.spiritual}</p>\n                    </div>\n                    \n                    <div class=\"bg-gradient-to-r from-purple-900/30 to-indigo-900/30 p-3 lg:p-4 rounded-lg border border-purple-500/30\">\n                        <h4 class=\"text-base lg:text-lg font-semibold text-amber-300 mb-2\">Position in Reading</h4>\n                        <p class=\"text-sm lg:text-base text-gray-300\"><strong>${card.position}:</strong> This card appears in the ${card.position.toLowerCase()} position, emphasizing its role in ${this.getPositionMeaning(card.position)}.</p>\n                    </div>\n                </div>\n            </div>\n        `;\n        \n        modal.classList.remove('hidden');\n        modal.classList.add('flex');\n    }\n\n    closeModal() {\n        const modal = document.getElementById('cardModal');\n        modal.classList.add('hidden');\n        modal.classList.remove('flex');\n    }\n\n    saveReading() {\n        if (this.isLoading) return;\n\n        this.showButtonLoading('saveReadingBtn');\n        this.showLoading(\"Preserving your reading in the akashic records...\");\n\n        setTimeout(() => {\n            const reading = {\n                id: Date.now(),\n                date: new Date().toISOString(),\n                spread: this.currentSpread.name,\n                cards: this.drawnCards.map(card => ({\n                    name: card.name,\n                    position: card.position,\n                    isReversed: card.isReversed,\n                    suit: card.suit,\n                    element: card.element\n                }))\n            };\n            \n            this.savedReadings.unshift(reading);\n            localStorage.setItem('tarotReadings', JSON.stringify(this.savedReadings));\n            \n            this.updateLoadingMessage(\"Updating your reading history...\");\n            \n            setTimeout(() => {\n                this.loadSavedReadings();\n                this.hideButtonLoading('saveReadingBtn');\n                this.hideLoading();\n                \n                // Show confirmation\n                this.showNotification('Reading saved successfully!');\n            }, 800);\n        }, 1200);\n    }\n\n    loadSavedReadings(showAll = false) {\n        const container = document.getElementById('savedReadingsList');\n        \n        if (this.savedReadings.length === 0) {\n            container.innerHTML = '<div class=\"col-span-full text-center py-8\"><p class=\"text-gray-400 mb-4\">📚 No saved readings yet</p><p class=\"text-gray-500 text-sm\">Complete a reading and save it to build your mystical library!</p></div>';\n            return;\n        }\n\n        const displayCount = showAll ? this.savedReadings.length : 6;\n        const readingsToShow = this.savedReadings.slice(0, displayCount);\n        \n        container.innerHTML = readingsToShow.map(reading => `\n            <div class=\"tarot-card hover:scale-105 transition-transform duration-300 relative group\">\n                <div class=\"p-3 lg:p-4 cursor-pointer\" onclick=\"app.loadSavedReading(${reading.id})\">\n                    <div class=\"flex items-center justify-between mb-2\">\n                        <h4 class=\"text-base lg:text-lg font-semibold text-amber-400\">${reading.spread}</h4>\n                        <span class=\"text-xs bg-purple-600 px-2 py-1 rounded-full\">📖 Load</span>\n                    </div>\n                    <p class=\"text-xs lg:text-sm text-gray-400 mb-2 lg:mb-3\">\n                        📅 ${new Date(reading.date).toLocaleDateString()} \n                        🕐 ${new Date(reading.date).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\n                    </p>\n                    <div class=\"space-y-1\">\n                        ${reading.cards.slice(0, 3).map(card => `\n                            <div class=\"text-xs text-gray-300\">\n                                <strong>${card.position}:</strong> ${card.name} ${card.isReversed ? '🔄' : '⬆️'}\n                            </div>\n                        `).join('')}\n                        ${reading.cards.length > 3 ? `<div class=\"text-xs text-purple-300\">✨ +${reading.cards.length - 3} more cards</div>` : ''}\n                    </div>\n                    <div class=\"mt-3 pt-2 border-t border-purple-500/30\">\n                        <p class=\"text-xs text-purple-300\">🔮 Click to view full reading</p>\n                    </div>\n                </div>\n                <button class=\"absolute top-2 right-2 w-6 h-6 bg-red-600 hover:bg-red-700 text-white rounded-full text-xs opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center\" \n                        onclick=\"event.stopPropagation(); app.deleteSavedReading(${reading.id})\" \n                        title=\"Delete reading\">\n                    ×\n                </button>\n            </div>\n        `).join('');\n\n        // Add \"Show More\" button if there are more readings\n        if (!showAll && this.savedReadings.length > 6) {\n            container.innerHTML += `\n                <div class=\"col-span-full flex justify-center mt-6\">\n                    <button onclick=\"app.loadSavedReadings(true)\" \n                            class=\"bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700 text-white font-semibold py-3 px-6 rounded-xl shadow-lg transition-all duration-300 transform hover:scale-105\">\n                        📜 Show All ${this.savedReadings.length} Readings\n                    </button>\n                </div>\n            `;\n        } else if (showAll && this.savedReadings.length > 6) {\n            container.innerHTML += `\n                <div class=\"col-span-full flex justify-center mt-6\">\n                    <button onclick=\"app.loadSavedReadings(false)\" \n                            class=\"bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800 text-white font-semibold py-3 px-6 rounded-xl shadow-lg transition-all duration-300 transform hover:scale-105\">\n                        📚 Show Less\n                    </button>\n                </div>\n            `;\n        }\n    }\n\n    loadSavedReading(readingId) {\n        const reading = this.savedReadings.find(r => r.id === readingId);\n        if (!reading || this.isLoading) return;\n        \n        this.showLoading(\"Loading your saved reading...\");\n        \n        setTimeout(() => {\n            this.updateLoadingMessage(\"Reconstructing the cosmic arrangement...\");\n            \n            setTimeout(() => {\n                // Reset current state\n                this.resetReadingState();\n                \n                // Find the spread configuration\n                const spreadKey = Object.keys(spreads).find(key => \n                    spreads[key].name === reading.spread\n                );\n                \n                if (!spreadKey) {\n                    this.hideLoading();\n                    this.showNotification('Error: Could not find spread configuration');\n                    return;\n                }\n                \n                this.currentSpread = spreads[spreadKey];\n                this.readingInProgress = false; // This is a completed reading\n                \n                this.updateLoadingMessage(\"Restoring the sacred cards...\");\n                \n                setTimeout(() => {\n                    // Reconstruct the drawn cards with full data\n                    this.drawnCards = reading.cards.map((savedCard, index) => {\n                        // Find the full card data from the tarot deck\n                        const fullCard = tarotCards.find(card => card.name === savedCard.name);\n                        \n                        if (!fullCard) {\n                            console.warn(`Card not found: ${savedCard.name}`);\n                            return null;\n                        }\n                        \n                        return {\n                            ...fullCard,\n                            isReversed: savedCard.isReversed,\n                            position: savedCard.position,\n                            positionIndex: index\n                        };\n                    }).filter(card => card !== null);\n                    \n                    // Update UI to show the loaded reading\n                    this.displayLoadedReading();\n                    \n                    this.updateLoadingMessage(\"Finalizing the restoration...\");\n                    \n                    setTimeout(() => {\n                        this.hideLoading();\n                        this.showNotification(`Loaded reading from ${new Date(reading.date).toLocaleDateString()}`);\n                    }, 500);\n                }, 1000);\n            }, 800);\n        }, 600);\n    }\n\n    resetReadingState() {\n        // Hide all UI elements\n        document.getElementById('spreadSelection').classList.add('hidden');\n        document.getElementById('startReadingBtn').classList.add('hidden');\n        document.getElementById('deckContainer').classList.add('hidden');\n        document.getElementById('progressContainer').classList.add('hidden');\n        document.getElementById('readingArea').innerHTML = '';\n        \n        // Clear selections\n        document.querySelectorAll('.spread-option').forEach(opt => opt.classList.remove('selected'));\n    }\n\n    displayLoadedReading() {\n        // Update instruction text with loaded indicator\n        const instructionText = document.getElementById('instructionText');\n        instructionText.classList.remove('typing');\n        instructionText.innerHTML = `\n            <span class=\"inline-flex items-center gap-2\">\n                📖 Loaded ${this.currentSpread.name} reading \n                <span class=\"bg-green-600 text-white px-2 py-1 rounded-full text-xs\">SAVED</span>\n            </span>\n            <br>\n            <span class=\"text-sm text-gray-400\">Click on any card for detailed information</span>\n        `;\n        \n        // Show reading controls with additional context\n        document.getElementById('resetReadingBtn').classList.remove('hidden');\n        document.getElementById('saveReadingBtn').classList.add('hidden'); // Hide save since it's already saved\n        \n        // Set up the reading area layout\n        const readingArea = document.getElementById('readingArea');\n        this.adjustReadingLayout(readingArea);\n        \n        // Display each card with animation\n        this.drawnCards.forEach((card, index) => {\n            setTimeout(() => {\n                this.displayCard(card);\n            }, index * 300); // Stagger the card appearances\n        });\n        \n        // Generate and show the reading summary after all cards are displayed\n        setTimeout(() => {\n            this.generateReadingSummary();\n            document.getElementById('readingSummary').classList.remove('hidden');\n        }, this.drawnCards.length * 300 + 500);\n        \n        // Update progress bar to show completion\n        setTimeout(() => {\n            document.getElementById('progressContainer').classList.remove('hidden');\n            document.getElementById('progressFill').style.width = '100%';\n            document.getElementById('progressText').textContent = 'Saved Reading Loaded';\n        }, 200);\n    }\n\n    deleteSavedReading(readingId) {\n        if (this.isLoading) return;\n\n        // Show confirmation\n        if (confirm('Are you sure you want to delete this reading? This action cannot be undone.')) {\n            this.showLoading(\"Removing reading from the akashic records...\");\n            \n            setTimeout(() => {\n                // Remove the reading from the array\n                this.savedReadings = this.savedReadings.filter(reading => reading.id !== readingId);\n                \n                // Update localStorage\n                localStorage.setItem('tarotReadings', JSON.stringify(this.savedReadings));\n                \n                // Refresh the display\n                this.loadSavedReadings();\n                \n                this.hideLoading();\n                this.showNotification('Reading deleted successfully');\n            }, 800);\n        }\n    }\n\n    resetReading() {\n        if (this.isLoading) return;\n\n        this.showButtonLoading('resetReadingBtn');\n        this.showLoading(\"Clearing the sacred space...\");\n\n        setTimeout(() => {\n            this.updateLoadingMessage(\"Resetting cosmic energies...\");\n            \n            setTimeout(() => {\n                // Reset state\n                this.currentDeck = [];\n                this.drawnCards = [];\n                this.readingInProgress = false;\n                \n                // Reset UI\n                document.getElementById('spreadSelection').classList.remove('hidden');\n                document.getElementById('startReadingBtn').classList.add('hidden');\n                document.getElementById('resetReadingBtn').classList.add('hidden');\n                document.getElementById('saveReadingBtn').classList.add('hidden');\n                document.getElementById('deckContainer').classList.add('hidden');\n                document.getElementById('progressContainer').classList.add('hidden');\n                document.getElementById('readingSummary').classList.add('hidden');\n                \n                // Clear selections and content\n                document.querySelectorAll('.spread-option').forEach(opt => opt.classList.remove('selected'));\n                document.getElementById('readingArea').innerHTML = '';\n                \n                const instructionText = document.getElementById('instructionText');\n                instructionText.classList.remove('typing');\n                instructionText.textContent = 'Select a spread type to begin your mystical journey';\n                \n                // Reset progress\n                document.getElementById('progressFill').style.width = '0%';\n                document.getElementById('progressText').textContent = '';\n                \n                this.hideButtonLoading('resetReadingBtn');\n                this.hideLoading();\n            }, 1000);\n        }, 600);\n    }\n\n    updateInstruction() {\n        const remainingCards = this.currentSpread.positions.length - this.drawnCards.length;\n        if (remainingCards > 0) {\n            const nextPosition = this.currentSpread.positions[this.drawnCards.length];\n            document.getElementById('instructionText').textContent = \n                `Click the deck to draw your ${nextPosition} card (${remainingCards} remaining)`;\n        }\n    }\n\n\n    shuffleDeck(array) {\n        const shuffled = [...array];\n        for (let i = shuffled.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n        }\n        return shuffled;\n    }\n\n    formatCardNumber(card) {\n        if (card.suit === 'Major Arcana') {\n            return `${card.number}`;\n        }\n        return `${card.number} of ${card.suit}`;\n    }\n\n    getAstrologySymbol(astrology) {\n        const symbols = {\n            'Uranus': '♅',\n            'Mercury': '☿',\n            'Moon': '☽',\n            'Venus': '♀',\n            'Aries': '♈',\n            'Taurus': '♉',\n            'Gemini': '♊',\n            'Cancer': '♋',\n            'Leo': '♌',\n            'Virgo': '♍',\n            'Libra': '♎',\n            'Scorpio': '♏',\n            'Sagittarius': '♐',\n            'Capricorn': '♑',\n            'Aquarius': '♒',\n            'Pisces': '♓',\n            'Jupiter': '♃',\n            'Mars': '♂',\n            'Saturn': '♄'\n        };\n        \n        for (const [key, symbol] of Object.entries(symbols)) {\n            if (astrology.includes(key)) {\n                return symbol;\n            }\n        }\n        return '✨';\n    }\n\n    getPositionMeaning(position) {\n        const meanings = {\n            'Past': 'influences and experiences that have shaped your current situation',\n            'Present': 'current energies and circumstances affecting you now',\n            'Future': 'potential outcomes and energies moving toward you',\n            'Guidance': 'wisdom and direction for your path forward',\n            'You': 'your current state, motivations, and inner landscape',\n            'Your Partner': 'your partner\\'s energy, feelings, and perspective',\n            'The Relationship': 'the dynamic and energy between you both',\n            'Advice': 'guidance for navigating this relationship',\n            'Present Situation': 'the heart of the matter and current circumstances',\n            'Challenge/Cross': 'obstacles or lessons you\\'re currently facing',\n            'Distant Past/Foundation': 'deep roots and foundational influences',\n            'Recent Past': 'recent events that led to this moment',\n            'Possible Outcome': 'one potential future if current path continues',\n            'Immediate Future': 'what\\'s coming in the near term',\n            'Your Approach': 'your conscious attitude and approach to the situation',\n            'External Influences': 'outside forces and other people\\'s influences',\n            'Hopes and Fears': 'your deepest desires and anxieties about this matter',\n            'Final Outcome': 'the most likely resolution based on current energies'\n        };\n        \n        return meanings[position] || 'this aspect of your reading';\n    }\n\n    showNotification(message) {\n        // Create a simple notification\n        const notification = document.createElement('div');\n        notification.className = 'fixed top-4 right-4 bg-gradient-to-r from-purple-600 to-indigo-600 text-white px-6 py-3 rounded-lg shadow-lg z-50 transform transition-all duration-300';\n        notification.textContent = message;\n        \n        document.body.appendChild(notification);\n        \n        // Animate in\n        setTimeout(() => {\n            notification.style.transform = 'translateX(0)';\n        }, 100);\n        \n        // Remove after 3 seconds\n        setTimeout(() => {\n            notification.style.transform = 'translateX(100%)';\n            setTimeout(() => notification.remove(), 300);\n        }, 3000);\n    }\n\n    // === COMPREHENSIVE ANALYSIS METHODS ===\n\n    analyzeReading() {\n        if (!this.drawnCards.length) return;\n        \n        document.getElementById('analysisPanel').classList.remove('hidden');\n        document.getElementById('analyzeReadingBtn').classList.add('hidden');\n        \n        this.generateComprehensiveAnalysis();\n        this.showNotification('Advanced analysis generated successfully!');\n    }\n\n    switchAnalysisTab(tabName) {\n        // Remove active class from all tabs and content\n        document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));\n        document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));\n        \n        // Add active class to selected tab and content\n        document.querySelector(`[data-tab=\"${tabName}\"]`).classList.add('active');\n        document.getElementById(`${tabName}Tab`).classList.add('active');\n    }\n\n    generateComprehensiveAnalysis() {\n        this.generateOverviewAnalysis();\n        this.generatePsychologyAnalysis();\n        this.generateSpiritualAnalysis();\n        this.generateKabbalahAnalysis();\n        this.generateChakraAnalysis();\n        this.generateArchetypeAnalysis();\n        this.generateTimingAnalysis();\n        this.generateKarmaAnalysis();\n    }\n\n    generateOverviewAnalysis() {\n        const overview = this.calculateReadingOverview();\n        const elemental = this.calculateElementalBalance();\n        const suits = this.calculateSuitDistribution();\n        const energy = this.calculateEnergyAssessment();\n\n        document.getElementById('readingOverview').innerHTML = this.formatOverview(overview);\n        document.getElementById('elementalBalance').innerHTML = this.formatElementalBalance(elemental);\n        document.getElementById('suitDistribution').innerHTML = this.formatSuitDistribution(suits);\n        document.getElementById('energyAssessment').innerHTML = this.formatEnergyAssessment(energy);\n    }\n\n    calculateReadingOverview() {\n        const majorArcana = this.drawnCards.filter(card => card.suit === 'Major Arcana').length;\n        const reversed = this.drawnCards.filter(card => card.isReversed).length;\n        const courtCards = this.drawnCards.filter(card => ['Page', 'Knight', 'Queen', 'King'].includes(card.name.split(' ')[0])).length;\n        \n        const majorPercent = Math.round((majorArcana / this.drawnCards.length) * 100);\n        const reversedPercent = Math.round((reversed / this.drawnCards.length) * 100);\n        const courtPercent = Math.round((courtCards / this.drawnCards.length) * 100);\n\n        return {\n            majorArcana,\n            majorPercent,\n            reversed,\n            reversedPercent,\n            courtCards,\n            courtPercent,\n            totalCards: this.drawnCards.length,\n            dominantInfluence: this.calculateDominantInfluence()\n        };\n    }\n\n    calculateDominantInfluence() {\n        if (this.drawnCards.filter(card => card.suit === 'Major Arcana').length >= 3) {\n            return 'Spiritual/Karmic';\n        } else if (this.drawnCards.filter(card => card.suit === 'Cups').length >= 2) {\n            return 'Emotional';\n        } else if (this.drawnCards.filter(card => card.suit === 'Swords').length >= 2) {\n            return 'Mental/Intellectual';\n        } else if (this.drawnCards.filter(card => card.suit === 'Wands').length >= 2) {\n            return 'Creative/Passionate';\n        } else if (this.drawnCards.filter(card => card.suit === 'Pentacles').length >= 2) {\n            return 'Material/Practical';\n        }\n        return 'Balanced';\n    }\n\n    calculateElementalBalance() {\n        const elements = { fire: 0, water: 0, air: 0, earth: 0 };\n        \n        this.drawnCards.forEach(card => {\n            switch (card.element) {\n                case 'Fire': elements.fire++; break;\n                case 'Water': elements.water++; break;\n                case 'Air': elements.air++; break;\n                case 'Earth': elements.earth++; break;\n            }\n        });\n\n        const total = this.drawnCards.length;\n        return {\n            fire: { count: elements.fire, percent: Math.round((elements.fire / total) * 100) },\n            water: { count: elements.water, percent: Math.round((elements.water / total) * 100) },\n            air: { count: elements.air, percent: Math.round((elements.air / total) * 100) },\n            earth: { count: elements.earth, percent: Math.round((elements.earth / total) * 100) }\n        };\n    }\n\n    calculateSuitDistribution() {\n        const suits = {};\n        this.drawnCards.forEach(card => {\n            suits[card.suit] = (suits[card.suit] || 0) + 1;\n        });\n        \n        const total = this.drawnCards.length;\n        Object.keys(suits).forEach(suit => {\n            suits[suit] = {\n                count: suits[suit],\n                percent: Math.round((suits[suit] / total) * 100)\n            };\n        });\n        \n        return suits;\n    }\n\n    calculateEnergyAssessment() {\n        let positiveEnergy = 0;\n        let challengingEnergy = 0;\n        let neutralEnergy = 0;\n\n        this.drawnCards.forEach(card => {\n            const meanings = card.isReversed ? card.keywords.reversed : card.keywords.upright;\n            const energy = this.assessCardEnergy(meanings);\n            \n            if (energy > 0) positiveEnergy++;\n            else if (energy < 0) challengingEnergy++;\n            else neutralEnergy++;\n        });\n\n        return {\n            positive: { count: positiveEnergy, percent: Math.round((positiveEnergy / this.drawnCards.length) * 100) },\n            challenging: { count: challengingEnergy, percent: Math.round((challengingEnergy / this.drawnCards.length) * 100) },\n            neutral: { count: neutralEnergy, percent: Math.round((neutralEnergy / this.drawnCards.length) * 100) }\n        };\n    }\n\n    assessCardEnergy(keywords) {\n        const positive = ['success', 'love', 'joy', 'peace', 'growth', 'abundance', 'victory', 'harmony'];\n        const negative = ['conflict', 'loss', 'fear', 'betrayal', 'failure', 'sorrow', 'defeat', 'chaos'];\n        \n        let score = 0;\n        keywords.forEach(keyword => {\n            if (positive.some(pos => keyword.toLowerCase().includes(pos))) score++;\n            if (negative.some(neg => keyword.toLowerCase().includes(neg))) score--;\n        });\n        \n        return score;\n    }\n\n    generateRelationshipAnalysis() {\n        const interactions = this.calculateCardInteractions();\n        const positional = this.calculatePositionalRelationships();\n        \n        document.getElementById('cardInteractions').innerHTML = this.formatCardInteractions(interactions);\n        document.getElementById('positionalRelationships').innerHTML = this.formatPositionalRelationships(positional);\n    }\n\n    calculateCardInteractions() {\n        const interactions = [];\n        \n        for (let i = 0; i < this.drawnCards.length - 1; i++) {\n            for (let j = i + 1; j < this.drawnCards.length; j++) {\n                const card1 = this.drawnCards[i];\n                const card2 = this.drawnCards[j];\n                const strength = this.calculateInteractionStrength(card1, card2);\n                \n                interactions.push({\n                    card1: card1.name,\n                    card2: card2.name,\n                    strength: strength,\n                    description: this.getInteractionDescription(card1, card2, strength)\n                });\n            }\n        }\n        \n        return interactions.sort((a, b) => this.getStrengthValue(b.strength) - this.getStrengthValue(a.strength));\n    }\n\n    calculateInteractionStrength(card1, card2) {\n        let strength = 0;\n        \n        // Same suit increases strength\n        if (card1.suit === card2.suit) strength += 2;\n        \n        // Same element increases strength\n        if (card1.element === card2.element) strength += 1;\n        \n        // Adjacent numbers increase strength\n        if (Math.abs(card1.number - card2.number) === 1) strength += 1;\n        \n        // Both Major Arcana increases strength\n        if (card1.suit === 'Major Arcana' && card2.suit === 'Major Arcana') strength += 2;\n        \n        // Opposing orientations create tension\n        if (card1.isReversed !== card2.isReversed) strength += 1;\n        \n        if (strength >= 4) return 'strong';\n        if (strength >= 2) return 'moderate';\n        return 'weak';\n    }\n\n    getStrengthValue(strength) {\n        const values = { 'strong': 3, 'moderate': 2, 'weak': 1 };\n        return values[strength] || 0;\n    }\n\n    getInteractionDescription(card1, card2, strength) {\n        const descriptions = {\n            'strong': `${card1.name} and ${card2.name} create a powerful synergy, amplifying each other's energies and creating significant impact in your reading.`,\n            'moderate': `${card1.name} and ${card2.name} work together harmoniously, supporting and complementing each other's messages.`,\n            'weak': `${card1.name} and ${card2.name} have a subtle connection, providing nuanced insights when considered together.`\n        };\n        return descriptions[strength];\n    }\n\n    generateNumerologyAnalysis() {\n        const numerology = this.calculateNumerology();\n        const patterns = this.calculateNumberPatterns();\n        const karmic = this.calculateKarmicNumbers();\n        const lifePath = this.calculateLifePathConnections();\n        \n        document.getElementById('numerologicalSum').innerHTML = this.formatNumerology(numerology);\n        document.getElementById('numberPatterns').innerHTML = this.formatNumberPatterns(patterns);\n        document.getElementById('karmicNumbers').innerHTML = this.formatKarmicNumbers(karmic);\n        document.getElementById('lifePathConnections').innerHTML = this.formatLifePathConnections(lifePath);\n    }\n\n    calculateNumerology() {\n        const sum = this.drawnCards.reduce((total, card) => total + card.number, 0);\n        const reducedSum = this.reduceToSingleDigit(sum);\n        \n        return {\n            totalSum: sum,\n            reducedSum: reducedSum,\n            meaning: this.getNumerologyMeaning(reducedSum)\n        };\n    }\n\n    reduceToSingleDigit(num) {\n        while (num > 9) {\n            num = num.toString().split('').reduce((sum, digit) => sum + parseInt(digit), 0);\n        }\n        return num;\n    }\n\n    getNumerologyMeaning(number) {\n        const meanings = {\n            1: 'New beginnings, leadership, independence',\n            2: 'Balance, cooperation, partnerships',\n            3: 'Creativity, communication, growth',\n            4: 'Stability, hard work, foundation',\n            5: 'Change, freedom, adventure',\n            6: 'Love, healing, responsibility',\n            7: 'Spirituality, introspection, wisdom',\n            8: 'Material success, power, achievement',\n            9: 'Completion, wisdom, universal love'\n        };\n        return meanings[number] || 'Universal energy';\n    }\n\n    formatOverview(overview) {\n        return `\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Total Cards</span>\n                <span class=\"metric-value\">${overview.totalCards}</span>\n            </div>\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Major Arcana</span>\n                <span class=\"metric-value\">${overview.majorArcana} (${overview.majorPercent}%)</span>\n            </div>\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Reversed Cards</span>\n                <span class=\"metric-value\">${overview.reversed} (${overview.reversedPercent}%)</span>\n            </div>\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Court Cards</span>\n                <span class=\"metric-value\">${overview.courtCards} (${overview.courtPercent}%)</span>\n            </div>\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Dominant Influence</span>\n                <span class=\"metric-value\">${overview.dominantInfluence}</span>\n            </div>\n        `;\n    }\n\n    formatElementalBalance(elemental) {\n        return `\n            <div class=\"mb-4\">\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\"><span class=\"element-indicator fire\"></span>Fire</span>\n                    <span class=\"metric-value\">${elemental.fire.count} (${elemental.fire.percent}%)</span>\n                </div>\n                <div class=\"progress-bar-container\">\n                    <div class=\"progress-bar-fill\" style=\"width: ${elemental.fire.percent}%; background: #dc2626;\"></div>\n                </div>\n            </div>\n            <div class=\"mb-4\">\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\"><span class=\"element-indicator water\"></span>Water</span>\n                    <span class=\"metric-value\">${elemental.water.count} (${elemental.water.percent}%)</span>\n                </div>\n                <div class=\"progress-bar-container\">\n                    <div class=\"progress-bar-fill\" style=\"width: ${elemental.water.percent}%; background: #2563eb;\"></div>\n                </div>\n            </div>\n            <div class=\"mb-4\">\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\"><span class=\"element-indicator air\"></span>Air</span>\n                    <span class=\"metric-value\">${elemental.air.count} (${elemental.air.percent}%)</span>\n                </div>\n                <div class=\"progress-bar-container\">\n                    <div class=\"progress-bar-fill\" style=\"width: ${elemental.air.percent}%; background: #7c3aed;\"></div>\n                </div>\n            </div>\n            <div class=\"mb-4\">\n                <div class=\"analysis-metric\">\n                    <span class=\"metric-label\"><span class=\"element-indicator earth\"></span>Earth</span>\n                    <span class=\"metric-value\">${elemental.earth.count} (${elemental.earth.percent}%)</span>\n                </div>\n                <div class=\"progress-bar-container\">\n                    <div class=\"progress-bar-fill\" style=\"width: ${elemental.earth.percent}%; background: #16a34a;\"></div>\n                </div>\n            </div>\n        `;\n    }\n\n    formatNumerology(numerology) {\n        return `\n            <div class=\"text-center mb-4\">\n                <div class=\"numerology-circle\">${numerology.reducedSum}</div>\n                <p class=\"text-sm text-gray-400\">Sum: ${numerology.totalSum} → ${numerology.reducedSum}</p>\n            </div>\n            <p class=\"text-center\">${numerology.meaning}</p>\n        `;\n    }\n\n    // Additional comprehensive analysis methods continue...\n    calculatePositionalRelationships() {\n        return `Analysis of how each card's position influences its neighbors and the overall reading flow.`;\n    }\n\n    formatCardInteractions(interactions) {\n        return interactions.slice(0, 3).map(interaction => `\n            <div class=\"card-relationship\">\n                <div>\n                    <div class=\"font-medium\">${interaction.card1} + ${interaction.card2}</div>\n                    <div class=\"text-sm text-gray-400 mt-1\">${interaction.description}</div>\n                </div>\n                <span class=\"relationship-strength ${interaction.strength}\">${interaction.strength.toUpperCase()}</span>\n            </div>\n        `).join('');\n    }\n\n    formatPositionalRelationships(positional) {\n        return `<p class=\"text-gray-300\">${positional}</p>`;\n    }\n\n    formatSuitDistribution(suits) {\n        return Object.entries(suits).map(([suit, data]) => `\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">${suit}</span>\n                <span class=\"metric-value\">${data.count} (${data.percent}%)</span>\n            </div>\n        `).join('');\n    }\n\n    formatEnergyAssessment(energy) {\n        return `\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Positive Energy</span>\n                <span class=\"metric-value\">${energy.positive.count} (${energy.positive.percent}%)</span>\n            </div>\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Challenging Energy</span>\n                <span class=\"metric-value\">${energy.challenging.count} (${energy.challenging.percent}%)</span>\n            </div>\n            <div class=\"analysis-metric\">\n                <span class=\"metric-label\">Neutral Energy</span>\n                <span class=\"metric-value\">${energy.neutral.count} (${energy.neutral.percent}%)</span>\n            </div>\n        `;\n    }\n\n    calculateNumberPatterns() {\n        return \"Analysis of repeating numbers and sequences in your reading.\";\n    }\n\n    calculateKarmicNumbers() {\n        return \"Identification of karmic numbers and their spiritual significance.\";\n    }\n\n    calculateLifePathConnections() {\n        return \"How this reading connects to your life path and spiritual journey.\";\n    }\n\n    formatNumberPatterns(patterns) {\n        return `<p class=\"text-gray-300\">${patterns}</p>`;\n    }\n\n    formatKarmicNumbers(karmic) {\n        return `<p class=\"text-gray-300\">${karmic}</p>`;\n    }\n\n    formatLifePathConnections(lifePath) {\n        return `<p class=\"text-gray-300\">${lifePath}</p>`;\n    }\n\n    // === DEEP PSYCHOLOGICAL ANALYSIS ===\n    generatePsychologyAnalysis() {\n        const jungian = this.analyzeJungianPatterns();\n        const shadow = this.analyzeShadowWork();\n        const anima = this.analyzeAnimaAnimus();\n        const collective = this.analyzeCollectiveUnconscious();\n        const psychological = this.analyzePsychologicalPatterns();\n\n        document.getElementById('jungianAnalysis').innerHTML = this.formatJungianAnalysis(jungian);\n        document.getElementById('shadowWork').innerHTML = this.formatShadowWork(shadow);\n        document.getElementById('animaAnimus').innerHTML = this.formatAnimaAnimus(anima);\n        document.getElementById('collectiveUnconscious').innerHTML = this.formatCollectiveUnconscious(collective);\n        document.getElementById('psychologicalPatterns').innerHTML = this.formatPsychologicalPatterns(psychological);\n    }\n\n    analyzeJungianPatterns() {\n        const archetypes = this.drawnCards.map(card => this.getJungianArchetype(card));\n        const dominantArchetype = this.findDominantArchetype(archetypes);\n        const individuation = this.analyzeIndividuationProcess();\n        const complexes = this.identifyPsychologicalComplexes();\n\n        return {\n            dominantArchetype,\n            individuation,\n            complexes,\n            archetypes,\n            integration: this.assessArchetypeIntegration(archetypes)\n        };\n    }\n\n    getJungianArchetype(card) {\n        const archetypeMap = {\n            'The Fool': 'The Innocent/Seeker',\n            'The Magician': 'The Magician/Creator',\n            'The High Priestess': 'The Wise Woman/Anima',\n            'The Empress': 'The Mother/Caregiver',\n            'The Emperor': 'The Father/Authority',\n            'The Hierophant': 'The Sage/Teacher',\n            'The Lovers': 'The Lover/Relationship',\n            'The Chariot': 'The Hero/Warrior',\n            'Strength': 'The Gentle Spirit/Inner Power',\n            'The Hermit': 'The Wise Old Man/Seeker',\n            'Wheel of Fortune': 'The Fate/Destiny',\n            'Justice': 'The Judge/Balance',\n            'The Hanged Man': 'The Martyr/Sacrifice',\n            'Death': 'The Transformer/Endings',\n            'Temperance': 'The Alchemist/Healer',\n            'The Devil': 'The Shadow/Tempter',\n            'The Tower': 'The Destroyer/Revelation',\n            'The Star': 'The Hope/Inspiration',\n            'The Moon': 'The Mystic/Illusion',\n            'The Sun': 'The Child/Joy',\n            'Judgement': 'The Awakener/Rebirth',\n            'The World': 'The Fulfilled Self/Completion'\n        };\n\n        return {\n            card: card.name,\n            archetype: archetypeMap[card.name] || 'The Seeker',\n            orientation: card.isReversed ? 'Shadow Expression' : 'Integrated Expression',\n            psychologicalFunction: this.getPsychologicalFunction(card)\n        };\n    }\n\n    getPsychologicalFunction(card) {\n        const functions = {\n            'Swords': 'Thinking Function - Mental processes, logic, communication',\n            'Cups': 'Feeling Function - Emotions, relationships, values',\n            'Wands': 'Intuitive Function - Inspiration, possibilities, vision',\n            'Pentacles': 'Sensation Function - Physical reality, material world, practical matters',\n            'Major Arcana': 'Transcendent Function - Spiritual growth, archetypal patterns'\n        };\n        return functions[card.suit] || 'Transcendent Function';\n    }\n\n    analyzeShadowWork() {\n        const reversedCards = this.drawnCards.filter(card => card.isReversed);\n        const shadowThemes = reversedCards.map(card => this.getShadowTheme(card));\n        const integration = this.assessShadowIntegration();\n        const projection = this.identifyProjectionPatterns();\n\n        return {\n            shadowCards: reversedCards,\n            shadowThemes,\n            integration,\n            projection,\n            healing: this.getShadowHealingGuidance(shadowThemes)\n        };\n    }\n\n    getShadowTheme(card) {\n        const shadowMap = {\n            'The Fool': 'Recklessness, naive decisions, avoiding responsibility',\n            'The Magician': 'Manipulation, abuse of power, trickery',\n            'The High Priestess': 'Secrets, hidden knowledge used for harm, intuition ignored',\n            'The Empress': 'Smothering, creative blocks, infertility issues',\n            'The Emperor': 'Tyranny, control issues, harsh authority',\n            'The Hierophant': 'Dogma, rigid thinking, spiritual bypassing',\n            'The Lovers': 'Codependency, poor choices, relationship sabotage',\n            'The Chariot': 'Aggression, lack of control, scattered energy',\n            'Strength': 'Weakness, self-doubt, inner turmoil',\n            'The Hermit': 'Isolation, depression, refusing guidance',\n            'Wheel of Fortune': 'Bad luck, victimhood, resistance to change',\n            'Justice': 'Injustice, bias, avoiding accountability',\n            'The Hanged Man': 'Martyrdom, victim mentality, refusing to let go',\n            'Death': 'Resistance to change, clinging to past, stagnation',\n            'Temperance': 'Imbalance, excess, healing crisis',\n            'The Devil': 'Addiction, materialism, spiritual bondage',\n            'The Tower': 'Chaos, destruction, ego collapse',\n            'The Star': 'Despair, loss of faith, disconnection',\n            'The Moon': 'Illusion, fear, subconscious fears',\n            'The Sun': 'False optimism, ego inflation, delayed happiness',\n            'Judgement': 'Self-judgment, refusing forgiveness, spiritual bypassing',\n            'The World': 'Incompletion, lack of closure, fear of success'\n        };\n\n        return {\n            card: card.name,\n            theme: shadowMap[card.name] || 'Unintegrated energy pattern',\n            healing: this.getShadowHealingPath(card)\n        };\n    }\n\n    getShadowHealingPath(card) {\n        const healingPaths = {\n            'The Fool': 'Develop discernment while maintaining openness',\n            'The Magician': 'Use power for service, practice ethical leadership',\n            'The High Priestess': 'Share wisdom appropriately, trust inner guidance',\n            'The Empress': 'Practice healthy boundaries, nurture without smothering',\n            'The Emperor': 'Lead with compassion, structure with flexibility',\n            'The Hierophant': 'Question beliefs, seek personal truth',\n            'The Lovers': 'Develop self-love, make authentic choices',\n            'The Chariot': 'Channel energy constructively, practice patience',\n            'Strength': 'Cultivate inner power, practice self-compassion',\n            'The Hermit': 'Seek community, share wisdom gained',\n            'Wheel of Fortune': 'Accept change, take responsibility for responses',\n            'Justice': 'Practice fairness, seek balance in all things',\n            'The Hanged Man': 'Surrender with wisdom, find meaning in sacrifice',\n            'Death': 'Embrace transformation, release with grace',\n            'Temperance': 'Find middle way, practice moderation',\n            'The Devil': 'Recognize illusions, choose freedom over bondage',\n            'The Tower': 'Rebuild on solid foundation, find blessing in breakdown',\n            'The Star': 'Reconnect with hope, trust in divine timing',\n            'The Moon': 'Face fears directly, trust intuitive knowing',\n            'The Sun': 'Embrace authentic joy, integrate shadow with light',\n            'Judgement': 'Practice self-forgiveness, embrace rebirth',\n            'The World': 'Celebrate achievements, prepare for new cycles'\n        };\n\n        return healingPaths[card.name] || 'Integrate this energy through conscious awareness';\n    }\n\n    // === SPIRITUAL ANALYSIS ===\n    generateSpiritualAnalysis() {\n        const soulLessons = this.analyzeSoulLessons();\n        const spiritualGifts = this.identifySpiritualGifts();\n        const higherSelf = this.analyzeHigherSelfMessages();\n        const ascension = this.analyzeAscensionPath();\n\n        document.getElementById('soulLessons').innerHTML = this.formatSoulLessons(soulLessons);\n        document.getElementById('spiritualGifts').innerHTML = this.formatSpiritualGifts(spiritualGifts);\n        document.getElementById('higherSelfMessages').innerHTML = this.formatHigherSelfMessages(higherSelf);\n        document.getElementById('ascensionPath').innerHTML = this.formatAscensionPath(ascension);\n    }\n\n    analyzeSoulLessons() {\n        const majorArcana = this.drawnCards.filter(card => card.suit === 'Major Arcana');\n        const lessons = majorArcana.map(card => this.getSoulLesson(card));\n        const primaryLesson = this.identifyPrimaryLesson(lessons);\n        const karmic = this.identifyKarmicLessons();\n\n        return {\n            primaryLesson,\n            allLessons: lessons,\n            karmic,\n            integration: this.assessLessonIntegration(lessons)\n        };\n    }\n\n    getSoulLesson(card) {\n        const lessonMap = {\n            'The Fool': 'Trust in the journey, embrace beginnings with faith',\n            'The Magician': 'Master your creative power, manifest with intention',\n            'The High Priestess': 'Develop intuition, trust inner wisdom',\n            'The Empress': 'Create abundantly, nurture with unconditional love',\n            'The Emperor': 'Build stable foundations, lead with wisdom',\n            'The Hierophant': 'Seek truth beyond dogma, teach through example',\n            'The Lovers': 'Choose love over fear, integrate opposites',\n            'The Chariot': 'Direct your will, overcome through determination',\n            'Strength': 'Find power in gentleness, tame the inner beast',\n            'The Hermit': 'Seek truth within, share wisdom gained',\n            'Wheel of Fortune': 'Accept life\\'s cycles, find center in change',\n            'Justice': 'Seek balance, accept consequences with grace',\n            'The Hanged Man': 'Surrender to higher will, find wisdom in waiting',\n            'Death': 'Embrace transformation, release what no longer serves',\n            'Temperance': 'Find the middle way, blend opposites harmoniously',\n            'The Devil': 'Recognize illusions, choose freedom over bondage',\n            'The Tower': 'Rebuild on truth, find blessing in destruction',\n            'The Star': 'Maintain hope, trust in divine guidance',\n            'The Moon': 'Navigate illusions, trust your inner light',\n            'The Sun': 'Embrace your authentic self, radiate joy',\n            'Judgement': 'Awaken to your true calling, forgive and be reborn',\n            'The World': 'Celebrate completion, prepare for new cycles'\n        };\n\n        return {\n            card: card.name,\n            lesson: lessonMap[card.name] || 'Embrace this energy\\'s teaching',\n            stage: this.getSpiritalStage(card),\n            mastery: this.assessMastery(card)\n        };\n    }\n\n    // === KABBALISTIC ANALYSIS ===\n    generateKabbalahAnalysis() {\n        const treeOfLife = this.analyzeTreeOfLifePosition();\n        const sephiroth = this.analyzeSephirothInfluences();\n        const pathworking = this.analyzePathworking();\n        const hebrewLetters = this.analyzeHebrewLetters();\n\n        document.getElementById('treeOfLife').innerHTML = this.formatTreeOfLife(treeOfLife);\n        document.getElementById('sephirothInfluences').innerHTML = this.formatSephirothInfluences(sephiroth);\n        document.getElementById('pathworking').innerHTML = this.formatPathworking(pathworking);\n        document.getElementById('hebrewLetters').innerHTML = this.formatHebrewLetters(hebrewLetters);\n    }\n\n    analyzeTreeOfLifePosition() {\n        const positions = this.drawnCards.map(card => this.getTreeOfLifePosition(card));\n        const dominantSephirah = this.findDominantSephirah(positions);\n        const pillar = this.identifyPillarInfluence();\n        const world = this.identifyWorldInfluence();\n\n        return {\n            positions,\n            dominantSephirah,\n            pillar,\n            world,\n            balance: this.assessTreeBalance(positions)\n        };\n    }\n\n    getTreeOfLifePosition(card) {\n        const treeMap = {\n            'The Fool': 'Aleph - Air - Path between Kether and Chokmah',\n            'The Magician': 'Beth - Mercury - Path between Kether and Binah',\n            'The High Priestess': 'Gimel - Moon - Path between Kether and Tiphareth',\n            'The Empress': 'Daleth - Venus - Path between Chokmah and Binah',\n            'The Emperor': 'Heh - Aries - Path between Chokmah and Tiphareth',\n            'The Hierophant': 'Vav - Taurus - Path between Chokmah and Chesed',\n            'The Lovers': 'Zayin - Gemini - Path between Binah and Tiphareth',\n            'The Chariot': 'Cheth - Cancer - Path between Binah and Geburah',\n            'Strength': 'Teth - Leo - Path between Chesed and Geburah',\n            'The Hermit': 'Yod - Virgo - Path between Chesed and Tiphareth',\n            'Wheel of Fortune': 'Kaph - Jupiter - Path between Chesed and Netzach',\n            'Justice': 'Lamed - Libra - Path between Geburah and Tiphareth',\n            'The Hanged Man': 'Mem - Water - Path between Geburah and Hod',\n            'Death': 'Nun - Scorpio - Path between Tiphareth and Netzach',\n            'Temperance': 'Samekh - Sagittarius - Path between Tiphareth and Yesod',\n            'The Devil': 'Ayin - Capricorn - Path between Tiphareth and Hod',\n            'The Tower': 'Peh - Mars - Path between Netzach and Hod',\n            'The Star': 'Tzaddi - Aquarius - Path between Netzach and Yesod',\n            'The Moon': 'Qoph - Pisces - Path between Netzach and Malkuth',\n            'The Sun': 'Resh - Sun - Path between Hod and Yesod',\n            'Judgement': 'Shin - Fire - Path between Hod and Malkuth',\n            'The World': 'Tav - Saturn - Path between Yesod and Malkuth'\n        };\n\n        // Extract primary sephirah from path\n        const extractPrimarySephirah = (pathDescription) => {\n            if (pathDescription.includes('Kether')) return 'Kether';\n            if (pathDescription.includes('Chokmah')) return 'Chokmah';\n            if (pathDescription.includes('Binah')) return 'Binah';\n            if (pathDescription.includes('Chesed')) return 'Chesed';\n            if (pathDescription.includes('Geburah')) return 'Geburah';\n            if (pathDescription.includes('Tiphareth')) return 'Tiphareth';\n            if (pathDescription.includes('Netzach')) return 'Netzach';\n            if (pathDescription.includes('Hod')) return 'Hod';\n            if (pathDescription.includes('Yesod')) return 'Yesod';\n            if (pathDescription.includes('Malkuth')) return 'Malkuth';\n            return 'Malkuth';\n        };\n        \n        const pathDescription = treeMap[card.name] || 'Malkuth - The Kingdom';\n        \n        return {\n            card: card.name,\n            position: pathDescription,\n            sephirah: extractPrimarySephirah(pathDescription),\n            meaning: this.getKabbalisticMeaning(card)\n        };\n    }\n\n    // === CHAKRA ANALYSIS ===\n    generateChakraAnalysis() {\n        const alignment = this.analyzeChakraAlignment();\n        const blocks = this.identifyEnergyBlocks();\n        const kundalini = this.analyzeKundaliniFlow();\n        const meridian = this.analyzeMeridianActivity();\n\n        document.getElementById('chakraAlignment').innerHTML = this.formatChakraAlignment(alignment);\n        document.getElementById('energyBlocks').innerHTML = this.formatEnergyBlocks(blocks);\n        document.getElementById('kundaliniFlow').innerHTML = this.formatKundaliniFlow(kundalini);\n        document.getElementById('meridianActivity').innerHTML = this.formatMeridianActivity(meridian);\n    }\n\n    analyzeChakraAlignment() {\n        const chakraCards = this.drawnCards.map(card => this.getChakraCorrespondence(card));\n        const dominantChakra = this.findDominantChakra(chakraCards);\n        const balance = this.assessChakraBalance(chakraCards);\n        const flow = this.analyzeEnergyFlow(chakraCards);\n\n        return {\n            chakraCards,\n            dominantChakra,\n            balance,\n            flow,\n            recommendations: this.getChakraRecommendations(balance)\n        };\n    }\n\n    getChakraCorrespondence(card) {\n        const chakraMap = {\n            'Root Chakra': ['The Emperor', 'King of Pentacles', 'Four of Pentacles'],\n            'Sacral Chakra': ['The Empress', 'Queen of Cups', 'Two of Cups'],\n            'Solar Plexus': ['The Magician', 'King of Wands', 'Three of Wands'],\n            'Heart Chakra': ['The Lovers', 'Queen of Cups', 'Six of Cups'],\n            'Throat Chakra': ['The Hierophant', 'King of Swords', 'Three of Swords'],\n            'Third Eye': ['The High Priestess', 'Queen of Swords', 'Seven of Cups'],\n            'Crown Chakra': ['The Fool', 'The World', 'Ten of Pentacles']\n        };\n\n        for (const [chakra, cards] of Object.entries(chakraMap)) {\n            if (cards.includes(card.name)) {\n                return {\n                    card: card.name,\n                    chakra: chakra,\n                    energy: this.getChakraEnergy(chakra, card.isReversed),\n                    healing: this.getChakraHealing(chakra, card.isReversed)\n                };\n            }\n        }\n\n        return {\n            card: card.name,\n            chakra: 'Multi-Chakra',\n            energy: 'Balanced energy flow',\n            healing: 'Continue current practices'\n        };\n    }\n\n    // === ARCHETYPE ANALYSIS ===\n    generateArchetypeAnalysis() {\n        const primary = this.identifyPrimaryArchetypes();\n        const mythological = this.analyzeMythologicalConnections();\n        const hero = this.analyzeHeroJourney();\n        const goddess = this.analyzeGoddessAspects();\n\n        document.getElementById('primaryArchetypes').innerHTML = this.formatPrimaryArchetypes(primary);\n        document.getElementById('mythologicalConnections').innerHTML = this.formatMythologicalConnections(mythological);\n        document.getElementById('heroJourney').innerHTML = this.formatHeroJourney(hero);\n        document.getElementById('goddessAspects').innerHTML = this.formatGoddessAspects(goddess);\n    }\n\n    // === TIMING ANALYSIS ===\n    generateTimingAnalysis() {\n        const seasonal = this.analyzeSeasonalTiming();\n        const lunar = this.analyzeLunarCycles();\n        const planetary = this.analyzePlanetaryTransits();\n        const manifestation = this.analyzeManifestationWindows();\n\n        document.getElementById('seasonalTiming').innerHTML = this.formatSeasonalTiming(seasonal);\n        document.getElementById('lunarCycles').innerHTML = this.formatLunarCycles(lunar);\n        document.getElementById('planetaryTransits').innerHTML = this.formatPlanetaryTransits(planetary);\n        document.getElementById('manifestationWindows').innerHTML = this.formatManifestationWindows(manifestation);\n    }\n\n    // === KARMIC ANALYSIS ===\n    generateKarmaAnalysis() {\n        const debts = this.analyzeKarmicDebts();\n        const pastLife = this.analyzePastLifeInfluences();\n        const contracts = this.analyzeSoulContracts();\n        const dharma = this.analyzeDharmicPurpose();\n\n        document.getElementById('karmicDebts').innerHTML = this.formatKarmicDebts(debts);\n        document.getElementById('pastLifeInfluences').innerHTML = this.formatPastLifeInfluences(pastLife);\n        document.getElementById('soulContracts').innerHTML = this.formatSoulContracts(contracts);\n        document.getElementById('dharmicPurpose').innerHTML = this.formatDharmicPurpose(dharma);\n    }\n\n    // === FORMATTING METHODS ===\n    formatJungianAnalysis(analysis) {\n        return `\n            <div class=\"mb-4\">\n                <h5 class=\"font-semibold text-blue-400 mb-2\">Dominant Archetype</h5>\n                <p class=\"text-sm text-gray-300\">${analysis.dominantArchetype}</p>\n            </div>\n            <div class=\"mb-4\">\n                <h5 class=\"font-semibold text-blue-400 mb-2\">Individuation Process</h5>\n                <p class=\"text-sm text-gray-300\">${analysis.individuation}</p>\n            </div>\n            <div class=\"mb-4\">\n                <h5 class=\"font-semibold text-blue-400 mb-2\">Psychological Complexes</h5>\n                <ul class=\"insights-list text-sm\">\n                    ${analysis.complexes.map(complex => `<li>${complex}</li>`).join('')}\n                </ul>\n            </div>\n        `;\n    }\n\n    formatShadowWork(shadow) {\n        return `\n            <div class=\"mb-4\">\n                <h5 class=\"font-semibold text-blue-400 mb-2\">Shadow Cards (${shadow.shadowCards.length})</h5>\n                <div class=\"text-sm text-gray-300\">\n                    ${shadow.shadowThemes.map(theme => `\n                        <div class=\"mb-2 p-2 bg-red-900 bg-opacity-20 rounded border-l-2 border-red-400\">\n                            <strong>${theme.card}:</strong> ${theme.theme}\n                        </div>\n                    `).join('')}\n                </div>\n            </div>\n            <div class=\"mb-4\">\n                <h5 class=\"font-semibold text-blue-400 mb-2\">Healing Guidance</h5>\n                <p class=\"text-sm text-gray-300\">${shadow.healing}</p>\n            </div>\n        `;\n    }\n\n    formatSoulLessons(lessons) {\n        return `\n            <div class=\"mb-4\">\n                <h5 class=\"font-semibold text-blue-400 mb-2\">Primary Soul Lesson</h5>\n                <p class=\"text-sm text-gray-300\">${lessons.primaryLesson}</p>\n            </div>\n            <div class=\"mb-4\">\n                <h5 class=\"font-semibold text-blue-400 mb-2\">All Lessons</h5>\n                <ul class=\"insights-list text-sm\">\n                    ${lessons.allLessons.map(lesson => `<li><strong>${lesson.card}:</strong> ${lesson.lesson}</li>`).join('')}\n                </ul>\n            </div>\n        `;\n    }\n\n    // Enhanced Jungian analysis methods\n    findDominantArchetype(archetypes) {\n        const archetypeFrequency = {};\n        archetypes.forEach(arch => {\n            const baseType = arch.archetype.split('/')[0];\n            archetypeFrequency[baseType] = (archetypeFrequency[baseType] || 0) + 1;\n        });\n        \n        const dominant = Object.entries(archetypeFrequency).reduce((a, b) => \n            archetypeFrequency[a[0]] > archetypeFrequency[b[0]] ? a : b\n        );\n        \n        const archetypeAnalysis = {\n            'The Innocent': 'You are in a phase of spiritual exploration and personal growth, seeking authenticity and truth.',\n            'The Magician': 'You are developing your creative powers and learning to manifest your vision in the world.',\n            'The Wise Woman': 'You are accessing deep intuitive wisdom and learning to trust your inner guidance.',\n            'The Mother': 'You are in a nurturing phase, either caring for others or developing your own creative projects.',\n            'The Father': 'You are establishing structure and authority in your life, learning to lead with wisdom.',\n            'The Sage': 'You are seeking deeper knowledge and understanding, ready to share wisdom with others.',\n            'The Lover': 'You are exploring relationships and learning to choose love over fear in all situations.',\n            'The Hero': 'You are on a quest for achievement and recognition, overcoming obstacles through courage.',\n            'The Gentle Spirit': 'You are learning to integrate power with compassion, finding strength in gentleness.',\n            'The Wise Old Man': 'You are seeking spiritual guidance and preparing to become a guide for others.',\n            'The Transformer': 'You are in a major life transition, releasing old patterns to embrace new growth.',\n            'The Shadow': 'You are confronting hidden aspects of yourself, learning to integrate rejected parts.',\n            'The Mystic': 'You are developing psychic abilities and learning to navigate the world of spirit.',\n            'The Child': 'You are reconnecting with joy, wonder, and authentic self-expression.',\n            'The Fulfilled Self': 'You are approaching completion of a major life cycle and preparing for new beginnings.'\n        };\n        \n        return archetypeAnalysis[dominant[0]] || 'You are integrating multiple archetypal energies in a unique personal synthesis.';\n    }\n    \n    analyzeIndividuationProcess() {\n        const majorArcana = this.drawnCards.filter(card => card.suit === 'Major Arcana');\n        const reversedMajor = majorArcana.filter(card => card.isReversed);\n        const progression = majorArcana.map(card => card.number).sort((a, b) => a - b);\n        \n        let process = 'Your psyche is integrating conscious and unconscious elements';\n        \n        // Analyze stage of individuation based on Major Arcana progression\n        if (progression.includes(0)) {\n            process += ', beginning a new cycle of self-discovery';\n        }\n        if (progression.some(num => num >= 1 && num <= 7)) {\n            process += ', developing personal identity and ego strength';\n        }\n        if (progression.some(num => num >= 8 && num <= 14)) {\n            process += ', confronting shadow aspects and integrating the unconscious';\n        }\n        if (progression.some(num => num >= 15 && num <= 21)) {\n            process += ', approaching spiritual awakening and wholeness';\n        }\n        \n        if (reversedMajor.length > majorArcana.length / 2) {\n            process += '. There is significant shadow work required for healthy integration.';\n        } else {\n            process += ', moving toward greater psychological wholeness.';\n        }\n        \n        return process;\n    }\n    \n    identifyPsychologicalComplexes() {\n        const complexes = [];\n        const suits = this.drawnCards.map(card => card.suit);\n        const reversedCards = this.drawnCards.filter(card => card.isReversed);\n        \n        // Authority Complex\n        const authorityCards = ['The Emperor', 'The Hierophant', 'Justice', 'King of Swords', 'King of Wands'];\n        const hasAuthority = this.drawnCards.some(card => authorityCards.includes(card.name));\n        if (hasAuthority) {\n            const reversed = this.drawnCards.filter(card => \n                authorityCards.includes(card.name) && card.isReversed\n            ).length > 0;\n            if (reversed) {\n                complexes.push('Authority Complex - Resistance to authority or abuse of power, examine your relationship with control');\n            } else {\n                complexes.push('Authority Complex - Healthy relationship with power and leadership, developing mature authority');\n            }\n        }\n        \n        // Mother Complex\n        const motherCards = ['The Empress', 'Queen of Cups', 'Queen of Pentacles'];\n        const hasMother = this.drawnCards.some(card => motherCards.includes(card.name));\n        if (hasMother) {\n            const reversed = this.drawnCards.filter(card => \n                motherCards.includes(card.name) && card.isReversed\n            ).length > 0;\n            if (reversed) {\n                complexes.push('Mother Complex - Examining nurturing patterns, potential over-giving or smothering tendencies');\n            } else {\n                complexes.push('Mother Complex - Healthy nurturing abilities, balanced care for self and others');\n            }\n        }\n        \n        // Anima/Animus Integration\n        const animaCards = ['The High Priestess', 'The Empress', 'The Star', 'Queen of Cups'];\n        const animusCards = ['The Magician', 'The Emperor', 'The Chariot', 'King of Swords'];\n        const hasAnima = this.drawnCards.some(card => animaCards.includes(card.name));\n        const hasAnimus = this.drawnCards.some(card => animusCards.includes(card.name));\n        \n        if (hasAnima && hasAnimus) {\n            complexes.push('Anima/Animus Integration - Balanced integration of feminine and masculine aspects, achieving psychological wholeness');\n        } else if (hasAnima) {\n            complexes.push('Anima Emphasis - Developing receptivity, intuition, and connection to the feminine principle');\n        } else if (hasAnimus) {\n            complexes.push('Animus Emphasis - Developing assertiveness, logic, and connection to the masculine principle');\n        }\n        \n        // Shadow Complex\n        if (reversedCards.length >= this.drawnCards.length / 2) {\n            const shadowCards = reversedCards.map(card => card.name);\n            if (shadowCards.includes('The Devil') || shadowCards.includes('The Tower')) {\n                complexes.push('Shadow Complex - Confronting major shadow projections and unconscious patterns, deep transformation required');\n            } else {\n                complexes.push('Shadow Complex - Working with shadow aspects, integrating rejected parts of the psyche');\n            }\n        }\n        \n        return complexes.length > 0 ? complexes : ['Integration Complex - Synthesizing various aspects of personality into a cohesive whole'];\n    }\n    \n    assessArchetypeIntegration(archetypes) {\n        const totalCards = this.drawnCards.length;\n        const reversedCount = this.drawnCards.filter(card => card.isReversed).length;\n        const majorArcanaCount = this.drawnCards.filter(card => card.suit === 'Major Arcana').length;\n        \n        const reversedRatio = reversedCount / totalCards;\n        const majorRatio = majorArcanaCount / totalCards;\n        \n        let integration = '';\n        \n        if (reversedRatio < 0.3) {\n            integration = 'Strong archetypal integration - you are successfully embodying the positive aspects of your active archetypes';\n        } else if (reversedRatio < 0.5) {\n            integration = 'Moderate archetypal integration - some shadow work needed to fully integrate archetypal energies';\n        } else {\n            integration = 'Challenging archetypal integration - significant shadow work required to balance opposing forces';\n        }\n        \n        if (majorRatio > 0.5) {\n            integration += '. Strong spiritual component suggests transpersonal development and collective unconscious activation.';\n        }\n        \n        return integration;\n    }\n    identifyPrimaryLesson(lessons) {\n        if (!lessons || lessons.length === 0) {\n            return 'Trust in your inner wisdom and intuitive guidance';\n        }\n        \n        // Find the most prominent lesson based on card significance\n        const weightedLessons = lessons.map(lesson => {\n            let weight = 1;\n            // Major Arcana lessons have higher weight\n            if (lesson.stage === 'Transpersonal') weight += 2;\n            if (lesson.mastery === 'Advanced') weight += 1;\n            return { ...lesson, weight };\n        });\n        \n        const primaryLesson = weightedLessons.reduce((max, lesson) => \n            lesson.weight > max.weight ? lesson : max\n        );\n        \n        return `Primary lesson: ${primaryLesson.lesson}. This represents your most significant spiritual growth opportunity at this time.`;\n    }\n    \n    getShadowHealingGuidance(shadowThemes) {\n        if (!shadowThemes || shadowThemes.length === 0) {\n            return 'Practice self-compassion and embrace your whole self, including shadow aspects';\n        }\n        \n        const patterns = shadowThemes.map(theme => theme.theme);\n        let guidance = 'Shadow healing guidance: ';\n        \n        // Identify common shadow patterns and provide specific guidance\n        if (patterns.some(p => p.includes('control') || p.includes('power'))) {\n            guidance += 'Work with power dynamics through healthy boundaries and collaborative leadership. ';\n        }\n        if (patterns.some(p => p.includes('fear') || p.includes('anxiety'))) {\n            guidance += 'Address fear patterns through mindfulness and gradual exposure to growth opportunities. ';\n        }\n        if (patterns.some(p => p.includes('isolation') || p.includes('withdrawal'))) {\n            guidance += 'Balance solitude with healthy connection, seek support from trusted individuals. ';\n        }\n        if (patterns.some(p => p.includes('addiction') || p.includes('compulsion'))) {\n            guidance += 'Examine underlying needs behind compulsive behaviors, seek professional support if needed. ';\n        }\n        \n        guidance += 'Remember that shadow work is a lifelong process of integration, not elimination. Practice self-compassion as you embrace all aspects of yourself.';\n        \n        return guidance;\n    }\n    analyzeSpiritualGifts() {\n        const gifts = [];\n        const majorArcana = this.drawnCards.filter(card => card.suit === 'Major Arcana');\n        const cups = this.drawnCards.filter(card => card.suit === 'Cups');\n        const swords = this.drawnCards.filter(card => card.suit === 'Swords');\n        \n        // Analyze spiritual gifts based on card patterns\n        if (majorArcana.some(card => ['The High Priestess', 'The Star', 'The Moon'].includes(card.name))) {\n            gifts.push('Psychic Intuition - Strong ability to receive guidance from higher realms');\n        }\n        if (cups.length >= 2) {\n            gifts.push('Emotional Healing - Natural ability to facilitate emotional healing in self and others');\n        }\n        if (majorArcana.some(card => ['The Magician', 'Temperance', 'The World'].includes(card.name))) {\n            gifts.push('Energy Manipulation - Ability to work with and direct spiritual energy');\n        }\n        if (swords.length >= 2 && !this.drawnCards.some(card => card.name.includes('Swords') && card.isReversed)) {\n            gifts.push('Clear Communication - Gift for expressing spiritual truths clearly');\n        }\n        if (majorArcana.some(card => ['The Hierophant', 'The Hermit', 'Judgement'].includes(card.name))) {\n            gifts.push('Spiritual Teaching - Natural ability to guide others on their spiritual path');\n        }\n        \n        return gifts.length > 0 ? gifts.join(', ') : 'Developing spiritual gifts through current life experiences';\n    }\n    \n    analyzeHigherSelfMessages() {\n        const messages = [];\n        const majorArcana = this.drawnCards.filter(card => card.suit === 'Major Arcana');\n        const reversedMajor = majorArcana.filter(card => card.isReversed);\n        \n        // Analyze higher self messages based on Major Arcana patterns\n        if (majorArcana.some(card => card.name === 'The Fool')) {\n            messages.push('Trust in new beginnings and have faith in your journey');\n        }\n        if (majorArcana.some(card => card.name === 'The High Priestess')) {\n            messages.push('Listen to your intuition and trust your inner wisdom');\n        }\n        if (majorArcana.some(card => card.name === 'The Star')) {\n            messages.push('Maintain hope and connection to your higher purpose');\n        }\n        if (majorArcana.some(card => card.name === 'The World')) {\n            messages.push('You are completing an important cycle and ready for expansion');\n        }\n        \n        if (reversedMajor.length > 0) {\n            messages.push('Pay attention to internal blocks and resistance patterns');\n        }\n        \n        // Default message if no specific patterns found\n        if (messages.length === 0) {\n            messages.push('Your higher self is guiding you toward authentic expression and service');\n        }\n        \n        return messages.join('. ') + '.';\n    }\n    \n    analyzeAscensionPath() {\n        const chakraEmphasis = this.calculateChakraEmphasis();\n        const spiritualStage = this.assessSpiritualStage();\n        const challenges = this.identifyAscensionChallenges();\n        \n        let path = `Current ascension phase: ${spiritualStage}. `;\n        \n        if (chakraEmphasis.primary) {\n            path += `Primary energy center activation: ${chakraEmphasis.primary}. `;\n        }\n        \n        if (challenges.length > 0) {\n            path += `Current challenges: ${challenges.join(', ')}. `;\n        }\n        \n        path += 'Remember that ascension is a gradual process of consciousness expansion.';\n        \n        return path;\n    }\n    \n    calculateChakraEmphasis() {\n        const chakraCards = {\n            'Root': ['The Emperor', 'King of Pentacles', 'Four of Pentacles'],\n            'Sacral': ['The Empress', 'Queen of Cups', 'Two of Cups'],\n            'Solar Plexus': ['The Magician', 'King of Wands', 'Three of Wands'],\n            'Heart': ['The Lovers', 'Queen of Cups', 'Six of Cups', 'Temperance'],\n            'Throat': ['The Hierophant', 'King of Swords', 'Three of Swords'],\n            'Third Eye': ['The High Priestess', 'Queen of Swords', 'Seven of Cups'],\n            'Crown': ['The Fool', 'The World', 'Ten of Pentacles']\n        };\n        \n        const emphasis = {};\n        for (const [chakra, cards] of Object.entries(chakraCards)) {\n            emphasis[chakra] = this.drawnCards.filter(card => \n                cards.includes(card.name)\n            ).length;\n        }\n        \n        const primary = Object.entries(emphasis).reduce((max, [chakra, count]) => \n            count > max.count ? { chakra, count } : max\n        , { chakra: null, count: 0 });\n        \n        return {\n            primary: primary.count > 0 ? primary.chakra : null,\n            distribution: emphasis\n        };\n    }\n    \n    assessSpiritualStage() {\n        const majorArcana = this.drawnCards.filter(card => card.suit === 'Major Arcana');\n        const progression = majorArcana.map(card => card.number).sort((a, b) => a - b);\n        \n        if (progression.some(num => num >= 0 && num <= 6)) {\n            return 'Ego Development - Building personal identity and worldly skills';\n        }\n        if (progression.some(num => num >= 7 && num <= 13)) {\n            return 'Soul Emergence - Confronting shadow and integrating unconscious wisdom';\n        }\n        if (progression.some(num => num >= 14 && num <= 21)) {\n            return 'Spirit Integration - Approaching unity consciousness and service';\n        }\n        \n        return 'Balanced Development - Integrating all levels of consciousness';\n    }\n    \n    identifyAscensionChallenges() {\n        const challenges = [];\n        const reversedCards = this.drawnCards.filter(card => card.isReversed);\n        \n        reversedCards.forEach(card => {\n            if (card.name === 'The Tower') {\n                challenges.push('Ego dissolution and spiritual crisis');\n            }\n            if (card.name === 'The Devil') {\n                challenges.push('Breaking free from limiting beliefs and addictions');\n            }\n            if (card.name === 'The Moon') {\n                challenges.push('Navigating spiritual illusions and psychic confusion');\n            }\n            if (card.name === 'The Hanged Man') {\n                challenges.push('Learning patience and surrender in spiritual development');\n            }\n        });\n        \n        return challenges;\n    }\n    findDominantSephirah(positions) {\n        if (!positions || positions.length === 0) {\n            return 'Tiphareth - The sphere of beauty and balanced consciousness';\n        }\n        \n        const sephirahCount = {};\n        positions.forEach(pos => {\n            const sephirah = pos.sephirah;\n            sephirahCount[sephirah] = (sephirahCount[sephirah] || 0) + 1;\n        });\n        \n        const dominant = Object.entries(sephirahCount).reduce((max, [sephirah, count]) => \n            count > max.count ? { sephirah, count } : max\n        , { sephirah: 'Tiphareth', count: 0 });\n        \n        const descriptions = {\n            'Kether': 'Kether - The Crown, source of divine consciousness and unity',\n            'Chokmah': 'Chokmah - Divine Wisdom, the creative force of the universe',\n            'Binah': 'Binah - Understanding, the receptive intelligence that gives form',\n            'Chesed': 'Chesed - Mercy, the sphere of loving-kindness and expansion',\n            'Geburah': 'Geburah - Severity, the sphere of strength and necessary limitation',\n            'Tiphareth': 'Tiphareth - Beauty, the sphere of harmony and balanced consciousness',\n            'Netzach': 'Netzach - Victory, the sphere of endurance and emotional nature',\n            'Hod': 'Hod - Splendor, the sphere of intellect and divine communication',\n            'Yesod': 'Yesod - Foundation, the sphere of imagination and the astral plane',\n            'Malkuth': 'Malkuth - Kingdom, the sphere of physical manifestation and earthly experience'\n        };\n        \n        return descriptions[dominant.sephirah] || 'Tiphareth - The sphere of beauty and balanced consciousness';\n    }\n    analyzeChakraAlignment() { return { dominantChakra: 'Heart Chakra', balance: 'Moderate', flow: 'Ascending' }; }\n    identifyEnergyBlocks() { return 'Mild throat chakra constriction affecting self-expression'; }\n    analyzeKundaliniFlow() { return 'Gentle awakening process, honor your pace'; }\n    analyzeMeridianActivity() { return 'Heart and lung meridians most active, supporting emotional processing'; }\n    identifyPrimaryArchetypes() { return 'The Wise Woman, The Seeker, The Healer'; }\n    analyzeMythologicalConnections() { return 'Connected to Persephone\\'s journey and the Celtic goddess Brigid'; }\n    analyzeHeroJourney() { return 'Currently in the \"Trials\" phase, approaching the \"Revelation\" stage'; }\n    analyzeGoddessAspects() { return 'Maiden and Mother aspects prominent, Crone wisdom emerging'; }\n    analyzeSeasonalTiming() { return 'Autumn energy - time for harvest and inner reflection'; }\n    analyzeLunarCycles() { return 'New moon energy optimal for new beginnings in 2-3 weeks'; }\n    analyzePlanetaryTransits() { return 'Mercury direct supports clear communication and decision-making'; }\n    analyzeManifestationWindows() { return 'Strongest manifestation period: Next 3 months, especially during full moons'; }\n    analyzeKarmicDebts() { return 'Minor karmic pattern around forgiveness and self-worth'; }\n    analyzePastLifeInfluences() { return 'Healer/wise woman past life influencing current spiritual gifts'; }\n    analyzeSoulContracts() { return 'Contract to teach through example and support others\\' healing'; }\n    analyzeDharmicPurpose() { return 'To bridge ancient wisdom with modern healing modalities'; }\n\n    // Additional formatting methods\n    formatSpiritualGifts(gifts) {\n        const giftsText = typeof gifts === 'string' ? gifts : this.analyzeSpiritualGifts();\n        return `<p class=\"text-gray-300\">${giftsText}</p>`;\n    }\n    \n    formatHigherSelfMessages(messages) {\n        const messagesText = typeof messages === 'string' ? messages : this.analyzeHigherSelfMessages();\n        return `<p class=\"text-gray-300\">${messagesText}</p>`;\n    }\n    \n    formatAscensionPath(path) {\n        const pathText = typeof path === 'string' ? path : this.analyzeAscensionPath();\n        return `<p class=\"text-gray-300\">${pathText}</p>`;\n    }\n    formatTreeOfLife(treeAnalysis) {\n        if (!treeAnalysis || !treeAnalysis.positions) {\n            return '<p class=\"text-gray-300\">Balanced position across multiple sephiroth indicating spiritual maturity</p>';\n        }\n        \n        let html = `<div class=\"mb-4\">`;\n        html += `<h5 class=\"font-semibold text-blue-400 mb-2\">Dominant Sephirah</h5>`;\n        html += `<p class=\"text-sm text-gray-300\">${treeAnalysis.dominantSephirah}</p>`;\n        html += `</div>`;\n        \n        html += `<div class=\"mb-4\">`;\n        html += `<h5 class=\"font-semibold text-blue-400 mb-2\">Pillar Influence</h5>`;\n        html += `<p class=\"text-sm text-gray-300\">${treeAnalysis.pillar}</p>`;\n        html += `</div>`;\n        \n        html += `<div class=\"mb-4\">`;\n        html += `<h5 class=\"font-semibold text-blue-400 mb-2\">World Influence</h5>`;\n        html += `<p class=\"text-sm text-gray-300\">${treeAnalysis.world}</p>`;\n        html += `</div>`;\n        \n        return html;\n    }\n    \n    formatSephirothInfluences(influences) {\n        if (!influences || influences.length === 0) {\n            return '<p class=\"text-gray-300\">Tiphareth influence bringing beauty and balance to all aspects</p>';\n        }\n        \n        let html = '';\n        influences.forEach(influence => {\n            html += `<div class=\"mb-3 p-2 bg-blue-900 bg-opacity-20 rounded border-l-2 border-blue-400\">`;\n            html += `<strong class=\"text-blue-400\">${influence.card}</strong><br>`;\n            html += `<span class=\"text-sm text-gray-300\">${influence.sephirah}: ${influence.influence}</span><br>`;\n            html += `<span class=\"text-xs text-gray-400\">${influence.quality}</span>`;\n            html += `</div>`;\n        });\n        \n        return html;\n    }\n    \n    formatPathworking(paths) {\n        if (!paths || paths.length === 0) {\n            return '<p class=\"text-gray-300\">Path of the High Priestess prominent - trust intuitive wisdom</p>';\n        }\n        \n        let html = '';\n        paths.forEach(path => {\n            html += `<div class=\"mb-3 p-2 bg-purple-900 bg-opacity-20 rounded border-l-2 border-purple-400\">`;\n            html += `<strong class=\"text-purple-400\">${path.card}</strong><br>`;\n            html += `<span class=\"text-sm text-gray-300\">${path.path}</span><br>`;\n            html += `<span class=\"text-xs text-gray-400\">Energy: ${path.energy}</span><br>`;\n            html += `<span class=\"text-xs text-blue-300\">Lesson: ${path.lesson}</span>`;\n            html += `</div>`;\n        });\n        \n        return html;\n    }\n    \n    formatHebrewLetters(letters) {\n        if (!letters || letters.length === 0) {\n            return '<p class=\"text-gray-300\">Gimel (camel) - patient journey toward enlightenment</p>';\n        }\n        \n        let html = '';\n        letters.forEach(letter => {\n            html += `<div class=\"mb-3 p-2 bg-yellow-900 bg-opacity-20 rounded border-l-2 border-yellow-400\">`;\n            html += `<strong class=\"text-yellow-400\">${letter.card}</strong><br>`;\n            html += `<span class=\"text-sm text-gray-300\">${letter.letter}</span><br>`;\n            html += `<span class=\"text-xs text-gray-400\">Meaning: ${letter.meaning}</span><br>`;\n            html += `<span class=\"text-xs text-blue-300\">Numerology: ${letter.numerology}</span>`;\n            html += `</div>`;\n        });\n        \n        return html;\n    }\n    formatChakraAlignment() { return '<p class=\"text-gray-300\">Heart chakra most active, supporting emotional healing and connection</p>'; }\n    formatEnergyBlocks() { return '<p class=\"text-gray-300\">Minor throat chakra constriction - practice authentic expression</p>'; }\n    formatKundaliniFlow() { return '<p class=\"text-gray-300\">Gentle awakening process, honor your natural pace</p>'; }\n    formatMeridianActivity() { return '<p class=\"text-gray-300\">Heart and lung meridians active, supporting emotional processing</p>'; }\n    formatPrimaryArchetypes() { return '<p class=\"text-gray-300\">The Wise Woman, The Seeker, The Healer archetypes prominent</p>'; }\n    formatMythologicalConnections() { return '<p class=\"text-gray-300\">Connected to Persephone\\'s journey and Celtic goddess Brigid</p>'; }\n    formatHeroJourney() { return '<p class=\"text-gray-300\">Currently in \"Trials\" phase, approaching \"Revelation\" stage</p>'; }\n    formatGoddessAspects() { return '<p class=\"text-gray-300\">Maiden and Mother aspects prominent, Crone wisdom emerging</p>'; }\n    formatSeasonalTiming() { return '<p class=\"text-gray-300\">Autumn energy - time for harvest and inner reflection</p>'; }\n    formatLunarCycles() { return '<p class=\"text-gray-300\">New moon energy optimal for new beginnings in 2-3 weeks</p>'; }\n    formatPlanetaryTransits() { return '<p class=\"text-gray-300\">Mercury direct supports clear communication and decision-making</p>'; }\n    formatManifestationWindows() { return '<p class=\"text-gray-300\">Strongest manifestation period: Next 3 months, especially during full moons</p>'; }\n    formatKarmicDebts() { return '<p class=\"text-gray-300\">Minor karmic pattern around forgiveness and self-worth</p>'; }\n    formatPastLifeInfluences() { return '<p class=\"text-gray-300\">Healer/wise woman past life influencing current spiritual gifts</p>'; }\n    formatSoulContracts() { return '<p class=\"text-gray-300\">Contract to teach through example and support others\\' healing</p>'; }\n    formatDharmicPurpose() { return '<p class=\"text-gray-300\">To bridge ancient wisdom with modern healing modalities</p>'; }\n    formatAnimaAnimus() { return '<p class=\"text-gray-300\">Healthy integration of feminine intuition and masculine action</p>'; }\n    formatCollectiveUnconscious() { return '<p class=\"text-gray-300\">Strong connection to archetypal healing wisdom</p>'; }\n    formatPsychologicalPatterns() { return '<p class=\"text-gray-300\">Pattern of transformation through introspection and service</p>'; }\n\n    // Missing analysis methods\n    assessShadowIntegration() { return 'Moderate integration, continue shadow work practices'; }\n    identifyProjectionPatterns() { return 'Projecting authority issues onto others'; }\n    identifyKarmicLessons() { return 'Learning to trust divine timing and surrender control'; }\n    assessLessonIntegration() { return 'Good integration of spiritual lessons, ready for deeper work'; }\n    getSpiritalStage(card) {\n        const stageMap = {\n            'The Fool': 'Beginner - Starting the spiritual journey',\n            'The Magician': 'Apprentice - Learning to work with spiritual energy',\n            'The High Priestess': 'Initiate - Developing intuitive abilities',\n            'The Empress': 'Creatrix - Manifesting spiritual vision',\n            'The Emperor': 'Builder - Establishing spiritual structure',\n            'The Hierophant': 'Student - Seeking spiritual knowledge',\n            'The Lovers': 'Chooser - Making conscious spiritual decisions',\n            'The Chariot': 'Warrior - Overcoming spiritual obstacles',\n            'Strength': 'Alchemist - Transforming lower nature',\n            'The Hermit': 'Seeker - Pursuing inner truth',\n            'Wheel of Fortune': 'Acceptor - Understanding spiritual cycles',\n            'Justice': 'Balancer - Seeking spiritual equilibrium',\n            'The Hanged Man': 'Surrenderer - Learning spiritual sacrifice',\n            'Death': 'Transformer - Embracing spiritual death and rebirth',\n            'Temperance': 'Healer - Integrating spiritual energies',\n            'The Devil': 'Liberator - Breaking spiritual bondage',\n            'The Tower': 'Destroyer - Dismantling false spirituality',\n            'The Star': 'Visionary - Receiving spiritual guidance',\n            'The Moon': 'Mystic - Navigating spiritual mysteries',\n            'The Sun': 'Illuminated - Embodying spiritual truth',\n            'Judgement': 'Awakened - Answering spiritual calling',\n            'The World': 'Master - Achieving spiritual completion'\n        };\n        \n        return stageMap[card.name] || 'Intermediate - Developing spiritual understanding';\n    }\n    \n    assessMastery(card) {\n        const masteryLevels = {\n            'Beginner': 'Just beginning to understand this energy',\n            'Apprentice': 'Learning the basics of this spiritual principle',\n            'Initiate': 'Developing deeper understanding and practice',\n            'Intermediate': 'Working with this energy more consciously',\n            'Advanced': 'Demonstrating mastery in this area',\n            'Master': 'Fully integrated and able to teach others'\n        };\n        \n        const stage = this.getSpiritalStage(card).split(' - ')[0];\n        return masteryLevels[stage] || 'Developing mastery through dedicated practice';\n    }\n    analyzeSephirothInfluences() {\n        const sephirothMap = {\n            'Kether': 'Crown - Divine will and pure consciousness',\n            'Chokmah': 'Wisdom - Dynamic creative force and inspiration',\n            'Binah': 'Understanding - Receptive intelligence and form',\n            'Chesed': 'Mercy - Loving-kindness and expansion',\n            'Geburah': 'Severity - Strength and necessary limitation',\n            'Tiphareth': 'Beauty - Harmony and balanced consciousness',\n            'Netzach': 'Victory - Endurance and emotional nature',\n            'Hod': 'Splendor - Intellect and communication',\n            'Yesod': 'Foundation - Imagination and astral plane',\n            'Malkuth': 'Kingdom - Physical manifestation and earth plane'\n        };\n        \n        const influences = [];\n        this.drawnCards.forEach(card => {\n            const position = this.getTreeOfLifePosition(card);\n            if (position.sephirah) {\n                const influence = sephirothMap[position.sephirah];\n                if (influence) {\n                    influences.push({\n                        card: card.name,\n                        sephirah: position.sephirah,\n                        influence: influence,\n                        quality: this.getSephirahQuality(position.sephirah, card.isReversed)\n                    });\n                }\n            }\n        });\n        \n        return influences;\n    }\n    \n    analyzePathworking() {\n        const pathMap = {\n            'The Fool': 'Path 11 - Aleph (Air) - The path of spiritual air, connecting divine will to wisdom',\n            'The Magician': 'Path 12 - Beth (Mercury) - The path of communication between crown and understanding',\n            'The High Priestess': 'Path 13 - Gimel (Moon) - The path of the High Priestess, intuitive wisdom',\n            'The Empress': 'Path 14 - Daleth (Venus) - The path of love connecting wisdom and understanding',\n            'The Emperor': 'Path 15 - Heh (Aries) - The path of authority and structure',\n            'The Hierophant': 'Path 16 - Vav (Taurus) - The path of tradition and spiritual teaching',\n            'The Lovers': 'Path 17 - Zayin (Gemini) - The path of conscious choice and union',\n            'The Chariot': 'Path 18 - Cheth (Cancer) - The path of receptivity and protection',\n            'Strength': 'Path 19 - Teth (Leo) - The path of inner strength and courage',\n            'The Hermit': 'Path 20 - Yod (Virgo) - The path of inner light and spiritual seeking',\n            'Wheel of Fortune': 'Path 21 - Kaph (Jupiter) - The path of fortune and spiritual cycles',\n            'Justice': 'Path 22 - Lamed (Libra) - The path of balance and karmic justice',\n            'The Hanged Man': 'Path 23 - Mem (Water) - The path of sacrifice and surrender',\n            'Death': 'Path 24 - Nun (Scorpio) - The path of transformation and rebirth',\n            'Temperance': 'Path 25 - Samekh (Sagittarius) - The path of harmony and spiritual alchemy',\n            'The Devil': 'Path 26 - Ayin (Capricorn) - The path of material temptation and spiritual bondage',\n            'The Tower': 'Path 27 - Peh (Mars) - The path of sudden change and divine intervention',\n            'The Star': 'Path 28 - Tzaddi (Aquarius) - The path of hope and spiritual inspiration',\n            'The Moon': 'Path 29 - Qoph (Pisces) - The path of illusion and psychic development',\n            'The Sun': 'Path 30 - Resh (Sun) - The path of illumination and regeneration',\n            'Judgement': 'Path 31 - Shin (Fire) - The path of spiritual awakening and rebirth',\n            'The World': 'Path 32 - Tav (Saturn) - The path of completion and cosmic consciousness'\n        };\n        \n        const activePaths = this.drawnCards\n            .filter(card => card.suit === 'Major Arcana')\n            .map(card => ({\n                card: card.name,\n                path: pathMap[card.name] || 'Unknown path',\n                energy: card.isReversed ? 'Blocked or shadow expression' : 'Clear and flowing energy',\n                lesson: this.getPathLesson(card.name, card.isReversed)\n            }));\n        \n        return activePaths;\n    }\n    \n    analyzeHebrewLetters() {\n        const hebrewMap = {\n            'The Fool': 'Aleph (א) - The ox, breath of life, primal sound of creation',\n            'The Magician': 'Beth (ב) - The house, duality, receptacle of divine energy',\n            'The High Priestess': 'Gimel (ג) - The camel, bridge between worlds, patient journey',\n            'The Empress': 'Daleth (ד) - The door, threshold, feminine receptivity',\n            'The Emperor': 'Heh (ה) - The window, sight, divine breath made manifest',\n            'The Hierophant': 'Vav (ו) - The nail, connection, joining heaven and earth',\n            'The Lovers': 'Zayin (ז) - The sword, choice, discrimination',\n            'The Chariot': 'Cheth (ח) - The fence, protection, enclosure of the sacred',\n            'Strength': 'Teth (ט) - The serpent, hidden strength, coiled energy',\n            'The Hermit': 'Yod (י) - The hand, creative power, spark of divinity',\n            'Wheel of Fortune': 'Kaph (כ) - The palm, grasping, receptive power',\n            'Justice': 'Lamed (ל) - The ox-goad, teaching, urging forward',\n            'The Hanged Man': 'Mem (מ) - The water, flow, maternal wisdom',\n            'Death': 'Nun (נ) - The fish, life in death, transformation',\n            'Temperance': 'Samekh (ס) - The prop, support, divine providence',\n            'The Devil': 'Ayin (ע) - The eye, appearance, material sight',\n            'The Tower': 'Peh (פ) - The mouth, speech, creative and destructive word',\n            'The Star': 'Tzaddi (צ) - The fishhook, desire, pulling toward the divine',\n            'The Moon': 'Qoph (ק) - The back of the head, reflection, subconscious',\n            'The Sun': 'Resh (ר) - The head, consciousness, solar intelligence',\n            'Judgement': 'Shin (ש) - The tooth, discrimination, divine fire',\n            'The World': 'Tav (ת) - The cross, completion, cosmic perfection'\n        };\n        \n        const letterInfluences = this.drawnCards\n            .filter(card => card.suit === 'Major Arcana')\n            .map(card => ({\n                card: card.name,\n                letter: hebrewMap[card.name] || 'Unknown letter',\n                meaning: this.getHebrewMeaning(card.name),\n                numerology: this.getHebrewNumerology(card.name)\n            }));\n        \n        return letterInfluences;\n    }\n    \n    extractSephirah(treePosition) {\n        if (!treePosition) return 'Malkuth';\n        \n        const sephirahExtraction = {\n            'Kether': ['Kether'],\n            'Chokmah': ['Chokmah'],\n            'Binah': ['Binah'],\n            'Chesed': ['Chesed'],\n            'Geburah': ['Geburah'],\n            'Tiphareth': ['Tiphareth'],\n            'Netzach': ['Netzach'],\n            'Hod': ['Hod'],\n            'Yesod': ['Yesod'],\n            'Malkuth': ['Malkuth']\n        };\n        \n        for (const [sephirah, keywords] of Object.entries(sephirahExtraction)) {\n            if (keywords.some(keyword => treePosition.includes(keyword))) {\n                return sephirah;\n            }\n        }\n        \n        return 'Malkuth';\n    }\n    \n    getKabbalisticMeaning(card) {\n        const meanings = {\n            'The Fool': 'The divine spark beginning its journey through creation',\n            'The Magician': 'The power of will directed through divine wisdom',\n            'The High Priestess': 'The veil between conscious and unconscious realms',\n            'The Empress': 'The creative force of divine love manifesting',\n            'The Emperor': 'The structure and order of divine authority',\n            'The Hierophant': 'The bridge between heaven and earth, spiritual teaching',\n            'The Lovers': 'The choice between higher and lower nature',\n            'The Chariot': 'The controlled direction of spiritual force',\n            'Strength': 'The gentle power that tames the beast of desire',\n            'The Hermit': 'The inner light guiding the soul toward truth',\n            'Wheel of Fortune': 'The eternal cycles of karma and divine justice',\n            'Justice': 'The perfect balance of divine law and mercy',\n            'The Hanged Man': 'The willing sacrifice that brings spiritual insight',\n            'Death': 'The transformation from one state of being to another',\n            'Temperance': 'The perfect mixing of opposing forces',\n            'The Devil': 'The illusion of material bondage and ignorance',\n            'The Tower': 'The destruction of false structures and pride',\n            'The Star': 'The hope and guidance of divine inspiration',\n            'The Moon': 'The reflection of divine light in the soul',\n            'The Sun': 'The full illumination of divine consciousness',\n            'Judgement': 'The call to spiritual awakening and rebirth',\n            'The World': 'The completion of the great work and cosmic unity'\n        };\n        \n        return meanings[card.name] || 'A sacred reflection of divine truth';\n    }\n    \n    identifyPillarInfluence() {\n        const pillarCards = {\n            'Pillar of Mercy': ['The Magician', 'The Emperor', 'The Hierophant', 'Wheel of Fortune', 'The Star'],\n            'Pillar of Severity': ['The High Priestess', 'The Chariot', 'Justice', 'The Hanged Man', 'The Moon'],\n            'Middle Pillar': ['The Fool', 'The Lovers', 'Death', 'Temperance', 'The Devil', 'The Tower', 'The Sun', 'Judgement', 'The World']\n        };\n        \n        const influences = { mercy: 0, severity: 0, middle: 0 };\n        \n        this.drawnCards.forEach(card => {\n            if (pillarCards['Pillar of Mercy'].includes(card.name)) influences.mercy++;\n            if (pillarCards['Pillar of Severity'].includes(card.name)) influences.severity++;\n            if (pillarCards['Middle Pillar'].includes(card.name)) influences.middle++;\n        });\n        \n        const dominant = Object.entries(influences).reduce((max, [pillar, count]) => \n            count > max.count ? { pillar, count } : max\n        , { pillar: null, count: 0 });\n        \n        const pillarMeanings = {\n            'mercy': 'Pillar of Mercy - Emphasis on expansion, creativity, and divine love',\n            'severity': 'Pillar of Severity - Emphasis on structure, discipline, and divine justice',\n            'middle': 'Middle Pillar - Emphasis on balance, consciousness, and spiritual integration'\n        };\n        \n        return pillarMeanings[dominant.pillar] || 'Balanced influence across all pillars';\n    }\n    \n    identifyWorldInfluence() {\n        const worldCards = {\n            'Atziluth': ['The Fool', 'The Magician', 'The High Priestess', 'The Empress'],\n            'Briah': ['The Emperor', 'The Hierophant', 'The Lovers', 'The Chariot'],\n            'Yetzirah': ['Strength', 'The Hermit', 'Wheel of Fortune', 'Justice'],\n            'Assiah': ['The Hanged Man', 'Death', 'Temperance', 'The Devil', 'The Tower', 'The Star', 'The Moon', 'The Sun', 'Judgement', 'The World']\n        };\n        \n        const influences = { atziluth: 0, briah: 0, yetzirah: 0, assiah: 0 };\n        \n        this.drawnCards.forEach(card => {\n            if (worldCards['Atziluth'].includes(card.name)) influences.atziluth++;\n            if (worldCards['Briah'].includes(card.name)) influences.briah++;\n            if (worldCards['Yetzirah'].includes(card.name)) influences.yetzirah++;\n            if (worldCards['Assiah'].includes(card.name)) influences.assiah++;\n        });\n        \n        const dominant = Object.entries(influences).reduce((max, [world, count]) => \n            count > max.count ? { world, count } : max\n        , { world: null, count: 0 });\n        \n        const worldMeanings = {\n            'atziluth': 'Atziluth - The archetypal world of divine emanation and pure spirit',\n            'briah': 'Briah - The creative world of divine thought and angelic consciousness',\n            'yetzirah': 'Yetzirah - The formative world of emotions and astral experience',\n            'assiah': 'Assiah - The material world of action and physical manifestation'\n        };\n        \n        return worldMeanings[dominant.world] || 'Balanced influence across all four worlds';\n    }\n    \n    assessTreeBalance(positions) {\n        const sephirothCount = {};\n        positions.forEach(pos => {\n            const sephirah = pos.sephirah;\n            sephirothCount[sephirah] = (sephirothCount[sephirah] || 0) + 1;\n        });\n        \n        const totalSephiroth = Object.keys(sephirothCount).length;\n        const maxConcentration = Math.max(...Object.values(sephirothCount));\n        \n        if (totalSephiroth >= 5) {\n            return 'Excellent balance across the Tree of Life, indicating integrated spiritual development';\n        } else if (totalSephiroth >= 3) {\n            return 'Good balance with focus on key spiritual centers';\n        } else if (maxConcentration >= 3) {\n            return 'Concentrated energy in specific sephiroth, suggesting focused spiritual work';\n        } else {\n            return 'Moderate balance, room for expanding spiritual awareness';\n        }\n    }\n    \n    getSephirahQuality(sephirah, isReversed) {\n        const qualities = {\n            'Kether': isReversed ? 'Disconnection from divine source' : 'Pure divine consciousness',\n            'Chokmah': isReversed ? 'Scattered creative energy' : 'Focused divine wisdom',\n            'Binah': isReversed ? 'Rigid thinking patterns' : 'Receptive understanding',\n            'Chesed': isReversed ? 'Excessive expansion' : 'Balanced mercy and love',\n            'Geburah': isReversed ? 'Destructive force' : 'Constructive strength',\n            'Tiphareth': isReversed ? 'Ego imbalance' : 'Harmonious consciousness',\n            'Netzach': isReversed ? 'Emotional excess' : 'Enduring victory',\n            'Hod': isReversed ? 'Mental confusion' : 'Clear communication',\n            'Yesod': isReversed ? 'Illusory foundations' : 'Stable imagination',\n            'Malkuth': isReversed ? 'Material imbalance' : 'Grounded manifestation'\n        };\n        \n        return qualities[sephirah] || 'Unknown quality';\n    }\n    \n    getPathLesson(cardName, isReversed) {\n        const lessons = {\n            'The Fool': isReversed ? 'Learn discernment in new beginnings' : 'Trust the journey of spiritual growth',\n            'The Magician': isReversed ? 'Avoid manipulation, use power ethically' : 'Channel divine will through focused intention',\n            'The High Priestess': isReversed ? 'Trust inner wisdom over external advice' : 'Develop and trust your intuitive abilities',\n            'The Empress': isReversed ? 'Balance nurturing with healthy boundaries' : 'Create from a place of divine love',\n            'The Emperor': isReversed ? 'Transform rigidity into flexible leadership' : 'Build stable foundations for spiritual growth',\n            'The Hierophant': isReversed ? 'Question dogma, seek personal truth' : 'Learn from spiritual teachers and traditions',\n            'The Lovers': isReversed ? 'Heal relationship patterns and self-love' : 'Make choices aligned with higher love',\n            'The Chariot': isReversed ? 'Find balance between control and surrender' : 'Direct your spiritual energy with purpose',\n            'Strength': isReversed ? 'Develop inner confidence and self-worth' : 'Use gentle strength to overcome challenges',\n            'The Hermit': isReversed ? 'Balance solitude with community connection' : 'Seek inner wisdom and share what you find',\n            'Wheel of Fortune': isReversed ? 'Accept change and take responsibility' : 'Understand the cycles of spiritual growth',\n            'Justice': isReversed ? 'Examine your judgments and biases' : 'Seek balance and fairness in all situations',\n            'The Hanged Man': isReversed ? 'Release martyr complex, find healthy sacrifice' : 'Surrender to divine timing and wisdom',\n            'Death': isReversed ? 'Embrace necessary endings and transformations' : 'Allow old patterns to die for new growth',\n            'Temperance': isReversed ? 'Find moderation and avoid extremes' : 'Blend opposing forces into harmony',\n            'The Devil': isReversed ? 'Break free from limiting beliefs and addictions' : 'Recognize and transform material attachments',\n            'The Tower': isReversed ? 'Rebuild on solid spiritual foundations' : 'Welcome divine intervention and sudden insight',\n            'The Star': isReversed ? 'Reconnect with hope and spiritual vision' : 'Trust in divine guidance and inspiration',\n            'The Moon': isReversed ? 'Face illusions and unconscious fears' : 'Navigate the mysteries of the psyche',\n            'The Sun': isReversed ? 'Integrate shadow with authentic joy' : 'Celebrate your divine nature and gifts',\n            'Judgement': isReversed ? 'Release self-judgment and embrace rebirth' : 'Answer the call to spiritual awakening',\n            'The World': isReversed ? 'Complete unfinished business before moving forward' : 'Celebrate spiritual achievement and prepare for new cycles'\n        };\n        \n        return lessons[cardName] || 'Learn the lesson this path offers';\n    }\n    \n    getHebrewMeaning(cardName) {\n        const meanings = {\n            'The Fool': 'The breath of life, primal creative force',\n            'The Magician': 'The container of divine energy, duality made manifest',\n            'The High Priestess': 'The patient journey between worlds',\n            'The Empress': 'The doorway to creation and feminine receptivity',\n            'The Emperor': 'The window of divine sight and authority',\n            'The Hierophant': 'The nail that joins heaven to earth',\n            'The Lovers': 'The sword of discrimination and choice',\n            'The Chariot': 'The protective enclosure of the sacred',\n            'Strength': 'The coiled serpent power of transformation',\n            'The Hermit': 'The divine spark of creative consciousness',\n            'Wheel of Fortune': 'The receptive palm that grasps divine providence',\n            'Justice': 'The teaching that urges the soul forward',\n            'The Hanged Man': 'The flowing water of maternal wisdom',\n            'Death': 'The fish that contains life within death',\n            'Temperance': 'The divine support and providence',\n            'The Devil': 'The eye that sees only material appearances',\n            'The Tower': 'The mouth that speaks creation and destruction',\n            'The Star': 'The hook that draws the soul toward divinity',\n            'The Moon': 'The back of the head, the realm of reflection',\n            'The Sun': 'The head of solar consciousness and intelligence',\n            'Judgement': 'The tooth of divine discrimination',\n            'The World': 'The cross of cosmic completion'\n        };\n        \n        return meanings[cardName] || 'A sacred Hebrew mystery';\n    }\n    \n    getHebrewNumerology(cardName) {\n        const numerology = {\n            'The Fool': 'Aleph = 1 - Unity and divine beginning',\n            'The Magician': 'Beth = 2 - Duality and polarity',\n            'The High Priestess': 'Gimel = 3 - Synthesis and growth',\n            'The Empress': 'Daleth = 4 - Stability and manifestation',\n            'The Emperor': 'Heh = 5 - Quintessence and spirit',\n            'The Hierophant': 'Vav = 6 - Harmony and connection',\n            'The Lovers': 'Zayin = 7 - Perfection and completion',\n            'The Chariot': 'Cheth = 8 - Regeneration and new cycles',\n            'Strength': 'Teth = 9 - Completion and wisdom',\n            'The Hermit': 'Yod = 10 - Perfection and return to unity',\n            'Wheel of Fortune': 'Kaph = 20 - Multiplication of duality',\n            'Justice': 'Lamed = 30 - Multiplication of synthesis',\n            'The Hanged Man': 'Mem = 40 - Multiplication of stability',\n            'Death': 'Nun = 50 - Multiplication of spirit',\n            'Temperance': 'Samekh = 60 - Multiplication of harmony',\n            'The Devil': 'Ayin = 70 - Multiplication of perfection',\n            'The Tower': 'Peh = 80 - Multiplication of regeneration',\n            'The Star': 'Tzaddi = 90 - Multiplication of completion',\n            'The Moon': 'Qoph = 100 - The new century, transcendence',\n            'The Sun': 'Resh = 200 - Multiplication of transcendence',\n            'Judgement': 'Shin = 300 - Triple transcendence',\n            'The World': 'Tav = 400 - Completion of the great work'\n        };\n        \n        return numerology[cardName] || 'Sacred number mystery';\n    }\n    findDominantChakra() { return 'Heart Chakra'; }\n    assessChakraBalance() { return 'Moderate balance with heart chakra emphasis'; }\n    analyzeEnergyFlow() { return 'Ascending energy flow from root to crown'; }\n    getChakraRecommendations() { return 'Focus on throat chakra opening practices'; }\n    getChakraEnergy() { return 'Balanced and flowing energy'; }\n    getChakraHealing() { return 'Continue current healing practices'; }\n    analyzeAnimaAnimus() { return 'Healthy integration of masculine and feminine aspects'; }\n    analyzeCollectiveUnconscious() { return 'Strong connection to archetypal healing wisdom'; }\n    analyzePsychologicalPatterns() { return 'Pattern of growth through introspection and service'; }\n}","mtime":1752833064608.3948,"doc":"Tarot Reader - Professional Edition","isExported":false,"methods":["bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90","bWV0aG9kLVRhcm90"],"properties":["cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy","cHJvcGVydHktVGFy"],"embedding":[0.019053857773542404,0.08986911922693253,-0.033739667385816574,0.015127002261579037,0.011961723677814007,-0.0013691895874217153,0.02763618715107441,0.04784167930483818,-0.053477149456739426,-0.0763186514377594,-0.016962002962827682,0.036365069448947906,-0.078451968729496,-0.016685739159584045,-0.06882108747959137,-0.02599314972758293,-0.07882560044527054,0.04330708086490631,0.02814062125980854,-0.03911789506673813,0.0398271381855011,0.018370503559708595,0.049722593277692795,0.012844211421906948,0.009603545069694519,0.0654449537396431,-0.04866359382867813,-0.034726038575172424,0.06467421352863312,-0.0011799052590504289,-0.04455851390957832,-0.0028193218167871237,-0.06050990894436836,-0.016963617876172066,0.022175412625074387,0.07387159764766693,-0.014284041710197926,0.05716768279671669,0.014534848742187023,-0.0063199750147759914,0.10541333258152008,0.054657913744449615,-0.08546651899814606,-0.02933596819639206,-0.03254428133368492,-0.06769467890262604,-0.037015460431575775,-0.03088589757680893,-0.005251425784081221,0.05348176136612892,-0.05366085097193718,0.025365212932229042,-0.006763903424143791,-0.02151143178343773,-0.013535428792238235,-0.03734206408262253,0.05250293388962746,-0.022409072145819664,-0.03621480613946915,-0.08818226307630539,-0.025057939812541008,0.0046472009271383286,0.010437633842229843,0.00036367736174724996,-0.014311778359115124,-0.026722677052021027,0.013132089748978615,0.08213626593351364,0.04218881204724312,-0.0985293760895729,-0.03397417441010475,0.03857766091823578,0.09867971390485764,0.0345270074903965,0.0035310632083564997,0.008543518371880054,0.04193965718150139,0.03953412547707558,-0.0009064103942364454,-0.011480084620416164,-0.1083613783121109,-0.07551436126232147,0.06242700666189194,0.0022401714231818914,-0.03251760080456734,0.054289236664772034,0.038835909217596054,0.04438246041536331,0.08931445330381393,-0.029626909643411636,-0.007871090434491634,-0.0003511456015985459,-0.044421419501304626,0.04576369747519493,-0.03124549798667431,0.05947894975543022,0.03714065998792648,-0.051021624356508255,-0.07826273143291473,0.04152698814868927,0.012792480178177357,0.05143754184246063,0.0635894387960434,-0.04164223000407219,0.0912153348326683,-0.07310500741004944,0.023268697783350945,-0.04727213457226753,-0.01986970752477646,0.03532624989748001,0.021981118246912956,0.03394758328795433,-0.06869687139987946,0.024558626115322113,0.023460805416107178,-0.03392094746232033,-0.03262976184487343,0.03424461930990219,0.06519366800785065,0.11270967125892639,0.124327652156353,0.011292093433439732,0.0324818454682827,-0.05077388510107994,-0.00122191256377846,-0.06062789633870125,0.018537255004048347,3.4979200091098195e-33,0.034484781324863434,-0.03136920556426048,0.0022392617538571358,0.040393199771642685,-0.01171463169157505,-0.028765905648469925,0.013755871914327145,0.08947404474020004,-0.017219942063093185,-0.0754876658320427,-0.018724530935287476,0.0027954704128205776,0.013465641997754574,0.07441122084856033,-0.08911175280809402,0.00047373550478369,-0.05527029186487198,0.0032183320727199316,0.023038038983941078,-0.048264749348163605,-0.005521705839782953,0.013106327503919601,0.03476191684603691,-0.055911239236593246,-0.06945052742958069,0.03469246253371239,0.005834411829710007,0.010846350342035294,-0.033060476183891296,0.02868114411830902,0.11303054541349411,-0.09714534133672714,-0.02430417388677597,-0.016757911071181297,0.06307792663574219,0.05535705387592316,0.002325094770640135,0.012913555838167667,-0.026560980826616287,-0.05905310437083244,-0.02658734656870365,-0.09642330557107925,0.06901390105485916,-0.07052898406982422,-0.07624942064285278,-0.08778556436300278,-0.02350248210132122,-0.003566726576536894,-0.07759616523981094,0.04862305149435997,-0.0834464505314827,0.05233921855688095,-0.03589459881186485,-0.04027571156620979,0.008034225553274155,-0.07049932330846786,0.0738983303308487,0.03085417114198208,0.030799856409430504,-0.11710971593856812,0.011539656668901443,0.11745643615722656,0.06262852251529694,0.00560144754126668,0.0017775062005966902,-0.018354475498199463,-0.026122624054551125,-0.07470511645078659,-0.012948504649102688,-0.07311141490936279,-0.04314382001757622,0.002022990258410573,0.05976708605885506,0.024855859577655792,-0.03468722477555275,-0.004493660293519497,-0.07256319373846054,-0.004514492116868496,-0.012143788859248161,-0.07770057022571564,-0.018564866855740547,-0.0876278281211853,-0.08223360776901245,-0.005965476855635643,-0.05198023468255997,0.025653373450040817,0.05389438569545746,-0.015398753806948662,0.015761571004986763,0.03239273652434349,-0.016062449663877487,0.015497133135795593,-0.04088829085230827,-0.10294914990663528,-0.0028266720473766327,-4.429564669009747e-33,0.035634055733680725,-0.04950539395213127,-0.0707472562789917,-0.017245527356863022,-0.02665695920586586,-0.0704236850142479,0.012454760260879993,0.031026164069771767,0.030621016398072243,-0.024966858327388763,-0.06043786555528641,0.02837415412068367,-0.013838171027600765,0.07344134896993637,0.09503522515296936,0.09311575442552567,-0.0022438589949160814,0.0002225590287707746,0.08094115555286407,-0.09529086202383041,-0.0386924147605896,0.022883251309394836,-0.06703245639801025,0.11429829895496368,-0.08100437372922897,-0.023563386872410774,0.05082415044307709,-0.045032404363155365,-0.04885610193014145,-0.10161010175943375,0.06914029270410538,-0.0209303330630064,-0.02490070089697838,0.021238718181848526,-0.06425792723894119,0.012693984434008598,0.03618985787034035,0.013645610772073269,-0.04458565264940262,0.04068446904420853,0.034756798297166824,-0.01282741129398346,-0.04294361174106598,-0.0794004574418068,-0.0034157773479819298,-0.05185776948928833,0.014383076690137386,0.04463893920183182,0.014909050427377224,0.07024677842855453,0.04074019938707352,-0.053226955235004425,0.011002042330801487,-0.05203769728541374,0.03323113173246384,0.10921594500541687,0.024381574243307114,-0.02234664373099804,-0.03695050999522209,-0.011234737932682037,-0.009477474726736546,-0.11915204674005508,-0.07052946835756302,-0.04168614000082016,-0.009371253661811352,-0.03950759768486023,0.00940251350402832,-0.06426393985748291,-0.03043484501540661,0.019887836650013924,0.02855265513062477,0.034668777137994766,0.010575284250080585,-0.04261448606848717,0.03973965719342232,0.0719304010272026,0.08797349035739899,0.017625916749238968,0.023471692577004433,-0.08328405022621155,0.039765745401382446,-0.035380277782678604,0.0009368238388560712,0.032902590930461884,0.07844818383455276,-0.0578208826482296,0.00738347414880991,-0.01717567816376686,-0.011045721359550953,-0.061568669974803925,0.032511573284864426,0.02683303877711296,-0.017624258995056152,0.022497257217764854,0.02500465139746666,-3.8104353450307826e-8,-0.09490913152694702,-0.006228200159966946,-0.048974066972732544,0.10031038522720337,-0.0331171415746212,0.002926786197349429,0.04874579235911369,0.007487201597541571,-0.05186179280281067,0.003051307052373886,0.10398789495229721,0.025330733507871628,0.033765509724617004,-0.07958663254976273,0.10212038457393646,0.011359984055161476,0.02387664094567299,0.06073823198676109,-0.054955676198005676,0.011963637545704842,0.10416347533464432,-0.057344552129507065,0.03724319487810135,-0.0157683864235878,0.038929130882024765,0.04620491713285446,0.07267257571220398,-0.0026318058371543884,0.00927678681910038,-0.03582590073347092,0.06529440730810165,0.09138601273298264,0.0998280718922615,-0.04719237983226776,0.015513602644205093,0.08552385121583939,0.01618102565407753,0.027553129941225052,0.09552790969610214,0.16398145258426666,0.03607787936925888,-0.06670799851417542,-0.10071273893117905,-0.008061401546001434,-0.04059089347720146,-0.037569694221019745,-0.06536930054426193,0.0077987066470086575,-0.005872074980288744,-0.01448773592710495,-0.038575660437345505,0.03751717135310173,0.04668234661221504,0.03883550688624382,-0.034780293703079224,-0.046388547867536545,0.02498854137957096,0.010673187673091888,0.019279757514595985,0.0458386093378067,0.06680727750062943,0.05836687237024307,0.00386446388438344,0.06109912693500519]},{"id":"aW1wb3J0LTE0NzYw","type":"import","qualifiedName":"important karmic influences and major life changes.\");","file":"/mnt/c/dev/tarot/tarot-app.js","startLine":318,"endLine":318,"lines":1,"code":"important karmic influences and major life changes.\");","mtime":1752833064608.3948,"doc":"","modulePath":"","elements":[],"relationships":{"dependsOn":"","imports":[]},"embedding":[-0.020016860216856003,0.015301961451768875,0.0031373552046716213,0.028312643989920616,0.021483242511749268,0.08626662939786911,0.02736222930252552,0.01018165610730648,-0.05699239671230316,0.061542149633169174,0.035841211676597595,0.03718160092830658,-0.07241273671388626,-0.049947917461395264,-0.023646878078579903,0.0629962757229805,0.006407936103641987,0.008986425586044788,-0.10148363560438156,-0.03325771912932396,0.030578074976801872,-0.04949568957090378,0.013770961202681065,0.04359159618616104,0.03680107742547989,0.04776809737086296,-0.029499266296625137,0.005095673259347677,0.05414243042469025,-0.03653588145971298,-0.049840524792671204,0.1723608374595642,0.12428314983844757,-0.009956770576536655,-0.0127900131046772,0.08361975103616714,-0.0487295500934124,0.010126630775630474,0.08460168540477753,0.027264457195997238,-0.012285459786653519,-0.005202068015933037,0.021810250356793404,0.00019605745910666883,0.0015327321598306298,-0.0759960412979126,-0.000994326313957572,-0.048144757747650146,-0.09413567185401917,-0.032783109694719315,-0.0569404661655426,-0.038849376142024994,-0.07009200751781464,-0.018453359603881836,0.03873442858457565,-0.05914023891091347,0.010499780997633934,-0.016024906188249588,0.007712377700954676,-0.05920407176017761,0.01919390633702278,0.04397495836019516,-0.04920536279678345,0.08239661902189255,0.03261798992753029,0.01898438297212124,-0.021512577310204506,0.08504791557788849,-0.08485285192728043,0.04856900870800018,-0.014014530926942825,-0.06235305964946747,-0.02103715017437935,-0.018780622631311417,0.07714106887578964,-0.09625899791717529,0.03380556032061577,0.01976240612566471,0.024340027943253517,-0.07213839143514633,0.00953663233667612,0.016589218750596046,-0.04200633242726326,0.032598596066236496,0.0016325324540957808,0.039427243173122406,0.0536319725215435,-0.0507168173789978,0.028715943917632103,0.013496201485395432,-0.01030309684574604,-0.06073803827166557,0.11263211816549301,-0.02729473076760769,-0.013944145292043686,0.06133173778653145,-0.047302182763814926,-0.09166929870843887,0.07831522822380066,0.02427838183939457,0.009104927070438862,-0.01145603135228157,-0.03496440872550011,0.07993258535861969,-0.02693953365087509,-0.06676333397626877,-0.013558369129896164,-0.01830214262008667,0.027097541838884354,0.0033684985246509314,-0.08010827004909515,-0.024022625759243965,-0.033479176461696625,-0.08079253882169724,0.06647472828626633,0.0008478371892124414,0.024250801652669907,0.04590490087866783,0.027680518105626106,0.06938032805919647,0.06411388516426086,0.01834818348288536,-0.039622992277145386,-0.015303273685276508,-0.10010213404893875,0.01196302194148302,0.01060657948255539,-2.8917638574808294e-33,0.030984723940491676,-0.06398832052946091,0.021689871326088905,0.1143898069858551,-0.022782808169722557,-0.0522945262491703,-0.07956908643245697,-0.1039513573050499,-0.023739123716950417,0.024404464289546013,0.01992085389792919,0.06305360794067383,0.0386468879878521,0.07352880388498306,-0.002829552860930562,0.018803361803293228,-0.13545288145542145,-0.017705369740724564,0.10015499591827393,-0.041533876210451126,-0.035859569907188416,0.06908469647169113,-0.054555706679821014,-0.0323169119656086,0.05299900099635124,-0.00449097715318203,0.04104001447558403,0.0023375938180834055,-0.09651564061641693,0.01009664498269558,0.06911401450634003,0.023425118997693062,-0.02970852144062519,-0.04177447780966759,0.005623179487884045,0.09232255816459656,-0.06811883300542831,-0.0512496754527092,0.01688299886882305,-0.04949979484081268,-0.07059632986783981,0.014294950291514397,-0.06059370934963226,-0.01823480986058712,0.10299947112798691,0.04119618609547615,0.003924378659576178,-0.03628963604569435,0.03892660513520241,0.032691750675439835,-0.05665311962366104,0.015524638816714287,0.09288087487220764,-0.0072685591876506805,0.004728848580271006,0.05580778792500496,0.011839515529572964,-0.002929285867139697,-0.0015799251850694418,-0.012465723790228367,-0.042811211198568344,-0.030856817960739136,0.08296678215265274,0.0019765712786465883,0.11782011389732361,0.06138855591416359,-0.06084286421537399,-0.07246889919042587,0.005672004539519548,0.030939152464270592,-0.08108361810445786,0.030969711020588875,-0.03244313597679138,0.05297447741031647,0.0025378151331096888,0.03928874433040619,-0.12422115355730057,-0.038407787680625916,-0.11468779295682907,0.0485597625374794,-0.047228485345840454,-0.07393369823694229,0.004650996997952461,0.013383826240897179,-0.017043832689523697,-0.002568403957411647,0.07109685242176056,-0.07172080129384995,-0.02105756476521492,0.04398415610194206,-0.03872796148061752,-0.03828151896595955,0.07428360730409622,0.0023362208157777786,-0.06241427734494209,2.833816348171358e-34,-0.08627733588218689,0.005575936287641525,-0.019895920529961586,0.04230925440788269,-0.023000525310635567,-0.018609339371323586,-0.08758929371833801,-0.04618018865585327,0.07828548550605774,0.09104770421981812,0.0048684715293347836,0.017470967024564743,-0.024498214945197105,-0.02795751765370369,0.0200775358825922,-0.039451878517866135,-0.08164132386445999,0.05507061257958412,0.00686532212421298,0.09052074700593948,0.02191190980374813,0.01118019875138998,-0.1551855355501175,-0.03060278855264187,0.007438799366354942,0.08177175372838974,-0.07131501287221909,0.019669145345687866,0.013553929515182972,-0.07029831409454346,-0.06295710057020187,0.02832135744392872,-0.058561570942401886,0.05099046975374222,-0.07461164891719818,-0.01399613730609417,0.08255312591791153,-0.06108306720852852,-0.08633886277675629,-0.05021458864212036,0.015739260241389275,0.06768901646137238,0.05979456752538681,-0.006775189191102982,-0.0024355396162718534,0.03954171761870384,-0.0087504917755723,0.031342219561338425,-0.07533866912126541,-0.01268431730568409,0.038665771484375,0.02066120132803917,-0.027675775811076164,0.01683627814054489,0.009854547679424286,0.05662194639444351,0.017420567572116852,-0.04100022837519646,0.016650360077619553,0.05832146108150482,-0.01998518779873848,-0.01384859997779131,0.0841132253408432,-0.006614111829549074,-0.05216442048549652,-0.10067801177501678,-0.05018047243356705,0.009470867924392223,0.024993017315864563,-0.03978908434510231,0.04227946698665619,-0.007567795924842358,-0.11966526508331299,-0.015431067906320095,-0.04284783452749252,0.0067412662319839,-0.013722501695156097,0.037381965667009354,-0.02563169039785862,0.04824652522802353,0.035569846630096436,-0.015626870095729828,0.003673258237540722,0.018509231507778168,0.03816778585314751,0.03857811540365219,-0.06411504000425339,-0.01288470160216093,0.06978754699230194,-0.05949578806757927,-0.08440256863832474,-0.00934581644833088,-0.006600945722311735,-0.00280784722417593,-0.07434092462062836,-2.7982396844095092e-8,0.03682451695203781,-0.023920567706227303,-0.00271999672986567,0.03530305251479149,0.01145793218165636,-0.007120783440768719,0.01430052611976862,0.01862713135778904,-0.07364702224731445,0.11599025875329971,0.02659936249256134,0.10747063905000687,0.003856382565572858,0.02664416842162609,0.07110698521137238,0.006852919701486826,-0.054606713354587555,-0.07869073003530502,-0.010358890518546104,-0.050299592316150665,0.033015090972185135,0.020251955837011337,0.0002966129977721721,-0.0019447609083727002,-0.002803511219099164,0.013313749805092812,0.059451665729284286,0.09720101952552795,-0.01817823387682438,0.04712716490030289,0.015603292733430862,0.06953015923500061,0.010152850300073624,-0.05810124799609184,0.0005150551442056894,-0.006064260844141245,-0.04634774848818779,-0.07520928233861923,0.09948568791151047,0.015763889998197556,0.028689447790384293,-0.01308866310864687,-0.031739264726638794,0.07608059793710709,0.029408933594822884,-0.01929575577378273,0.03452716022729874,-0.009286445565521717,-0.01531798206269741,-0.030619457364082336,-0.012117575854063034,0.03314948454499245,-0.061798419803380966,-0.012600820511579514,0.00963629875332117,0.03400978818535805,0.014382191933691502,0.025794293731451035,0.017415056005120277,-0.09023874998092651,0.11803654581308365,0.028638308867812157,-0.0423068143427372,-0.007922448217868805]},{"id":"aW1wb3J0LTE5OTk4","type":"import","qualifiedName":"important spiritual crossroads. Pay attention to the deeper lessons and trust in divine timing.\";","file":"/mnt/c/dev/tarot/tarot-app.js","startLine":408,"endLine":408,"lines":1,"code":"important spiritual crossroads. Pay attention to the deeper lessons and trust in divine timing.\";","mtime":1752833064608.3948,"doc":"","modulePath":"","elements":[],"relationships":{"dependsOn":"","imports":[]},"embedding":[0.032346293330192566,-0.013260692358016968,-0.014368932694196701,0.005187151022255421,-0.04301893338561058,0.02965092658996582,0.006379344500601292,-0.009974322281777859,0.0649099200963974,-0.02229677326977253,0.06907495111227036,0.009804120287299156,-0.052076440304517746,-0.03027881495654583,0.036892831325531006,0.06821642816066742,-0.08854994922876358,0.08868909627199173,-0.041698526591062546,-0.021698953583836555,-0.07810705155134201,-0.031866494566202164,-0.04250970855355263,0.01662401482462883,0.02317379228770733,0.020828796550631523,-0.008604404516518116,-0.016421889886260033,0.057953450828790665,-0.05029675364494324,0.01497876737266779,0.05298527330160141,0.04616134613752365,0.02740112505853176,-0.042059000581502914,0.1633473038673401,-0.05846644192934036,0.003155403770506382,0.09372265636920929,0.008016033098101616,0.009200849570333958,0.012281574308872223,0.009406635537743568,-0.03518759459257126,0.0353909395635128,-0.06948437541723251,-0.01852179504930973,-0.021962573751807213,-0.016187572851777077,-0.10274703055620193,-0.0949939414858818,-0.08659280091524124,-0.04336142912507057,0.0014779242919757962,-0.017962273210287094,0.07968281954526901,0.021893145516514778,-0.031715258955955505,0.029021581634879112,-0.03339719399809837,0.04538113623857498,0.01444299053400755,-0.013464503921568394,0.0361919105052948,0.003277359064668417,-0.03619181364774704,0.03801516816020012,0.03581242635846138,-0.11442062258720398,0.03501415625214577,-0.03837403655052185,-0.011950397863984108,0.09946657717227936,-0.06862825155258179,-0.026344217360019684,-0.013580076396465302,0.00030076203984208405,-0.08439092338085175,-0.043140511959791183,-0.0998256504535675,-0.012523963116109371,0.07989940047264099,0.044470250606536865,0.04571886360645294,0.035238903015851974,0.017993303015828133,0.06270451843738556,-0.008504335768520832,0.04559549689292908,0.017510272562503815,-0.006954276468604803,-0.07492629438638687,-0.011187577620148659,-0.009498708881437778,0.029046110808849335,0.07605193555355072,-0.006636407226324081,-0.04429902508854866,-0.018671151250600815,0.07556943595409393,-0.002005317248404026,0.050011198967695236,-0.044037945568561554,-0.020386619493365288,0.006966873072087765,0.044305190443992615,-0.0725698173046112,-0.04728737473487854,0.030554434284567833,-0.06715511530637741,0.02172352559864521,-0.028694026172161102,-0.04462298005819321,-0.03818238154053688,0.032802894711494446,0.12249410897493362,-0.03575257584452629,0.0059001510962843895,0.07791150361299515,0.04787711054086685,-0.01645123027265072,0.04389195144176483,0.04613158106803894,0.0019442631164565682,-0.06259729713201523,-0.05218592286109924,0.06557103246450424,-5.0864625036599194e-33,0.045925404876470566,0.029502717778086662,0.018051501363515854,0.021870434284210205,-0.043441042304039,-0.010722018778324127,-0.04251280426979065,-0.03348620608448982,-0.09185843914747238,0.00043158227344974875,0.06070999428629875,0.0627058893442154,0.03304378688335419,0.012516838498413563,-0.07947295159101486,-0.015303939580917358,-0.06821127235889435,-0.023346543312072754,0.009013606235384941,-0.03655923902988434,-0.01679450087249279,-0.046157464385032654,-0.039854831993579865,-0.04376884922385216,0.00365143152885139,-0.025821084156632423,0.06492384523153305,0.029196392744779587,-0.008708921261131763,0.028581898659467697,-0.032901834696531296,0.03465023636817932,0.04161432757973671,-0.01680948957800865,0.02524823695421219,0.09355515986680984,-0.07639173418283463,-0.052911657840013504,-0.017193498089909554,-0.03349926695227623,-0.013062882237136364,-0.010844082571566105,-0.031546175479888916,-0.017930893227458,0.07828528434038162,0.012218993157148361,-0.02304772473871708,-0.054627370089292526,-0.05621720850467682,0.0709470808506012,-0.0723947137594223,0.026379568502306938,0.009050058200955391,-0.08723253011703491,-0.08703816682100296,0.015675930306315422,-0.0033656631130725145,0.05837276950478554,-0.05309135839343071,-0.006246212404221296,0.018425995483994484,-0.12149184197187424,-0.03188483789563179,-0.045408666133880615,-0.005716338753700256,0.051512256264686584,-0.03934081271290779,-0.009237992577254772,0.06845100969076157,0.0438290610909462,-0.08908891677856445,0.06856988370418549,-0.00774706806987524,0.0604429617524147,-0.010945620946586132,-0.004581260960549116,-0.05831052362918854,-0.03705203905701637,0.0864730030298233,0.02344944141805172,-0.028099920600652695,-0.02643636055290699,-0.09152921289205551,0.08449238538742065,0.02220202423632145,-0.03906465321779251,0.058060746639966965,-0.06671547889709473,-0.10334470868110657,0.05335782840847969,-0.03559257835149765,0.09437759220600128,0.09765901416540146,-0.061024099588394165,-0.06940500438213348,2.209822666699365e-33,0.07936149090528488,0.008977931924164295,0.0011503531131893396,0.10799118131399155,0.010405663400888443,-0.04401181638240814,-0.01998743787407875,-0.04522160440683365,-0.019105054438114166,0.12153054028749466,-0.045907698571681976,-0.013437081128358841,0.016991594806313515,-0.03451703116297722,0.028178973123431206,-0.10304900258779526,-0.03247423470020294,0.08620979636907578,0.00517720403149724,0.09832572191953659,0.10737206041812897,0.026688367128372192,-0.0450628325343132,0.0011788635747507215,0.04910922050476074,0.04486427083611488,0.03120480850338936,-0.03138021379709244,-0.05184295400977135,-0.024275895208120346,-0.013853061944246292,0.022984091192483902,-0.046126995235681534,-0.029541978612542152,-0.04820648953318596,0.08921971172094345,0.08995433151721954,-0.10403140634298325,-0.049615513533353806,0.023411372676491737,0.013748617842793465,0.007069884333759546,-0.009812992066144943,-0.06309843063354492,-0.04203791543841362,0.04995360225439072,-0.02624865248799324,0.11129307001829147,-0.09599106758832932,-0.015956183895468712,0.03419443592429161,-0.011706835590302944,-0.04162066429853439,-0.06787722557783127,0.008368592709302902,0.03600247949361801,-0.027377819642424583,-0.063775435090065,-0.0067222933284938335,0.07013983279466629,0.08297558128833771,-0.010170121677219868,0.06272589415311813,0.07686133682727814,-0.004378683865070343,-0.06212495267391205,-0.01646796055138111,0.02654440701007843,-0.09356886148452759,0.08537071198225021,-0.019545141607522964,0.008952286094427109,-0.06939823180437088,-0.06843242794275284,-0.029355674982070923,0.025110118091106415,-0.014691833406686783,-0.07992035150527954,0.007500374224036932,-0.0536789670586586,0.05307776480913162,-0.061702828854322433,0.005680950824171305,0.022852813825011253,0.03932616859674454,0.016825389117002487,0.0068300943821668625,-0.037962108850479126,0.012354526668787003,-0.07484171539545059,-0.11681851744651794,0.007968275807797909,-0.00009391359344590455,-0.031135987490415573,-0.018301963806152344,-2.875676941016536e-8,-0.006895005702972412,-0.0232797022908926,-0.0038511508610099554,0.016378557309508324,0.04645928740501404,-0.045716285705566406,0.024224193766713142,0.002438589697703719,-0.08454179018735886,0.10124754905700684,0.04300715774297714,0.009892403148114681,-0.04165571928024292,0.05539689585566521,0.08970215171575546,-0.02619992382824421,0.017340265214443207,-0.0215916708111763,-0.0421987883746624,-0.015685271471738815,0.05085105076432228,0.03557134047150612,0.03467642515897751,-0.03398338705301285,0.0036376696079969406,-0.014372116886079311,-0.005435439758002758,0.18292421102523804,-0.013270520605146885,-0.04956142231822014,0.08389312773942947,0.04105750471353531,-0.0004312765668146312,-0.05580085888504982,-0.03752044588327408,0.05224040895700455,-0.06060000881552696,-0.03444874659180641,0.0662192776799202,0.0733090341091156,0.05063299089670181,0.05404061824083328,0.012268628925085068,0.06022803857922554,-0.045682307332754135,-0.015199193730950356,0.0667225643992424,0.06758495420217514,-0.048992518335580826,-0.05417175963521004,-0.01190879475325346,-0.056049831211566925,0.016524875536561012,-0.011571735143661499,-0.004440300166606903,0.010439908131957054,0.025403331965208054,0.04531792923808098,-0.06492508947849274,-0.03262599930167198,0.0779392197728157,0.03602531924843788,-0.041032951325178146,-0.05338622257113457]},{"id":"aW1wb3J0LTk0OTY1","type":"import","qualifiedName":"important cycle and ready for expansion');","file":"/mnt/c/dev/tarot/tarot-app.js","startLine":1973,"endLine":1973,"lines":1,"code":"important cycle and ready for expansion');","mtime":1752833064608.3948,"doc":"","modulePath":"","elements":[],"relationships":{"dependsOn":"","imports":[]},"embedding":[-0.0003061557945329696,0.03177407383918762,-0.037303902208805084,-0.029552580788731575,0.031213464215397835,0.016642320901155472,0.00900079496204853,0.049072377383708954,-0.06373431533575058,0.015425416640937328,0.06322915852069855,0.02642575278878212,0.0024788163136690855,-0.05710284039378166,0.050014156848192215,0.04203704744577408,-0.04425898194313049,-0.010814495384693146,-0.05928482115268707,-0.07089962065219879,0.11683733016252518,-0.015077016316354275,-0.046292297542095184,0.01301522646099329,0.05717173591256142,0.034268688410520554,-0.07672007381916046,0.04629663750529289,0.10563486814498901,0.018557235598564148,-0.031188184395432472,0.1370793879032135,0.14048714935779572,-0.0032744077034294605,0.05583469569683075,0.06193474307656288,-0.06573416292667389,0.010144065134227276,0.045898374170064926,0.013932547532022,-0.040600161999464035,-0.043207284063100815,0.009408446028828621,0.053836021572351456,0.04780491814017296,-0.0858742892742157,-0.021669426932930946,-0.002187141217291355,-0.04875050112605095,-0.03589645400643349,-0.052182380110025406,-0.12193141877651215,-0.09809871762990952,-0.03959285095334053,0.03370394557714462,-0.02214897610247135,0.0035733673721551895,-0.0682641863822937,0.02069268561899662,-0.04520324617624283,0.002155394060537219,0.03275245055556297,-0.08300452679395676,0.07427903264760971,0.04305766150355339,-0.02468796819448471,0.034946803003549576,-0.021896401420235634,-0.018159549683332443,0.06490229815244675,-0.05264405161142349,0.029118211939930916,0.01830187439918518,0.06679920852184296,-0.00038711915840394795,0.058546699583530426,0.01364649087190628,-0.014800850301980972,-0.0019411058165133,-0.08428531885147095,-0.04879051819443703,0.001622572191990912,0.02235490456223488,-0.011097467504441738,0.0081176133826375,0.08870677649974823,0.057663444429636,-0.042555082589387894,0.02113497629761696,-0.00742005743086338,-0.06408733129501343,-0.09115149080753326,0.07053322345018387,-0.0065251924097537994,-0.04849688708782196,0.0709267184138298,0.0038629062473773956,-0.1165216863155365,0.021832846105098724,0.03349868953227997,0.005174601916223764,-0.030563583597540855,0.013171517290174961,-0.05053539201617241,-0.05226801335811615,-0.02746601775288582,-0.006565332878381014,0.000730968255084008,-0.03054964169859886,-0.010900052264332771,-0.07052452862262726,-0.007436263840645552,0.01997944340109825,-0.10213995724916458,-0.017676005139946938,0.043120384216308594,-0.03805370256304741,0.007121504750102758,0.13609953224658966,0.1155254915356636,0.09666632860898972,0.03183634951710701,-0.047927018254995346,-0.04060998931527138,-0.05567711219191551,-0.0866982564330101,0.015385505743324757,-5.008821469130092e-33,-0.05895667150616646,-0.060971565544605255,0.0459393635392189,0.19504258036613464,-0.026834098622202873,-0.017651602625846863,0.003475697711110115,-0.05640693008899689,-0.1289157122373581,0.011578419245779514,0.017926180735230446,0.06609907001256943,-0.028501616790890694,0.01631113514304161,0.03133666515350342,-0.0593717098236084,0.004277165047824383,0.07868364453315735,-0.0056792618706822395,-0.024389401078224182,-0.019450457766652107,-0.04522349685430527,0.01228392031043768,0.002868758514523506,0.010101751424372196,0.06882710754871368,0.06330430507659912,-0.030080236494541168,-0.03521754965186119,0.043531421571969986,0.022037597373127937,-0.036582496017217636,-0.03423459082841873,-0.03926926851272583,0.030673259869217873,0.0544961541891098,-0.038154635578393936,-0.08348067849874496,0.027362650260329247,0.025857293978333473,-0.05517296493053436,-0.03840269893407822,-0.09016703814268112,-0.005856944248080254,0.07039877772331238,0.028950121253728867,-0.01828889176249504,0.04045102745294571,0.005171667318791151,0.04888611286878586,-0.04445423558354378,0.06601224094629288,0.04279754310846329,-0.0008617780404165387,-0.05363332852721214,0.03523017093539238,0.012564880773425102,-0.07255858182907104,-0.04086071252822876,0.028084443882107735,-0.013583064079284668,-0.01364726759493351,0.021526049822568893,0.02576945535838604,0.05338263884186745,0.04536743462085724,-0.02202114462852478,-0.01885312981903553,0.020087335258722305,0.03653203696012497,-0.04440538212656975,-0.01441312674432993,0.030505847185850143,0.06274808943271637,0.05706804618239403,-0.008337712846696377,-0.029045091941952705,-0.05715249851346016,-0.054599326103925705,-0.041622698307037354,-0.06990106403827667,-0.00327640725299716,-0.043952591717243195,-0.008243684656918049,-0.04844599589705467,-0.03961483761668205,0.06265641748905182,-0.05656468868255615,-0.06517232209444046,0.023710791021585464,-0.050598058849573135,-0.01440878864377737,0.05022461339831352,0.015376540832221508,-0.031264595687389374,2.580202569544236e-33,0.050155144184827805,0.011803671717643738,0.02360551245510578,0.015442458912730217,0.01934097334742546,-0.03686458617448807,-0.042323630303144455,-0.12304504215717316,0.025547845289111137,0.05795188993215561,-0.03718239441514015,0.038350798189640045,-0.004970361478626728,-0.061704546213150024,0.008779346942901611,-0.016425730660557747,-0.03033643215894699,-0.03423986956477165,0.02703564427793026,0.13105857372283936,0.020444152876734734,-0.0073641641065478325,-0.09808861464262009,-0.04451967403292656,0.01956011727452278,0.04095526784658432,-0.10605265200138092,0.018849758431315422,0.026257339864969254,0.00757317990064621,-0.06959077715873718,-0.036042600870132446,0.012091399170458317,0.021427897736430168,-0.023093372583389282,0.03797231242060661,0.1030983105301857,-0.10617686063051224,-0.014336890541017056,0.07370386272668839,0.05318525433540344,-0.02262851409614086,-0.01439007930457592,0.011296321637928486,-0.014488010667264462,0.03153790906071663,0.04925234243273735,0.036036696285009384,-0.030884668231010437,0.015839917585253716,0.07492057979106903,0.017224622890353203,-0.06132041662931442,-0.05066872015595436,0.030051635578274727,0.10352979600429535,0.016455011442303658,-0.0069679380394518375,-0.026375925168395042,0.03314279392361641,-0.07103443890810013,-0.04567072167992592,0.08517398685216904,-0.06860018521547318,-0.04494329169392586,-0.08378879725933075,-0.0503663495182991,-0.021695272997021675,-0.006313930731266737,-0.05149724334478378,-0.021735984832048416,0.04285016655921936,-0.110514797270298,-0.034108541905879974,-0.09007374942302704,0.013390219770371914,0.04208247363567352,-0.04977878928184509,-0.01476620975881815,-0.005392645485699177,-0.07819018512964249,0.04092414677143097,-0.016136080026626587,0.05323074385523796,-0.0031658459920436144,0.045697107911109924,0.008277112618088722,-0.03155764937400818,-0.017499800771474838,-0.0067950282245874405,-0.04937255382537842,0.11331654340028763,0.03314027562737465,0.08802460134029388,-0.03486666455864906,-2.5147597781938202e-8,-0.038126375526189804,0.01235863845795393,-0.00637245224788785,-0.029864832758903503,0.12641970813274384,-0.05931347981095314,0.04273439198732376,0.039996739476919174,-0.01656404882669449,0.029630275443196297,0.10456138849258423,0.020433254539966583,0.058673832565546036,0.045945312827825546,0.04243949428200722,0.0170306209474802,-0.05047542229294777,-0.026182392612099648,-0.07965463399887085,-0.03368280082941055,-0.03573228791356087,0.005911989603191614,-0.00988499540835619,-0.024632303044199944,0.02334074303507805,-0.02708066999912262,-0.0120829027146101,0.12937919795513153,0.006638695485889912,-0.01361563615500927,0.056363143026828766,0.05587930977344513,0.04736042767763138,0.0017184910830110312,-0.004363910760730505,0.06492333114147186,-0.013540774583816528,0.03938959538936615,0.0383327454328537,0.02381805330514908,0.03570821136236191,-0.011627499014139175,-0.0229991152882576,0.08376578986644745,-0.020283598452806473,0.0045229773968458176,-0.04898280277848244,-0.024270420894026756,-0.05190512165427208,-0.14387501776218414,-0.07598216086626053,-0.011579343117773533,0.009042876772582531,0.01987822912633419,0.06283944100141525,0.08831517398357391,0.004608931485563517,0.006415940821170807,0.03941033408045769,0.0643596202135086,-0.007452481891959906,0.06891398131847382,0.020841240882873535,-0.009445236064493656]},{"id":"aW1wb3J0LTEzNTQ0","type":"import","qualifiedName":"important decisions that align with your core values.\",\n                love: \"In love, The Lovers represents deep romantic connection, soul mates, or a significant relationship choice. It suggests harmony, mutual attraction, and spiritual connection.\",\n                career: \"Professionally, it may indicate partnership in business, working with someone you're compatible with, or making career choices based on personal values.\",\n                spiritual: \"Spiritually, The Lovers represents the union of opposites, divine love, and making choices that align with your higher self.\"\n            },\n            reversed: {\n                general: \"Reversed, The Lovers can indicate disharmony, imbalance, or a misalignment of values within relationships. It might suggest a difficult choice or conflict.\",\n                love: \"In relationships, reversed suggests relationship problems, incompatibility, infidelity, or a difficult choice between two lovers.\",\n                career: \"Career-wise, it may indicate workplace conflicts, poor partnerships, or making career choices that conflict with personal values.\",\n                spiritual: \"Spiritually reversed, it suggests internal conflict, misaligned choices, or difficulty integrating different aspects of yourself.\"\n            }\n        }\n    },\n    {\n        name: \"The Chariot\",\n        number: 7,\n        suit: \"Major Arcana\",\n        element: \"Water\",\n        astrology: \"Cancer\",\n        numerology: 7,\n        image: \"img/big/major_07_Chariot.jpg\",\n        keywords: {\n            upright: [\"Control\", \"Willpower\", \"Victory\", \"Determination\", \"Direction\"],\n            reversed: [\"Lack of control\", \"Opposition\", \"Lack of direction\", \"Aggression\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Chariot signifies control, willpower, victory, determination, and clear direction. It represents overcoming obstacles through sheer force of will and focused effort.\",\n                love: \"In relationships, The Chariot suggests taking control of your love life, pursuing someone with determination, or overcoming relationship obstacles through willpower.\",\n                career: \"Professionally, it indicates success through determination, taking control of your career path, or achieving victory in competitive situations.\",\n                spiritual: \"Spiritually, The Chariot represents mastering your desires, spiritual willpower, and achieving spiritual goals through disciplined practice.\"\n            },\n            reversed: {\n                general: \"When reversed, The Chariot suggests a lack of control, opposition, or a lack of direction. It can indicate feeling overwhelmed or being pulled in too many directions.\",\n                love: \"Reversed in love, it may suggest relationship conflicts, power struggles, or lack of direction in romantic matters.\",\n                career: \"Career-wise, reversed indicates setbacks, lack of progress, or feeling stuck despite efforts to move forward.\",\n                spiritual: \"Spiritually reversed, it suggests lack of spiritual direction, internal conflicts, or difficulty maintaining spiritual discipline.\"\n            }\n        }\n    },\n    {\n        name: \"Strength\",\n        number: 8,\n        suit: \"Major Arcana\",\n        element: \"Fire\",\n        astrology: \"Leo\",\n        numerology: 8,\n        image: \"img/big/major_08_Strength.jpg\",\n        keywords: {\n            upright: [\"Courage\", \"Compassion\", \"Inner strength\", \"Patience\", \"Control\"],\n            reversed: [\"Weakness\", \"Self-doubt\", \"Lack of confidence\", \"Giving up\"]\n        },\n        meanings: {\n            upright: {\n                general: \"Strength embodies courage, compassion, inner strength, and influence. It represents the power of gentle persuasion and inner fortitude over brute force.\",\n                love: \"In relationships, Strength suggests patience, compassion, and gentle influence. It indicates the strength to work through relationship challenges with love.\",\n                career: \"Professionally, it represents leadership through inspiration rather than force, dealing with difficult people with patience, and inner confidence.\",\n                spiritual: \"Spiritually, Strength represents mastering your lower nature, spiritual courage, and the power of love over fear.\"\n            },\n            reversed: {\n                general: \"Reversed, Strength can indicate weakness, self-doubt, or a lack of self-discipline. It might suggest feeling overwhelmed by challenges or giving in to fears.\",\n                love: \"In love, reversed may indicate lack of confidence in relationships, being too aggressive or passive, or inability to handle relationship challenges.\",\n                career: \"Career-wise, reversed suggests lack of confidence, being overwhelmed by work challenges, or misusing personal power.\",\n                spiritual: \"Spiritually reversed, it indicates lack of spiritual courage, being overwhelmed by negative emotions, or giving up on spiritual growth.\"\n            }\n        }\n    },\n    {\n        name: \"The Hermit\",\n        number: 9,\n        suit: \"Major Arcana\",\n        element: \"Earth\",\n        astrology: \"Virgo\",\n        numerology: 9,\n        image: \"img/big/major_09_Hermit.jpg\",\n        keywords: {\n            upright: [\"Introspection\", \"Solitude\", \"Guidance\", \"Inner wisdom\", \"Soul searching\"],\n            reversed: [\"Isolation\", \"Loneliness\", \"Withdrawal\", \"Avoiding introspection\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Hermit represents introspection, solitude, guidance, and soul-searching. It signifies a period of withdrawal to seek inner wisdom and clarity.\",\n                love: \"In relationships, The Hermit suggests taking time alone to understand what you want in love, or finding a spiritual guide in romantic matters.\",\n                career: \"Professionally, it indicates seeking mentorship, taking time to reflect on career goals, or working independently.\",\n                spiritual: \"Spiritually, The Hermit represents the search for spiritual truth, meditation, and the role of the wise teacher or guide.\"\n            },\n            reversed: {\n                general: \"When reversed, The Hermit suggests isolation, loneliness, or excessive withdrawal. It can indicate feeling disconnected or avoiding necessary introspection.\",\n                love: \"Reversed in love, it may suggest loneliness, fear of intimacy, or avoiding relationship issues through withdrawal.\",\n                career: \"Career-wise, reversed indicates isolation at work, avoiding career development, or refusing helpful guidance.\",\n                spiritual: \"Spiritually reversed, it suggests avoiding inner work, spiritual bypassing, or feeling disconnected from spiritual guidance.\"\n            }\n        }\n    },\n    {\n        name: \"Wheel of Fortune\",\n        number: 10,\n        suit: \"Major Arcana\",\n        element: \"Fire\",\n        astrology: \"Jupiter\",\n        numerology: 10,\n        image: \"img/big/major_10_Wheel_of_Fortune.jpg\",\n        keywords: {\n            upright: [\"Good luck\", \"Destiny\", \"Change\", \"Cycles\", \"Turning point\"],\n            reversed: [\"Bad luck\", \"Resistance to change\", \"Breaking cycles\", \"Setbacks\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Wheel of Fortune signifies good luck, destiny, change, cycles, and turning points. It represents a fated event or shift in circumstances that is beyond your control.\",\n                love: \"In love, it suggests a destined meeting, positive changes in relationships, or the natural cycles of love and connection.\",\n                career: \"Professionally, it indicates lucky breaks, positive career changes, or beneficial cycles in your work life.\",\n                spiritual: \"Spiritually, it represents karmic cycles, spiritual evolution, and trusting in divine timing and destiny.\"\n            },\n            reversed: {\n                general: \"Reversed, The Wheel of Fortune can indicate bad luck, resistance to change, or breaking cycles. It might suggest unexpected setbacks or struggling against natural flow.\",\n                love: \"In relationships, reversed may indicate relationship cycles ending, resistance to changes in love, or unlucky timing in romance.\",\n                career: \"Career-wise, reversed suggests setbacks, missed opportunities, or resistance to necessary changes in professional life.\",\n                spiritual: \"Spiritually reversed, it indicates struggling against karmic lessons, resisting spiritual growth, or feeling unlucky spiritually.\"\n            }\n        }\n    },\n    \n    // Minor Arcana - Wands\n    {\n        name: \"Ace of Wands\",\n        number: 1,\n        suit: \"Wands\",\n        element: \"Fire\",\n        astrology: \"Fire signs (Aries, Leo, Sagittarius)\",\n        numerology: 1,\n        image: \"img/big/wands01.jpg\",\n        keywords: {\n            upright: [\"Inspiration\", \"New opportunities\", \"Growth\", \"Potential\", \"Creative energy\"],\n            reversed: [\"Lack of energy\", \"Delays\", \"Creative blocks\", \"Wasted opportunities\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Ace of Wands represents a burst of inspiration, new opportunities, creative potential, and the spark of creation. It signifies a fresh start in a passionate endeavor.\",\n                love: \"In love, it suggests new romantic beginnings, passion, or a burst of sexual energy in existing relationships.\",\n                career: \"Professionally, it indicates new projects, creative opportunities, or the spark of a brilliant new idea that could lead to success.\",\n                spiritual: \"Spiritually, it represents spiritual awakening, new spiritual practices, or a renewed passion for spiritual growth.\"\n            },\n            reversed: {\n                general: \"Reversed, the Ace of Wands suggests a lack of inspiration, missed opportunities, or delays in creative projects.\",\n                love: \"In relationships, reversed may indicate lack of passion, delayed romantic opportunities, or creative blocks in expressing love.\",\n                career: \"Career-wise, it suggests missed opportunities, lack of motivation, or creative blocks preventing professional growth.\",\n                spiritual: \"Spiritually reversed, it indicates spiritual apathy, delayed spiritual growth, or lack of inspiration in spiritual practice.\"\n            }\n        }\n    },\n    {\n        name: \"Two of Wands\",\n        number: 2,\n        suit: \"Wands\",\n        element: \"Fire\",\n        astrology: \"Mars in Aries\",\n        numerology: 2,\n        image: \"img/big/wands02.jpg\",\n        keywords: {\n            upright: [\"Planning\", \"Future vision\", \"Personal power\", \"Discovery\", \"Planning\"],\n            reversed: [\"Fear of unknown\", \"Lack of planning\", \"Playing it safe\", \"Disorganized thinking\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Two of Wands signifies planning, future vision, progress, and discovery. It represents standing at a crossroads and making strategic plans for expansion.\",\n                love: \"In love, it suggests planning for the future with a partner, long-distance relationships, or considering relationship expansion.\",\n                career: \"Professionally, it indicates strategic planning, expanding your business or career, or considering new opportunities abroad.\",\n                spiritual: \"Spiritually, it represents planning your spiritual journey, exploring new spiritual territories, or expanding spiritual awareness.\"\n            },\n            reversed: {\n                general: \"When reversed, the Two of Wands suggests fear of the unknown, lack of planning, or indecision about future directions.\",\n                love: \"Reversed in love, it may indicate fear of commitment, unwillingness to plan for the future together, or relationship stagnation.\",\n                career: \"Career-wise, reversed suggests poor planning, fear of taking risks, or playing it too safe professionally.\",\n                spiritual: \"Spiritually reversed, it indicates lack of spiritual direction, fear of spiritual exploration, or stagnation in spiritual growth.\"\n            }\n        }\n    },\n    \n    // Minor Arcana - Cups\n    {\n        name: \"Ace of Cups\",\n        number: 1,\n        suit: \"Cups\",\n        element: \"Water\",\n        astrology: \"Water signs (Cancer, Scorpio, Pisces)\",\n        numerology: 1,\n        image: \"img/big/cups01.jpg\",\n        keywords: {\n            upright: [\"New emotions\", \"Intuition\", \"Love\", \"Compassion\", \"Creativity\"],\n            reversed: [\"Blocked emotions\", \"Emptiness\", \"Lack of love\", \"Creative block\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Ace of Cups represents new emotions, intuition, love, compassion, and creative beginnings. It signifies a fresh outpouring of emotional energy.\",\n                love: \"In love, it represents new love, emotional fulfillment, or a deepening of emotional connection in existing relationships.\",\n                career: \"Professionally, it suggests creative inspiration, working with compassion, or new opportunities in caring professions.\",\n                spiritual: \"Spiritually, it represents emotional awakening, divine love, or new intuitive abilities opening up.\"\n            },\n            reversed: {\n                general: \"Reversed, the Ace of Cups suggests blocked emotions, emptiness, or a creative block affecting emotional expression.\",\n                love: \"In relationships, reversed may indicate emotional numbness, unrequited love, or difficulty expressing feelings.\",\n                career: \"Career-wise, it suggests creative blocks, lack of inspiration, or difficulty connecting emotionally with work.\",\n                spiritual: \"Spiritually reversed, it indicates emotional blockages preventing spiritual growth or disconnection from divine love.\"\n            }\n        }\n    },\n    {\n        name: \"Two of Cups\",\n        number: 2,\n        suit: \"Cups\",\n        element: \"Water\",\n        astrology: \"Venus in Cancer\",\n        numerology: 2,\n        image: \"img/big/cups02.jpg\",\n        keywords: {\n            upright: [\"Unity\", \"Partnership\", \"Connection\", \"Mutual attraction\", \"Cooperation\"],\n            reversed: [\"Disharmony\", \"Imbalance\", \"Broken partnership\", \"Self-love issues\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Two of Cups signifies unity, partnership, connection, and mutual attraction. It represents a harmonious bond built on mutual respect and understanding.\",\n                love: \"In love, it's one of the most positive cards, indicating soul mate connections, engagement, or deep mutual love and respect.\",\n                career: \"Professionally, it suggests successful partnerships, teamwork, or finding the perfect business partner or collaborator.\",\n                spiritual: \"Spiritually, it represents spiritual partnerships, finding your spiritual community, or balance between giving and receiving spiritually.\"\n            },\n            reversed: {\n                general: \"When reversed, the Two of Cups suggests discord, imbalance, or a broken partnership affecting harmony.\",\n                love: \"Reversed in love, it indicates relationship problems, breakups, incompatibility, or unrequited love.\",\n                career: \"Career-wise, it suggests partnership problems, workplace conflicts, or difficulties with teamwork and collaboration.\",\n                spiritual: \"Spiritually reversed, it indicates spiritual isolation, difficulty finding spiritual community, or imbalance in spiritual relationships.\"\n            }\n        }\n    },\n    \n    // Minor Arcana - Swords\n    {\n        name: \"Ace of Swords\",\n        number: 1,\n        suit: \"Swords\",\n        element: \"Air\",\n        astrology: \"Air signs (Gemini, Libra, Aquarius)\",\n        numerology: 1,\n        image: \"img/big/swords01.jpg\",\n        keywords: {\n            upright: [\"New ideas\", \"Mental clarity\", \"Breakthrough\", \"Communication\", \"Truth\"],\n            reversed: [\"Confusion\", \"Chaos\", \"Lack of clarity\", \"Misinformation\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Ace of Swords represents new ideas, clarity, a breakthrough, and truth. It signifies a moment of mental clarity or a decisive insight.\",\n                love: \"In love, it suggests clear communication, breakthrough understanding in relationships, or new intellectual connections with partners.\",\n                career: \"Professionally, it indicates new ideas, breakthrough innovations, clear thinking, or success through mental acuity and communication.\",\n                spiritual: \"Spiritually, it represents mental clarity about spiritual matters, breakthrough insights, or truth revelation.\"\n            },\n            reversed: {\n                general: \"Reversed, the Ace of Swords suggests confusion, chaos, or misused mental power leading to poor decisions.\",\n                love: \"In relationships, reversed may indicate miscommunication, mental games, or unclear thinking affecting relationship decisions.\",\n                career: \"Career-wise, it suggests confusion, poor communication, or mental fog affecting professional judgment.\",\n                spiritual: \"Spiritually reversed, it indicates mental confusion about spiritual matters, false insights, or overthinking spiritual concepts.\"\n            }\n        }\n    },\n    {\n        name: \"Two of Swords\",\n        number: 2,\n        suit: \"Swords\",\n        element: \"Air\",\n        astrology: \"Moon in Libra\",\n        numerology: 2,\n        image: \"img/big/swords02.jpg\",\n        keywords: {\n            upright: [\"Indecision\", \"Stalemate\", \"Blocked emotions\", \"Difficult choice\"],\n            reversed: [\"Decision made\", \"Confusion cleared\", \"Information revealed\", \"Emotional release\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Two of Swords signifies indecision, a stalemate, or being at a crossroads where a difficult choice needs to be made.\",\n                love: \"In love, it suggests indecision about a relationship, avoiding difficult conversations, or being torn between two people.\",\n                career: \"Professionally, it indicates difficult career choices, workplace dilemmas, or avoiding necessary business decisions.\",\n                spiritual: \"Spiritually, it represents being torn between different spiritual paths or avoiding difficult spiritual truths.\"\n            },\n            reversed: {\n                general: \"When reversed, the Two of Swords suggests finally making a decision, confusion clearing, or information being revealed.\",\n                love: \"Reversed in love, it indicates making a relationship decision, ending indecision, or communication opening up.\",\n                career: \"Career-wise, reversed suggests breaking through indecision, new information helping career choices, or resolving workplace dilemmas.\",\n                spiritual: \"Spiritually reversed, it indicates spiritual clarity emerging, making spiritual decisions, or releasing spiritual confusion.\"\n            }\n        }\n    },\n    \n    // Minor Arcana - Pentacles\n    {\n        name: \"Ace of Pentacles\",\n        number: 1,\n        suit: \"Pentacles\",\n        element: \"Earth\",\n        astrology: \"Earth signs (Taurus, Virgo, Capricorn)\",\n        numerology: 1,\n        image: \"img/big/pents01.jpg\",\n        keywords: {\n            upright: [\"New opportunities\", \"Manifestation\", \"Financial opportunity\", \"Material gain\", \"Prosperity\"],\n            reversed: [\"Missed opportunity\", \"Financial loss\", \"Poor planning\", \"Greed\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Ace of Pentacles represents new financial opportunities, security, and manifestation of material goals. It signifies a fresh start in material matters.\",\n                love: \"In love, it may suggest a relationship that offers security and stability, or the manifestation of a desired romantic situation.\",\n                career: \"Professionally, it indicates new job opportunities, financial gains, business ventures, or the manifestation of career goals.\",\n                spiritual: \"Spiritually, it represents grounding spiritual energy into material reality and finding abundance through spiritual practice.\"\n            },\n            reversed: {\n                general: \"Reversed, the Ace of Pentacles suggests missed opportunities, financial insecurity, or poor material planning.\",\n                love: \"In relationships, reversed may indicate financial stress affecting love, or relationships lacking stability and security.\",\n                career: \"Career-wise, it suggests missed opportunities, financial setbacks, or poor planning affecting professional success.\",\n                spiritual: \"Spiritually reversed, it indicates difficulty manifesting spiritual goals in material reality or spiritual materialism.\"\n            }\n        }\n    },\n    {\n        name: \"Two of Pentacles\",\n        number: 2,\n        suit: \"Pentacles\",\n        element: \"Earth\",\n        astrology: \"Jupiter in Capricorn\",\n        numerology: 2,\n        image: \"img/big/pents02.jpg\",\n        keywords: {\n            upright: [\"Balance\", \"Adaptability\", \"Time management\", \"Flexibility\", \"Juggling priorities\"],\n            reversed: [\"Imbalance\", \"Overwhelmed\", \"Financial stress\", \"Poor time management\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Two of Pentacles signifies balance, adaptability, juggling responsibilities, and maintaining equilibrium amidst life's demands.\",\n                love: \"In love, it suggests balancing relationship needs with other life responsibilities, or adapting to changes in romantic situations.\",\n                career: \"Professionally, it indicates managing multiple projects, work-life balance, or adapting to changing workplace demands.\",\n                spiritual: \"Spiritually, it represents balancing spiritual practice with material responsibilities and adapting spiritual beliefs to life changes.\"\n            },\n            reversed: {\n                general: \"When reversed, the Two of Pentacles suggests imbalance, being overwhelmed, or struggling to manage multiple responsibilities.\",\n                love: \"Reversed in love, it may indicate relationship imbalance, neglecting romantic needs due to other priorities, or relationship instability.\",\n                career: \"Career-wise, it suggests being overwhelmed at work, poor work-life balance, or inability to manage professional responsibilities.\",\n                spiritual: \"Spiritually reversed, it indicates imbalance between spiritual and material life, or being overwhelmed by spiritual responsibilities.\"\n            }\n        }\n    }\n];","file":"/mnt/c/dev/tarot/tarot-data.js","startLine":179,"endLine":524,"lines":346,"code":"important decisions that align with your core values.\",\n                love: \"In love, The Lovers represents deep romantic connection, soul mates, or a significant relationship choice. It suggests harmony, mutual attraction, and spiritual connection.\",\n                career: \"Professionally, it may indicate partnership in business, working with someone you're compatible with, or making career choices based on personal values.\",\n                spiritual: \"Spiritually, The Lovers represents the union of opposites, divine love, and making choices that align with your higher self.\"\n            },\n            reversed: {\n                general: \"Reversed, The Lovers can indicate disharmony, imbalance, or a misalignment of values within relationships. It might suggest a difficult choice or conflict.\",\n                love: \"In relationships, reversed suggests relationship problems, incompatibility, infidelity, or a difficult choice between two lovers.\",\n                career: \"Career-wise, it may indicate workplace conflicts, poor partnerships, or making career choices that conflict with personal values.\",\n                spiritual: \"Spiritually reversed, it suggests internal conflict, misaligned choices, or difficulty integrating different aspects of yourself.\"\n            }\n        }\n    },\n    {\n        name: \"The Chariot\",\n        number: 7,\n        suit: \"Major Arcana\",\n        element: \"Water\",\n        astrology: \"Cancer\",\n        numerology: 7,\n        image: \"img/big/major_07_Chariot.jpg\",\n        keywords: {\n            upright: [\"Control\", \"Willpower\", \"Victory\", \"Determination\", \"Direction\"],\n            reversed: [\"Lack of control\", \"Opposition\", \"Lack of direction\", \"Aggression\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Chariot signifies control, willpower, victory, determination, and clear direction. It represents overcoming obstacles through sheer force of will and focused effort.\",\n                love: \"In relationships, The Chariot suggests taking control of your love life, pursuing someone with determination, or overcoming relationship obstacles through willpower.\",\n                career: \"Professionally, it indicates success through determination, taking control of your career path, or achieving victory in competitive situations.\",\n                spiritual: \"Spiritually, The Chariot represents mastering your desires, spiritual willpower, and achieving spiritual goals through disciplined practice.\"\n            },\n            reversed: {\n                general: \"When reversed, The Chariot suggests a lack of control, opposition, or a lack of direction. It can indicate feeling overwhelmed or being pulled in too many directions.\",\n                love: \"Reversed in love, it may suggest relationship conflicts, power struggles, or lack of direction in romantic matters.\",\n                career: \"Career-wise, reversed indicates setbacks, lack of progress, or feeling stuck despite efforts to move forward.\",\n                spiritual: \"Spiritually reversed, it suggests lack of spiritual direction, internal conflicts, or difficulty maintaining spiritual discipline.\"\n            }\n        }\n    },\n    {\n        name: \"Strength\",\n        number: 8,\n        suit: \"Major Arcana\",\n        element: \"Fire\",\n        astrology: \"Leo\",\n        numerology: 8,\n        image: \"img/big/major_08_Strength.jpg\",\n        keywords: {\n            upright: [\"Courage\", \"Compassion\", \"Inner strength\", \"Patience\", \"Control\"],\n            reversed: [\"Weakness\", \"Self-doubt\", \"Lack of confidence\", \"Giving up\"]\n        },\n        meanings: {\n            upright: {\n                general: \"Strength embodies courage, compassion, inner strength, and influence. It represents the power of gentle persuasion and inner fortitude over brute force.\",\n                love: \"In relationships, Strength suggests patience, compassion, and gentle influence. It indicates the strength to work through relationship challenges with love.\",\n                career: \"Professionally, it represents leadership through inspiration rather than force, dealing with difficult people with patience, and inner confidence.\",\n                spiritual: \"Spiritually, Strength represents mastering your lower nature, spiritual courage, and the power of love over fear.\"\n            },\n            reversed: {\n                general: \"Reversed, Strength can indicate weakness, self-doubt, or a lack of self-discipline. It might suggest feeling overwhelmed by challenges or giving in to fears.\",\n                love: \"In love, reversed may indicate lack of confidence in relationships, being too aggressive or passive, or inability to handle relationship challenges.\",\n                career: \"Career-wise, reversed suggests lack of confidence, being overwhelmed by work challenges, or misusing personal power.\",\n                spiritual: \"Spiritually reversed, it indicates lack of spiritual courage, being overwhelmed by negative emotions, or giving up on spiritual growth.\"\n            }\n        }\n    },\n    {\n        name: \"The Hermit\",\n        number: 9,\n        suit: \"Major Arcana\",\n        element: \"Earth\",\n        astrology: \"Virgo\",\n        numerology: 9,\n        image: \"img/big/major_09_Hermit.jpg\",\n        keywords: {\n            upright: [\"Introspection\", \"Solitude\", \"Guidance\", \"Inner wisdom\", \"Soul searching\"],\n            reversed: [\"Isolation\", \"Loneliness\", \"Withdrawal\", \"Avoiding introspection\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Hermit represents introspection, solitude, guidance, and soul-searching. It signifies a period of withdrawal to seek inner wisdom and clarity.\",\n                love: \"In relationships, The Hermit suggests taking time alone to understand what you want in love, or finding a spiritual guide in romantic matters.\",\n                career: \"Professionally, it indicates seeking mentorship, taking time to reflect on career goals, or working independently.\",\n                spiritual: \"Spiritually, The Hermit represents the search for spiritual truth, meditation, and the role of the wise teacher or guide.\"\n            },\n            reversed: {\n                general: \"When reversed, The Hermit suggests isolation, loneliness, or excessive withdrawal. It can indicate feeling disconnected or avoiding necessary introspection.\",\n                love: \"Reversed in love, it may suggest loneliness, fear of intimacy, or avoiding relationship issues through withdrawal.\",\n                career: \"Career-wise, reversed indicates isolation at work, avoiding career development, or refusing helpful guidance.\",\n                spiritual: \"Spiritually reversed, it suggests avoiding inner work, spiritual bypassing, or feeling disconnected from spiritual guidance.\"\n            }\n        }\n    },\n    {\n        name: \"Wheel of Fortune\",\n        number: 10,\n        suit: \"Major Arcana\",\n        element: \"Fire\",\n        astrology: \"Jupiter\",\n        numerology: 10,\n        image: \"img/big/major_10_Wheel_of_Fortune.jpg\",\n        keywords: {\n            upright: [\"Good luck\", \"Destiny\", \"Change\", \"Cycles\", \"Turning point\"],\n            reversed: [\"Bad luck\", \"Resistance to change\", \"Breaking cycles\", \"Setbacks\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Wheel of Fortune signifies good luck, destiny, change, cycles, and turning points. It represents a fated event or shift in circumstances that is beyond your control.\",\n                love: \"In love, it suggests a destined meeting, positive changes in relationships, or the natural cycles of love and connection.\",\n                career: \"Professionally, it indicates lucky breaks, positive career changes, or beneficial cycles in your work life.\",\n                spiritual: \"Spiritually, it represents karmic cycles, spiritual evolution, and trusting in divine timing and destiny.\"\n            },\n            reversed: {\n                general: \"Reversed, The Wheel of Fortune can indicate bad luck, resistance to change, or breaking cycles. It might suggest unexpected setbacks or struggling against natural flow.\",\n                love: \"In relationships, reversed may indicate relationship cycles ending, resistance to changes in love, or unlucky timing in romance.\",\n                career: \"Career-wise, reversed suggests setbacks, missed opportunities, or resistance to necessary changes in professional life.\",\n                spiritual: \"Spiritually reversed, it indicates struggling against karmic lessons, resisting spiritual growth, or feeling unlucky spiritually.\"\n            }\n        }\n    },\n    \n    // Minor Arcana - Wands\n    {\n        name: \"Ace of Wands\",\n        number: 1,\n        suit: \"Wands\",\n        element: \"Fire\",\n        astrology: \"Fire signs (Aries, Leo, Sagittarius)\",\n        numerology: 1,\n        image: \"img/big/wands01.jpg\",\n        keywords: {\n            upright: [\"Inspiration\", \"New opportunities\", \"Growth\", \"Potential\", \"Creative energy\"],\n            reversed: [\"Lack of energy\", \"Delays\", \"Creative blocks\", \"Wasted opportunities\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Ace of Wands represents a burst of inspiration, new opportunities, creative potential, and the spark of creation. It signifies a fresh start in a passionate endeavor.\",\n                love: \"In love, it suggests new romantic beginnings, passion, or a burst of sexual energy in existing relationships.\",\n                career: \"Professionally, it indicates new projects, creative opportunities, or the spark of a brilliant new idea that could lead to success.\",\n                spiritual: \"Spiritually, it represents spiritual awakening, new spiritual practices, or a renewed passion for spiritual growth.\"\n            },\n            reversed: {\n                general: \"Reversed, the Ace of Wands suggests a lack of inspiration, missed opportunities, or delays in creative projects.\",\n                love: \"In relationships, reversed may indicate lack of passion, delayed romantic opportunities, or creative blocks in expressing love.\",\n                career: \"Career-wise, it suggests missed opportunities, lack of motivation, or creative blocks preventing professional growth.\",\n                spiritual: \"Spiritually reversed, it indicates spiritual apathy, delayed spiritual growth, or lack of inspiration in spiritual practice.\"\n            }\n        }\n    },\n    {\n        name: \"Two of Wands\",\n        number: 2,\n        suit: \"Wands\",\n        element: \"Fire\",\n        astrology: \"Mars in Aries\",\n        numerology: 2,\n        image: \"img/big/wands02.jpg\",\n        keywords: {\n            upright: [\"Planning\", \"Future vision\", \"Personal power\", \"Discovery\", \"Planning\"],\n            reversed: [\"Fear of unknown\", \"Lack of planning\", \"Playing it safe\", \"Disorganized thinking\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Two of Wands signifies planning, future vision, progress, and discovery. It represents standing at a crossroads and making strategic plans for expansion.\",\n                love: \"In love, it suggests planning for the future with a partner, long-distance relationships, or considering relationship expansion.\",\n                career: \"Professionally, it indicates strategic planning, expanding your business or career, or considering new opportunities abroad.\",\n                spiritual: \"Spiritually, it represents planning your spiritual journey, exploring new spiritual territories, or expanding spiritual awareness.\"\n            },\n            reversed: {\n                general: \"When reversed, the Two of Wands suggests fear of the unknown, lack of planning, or indecision about future directions.\",\n                love: \"Reversed in love, it may indicate fear of commitment, unwillingness to plan for the future together, or relationship stagnation.\",\n                career: \"Career-wise, reversed suggests poor planning, fear of taking risks, or playing it too safe professionally.\",\n                spiritual: \"Spiritually reversed, it indicates lack of spiritual direction, fear of spiritual exploration, or stagnation in spiritual growth.\"\n            }\n        }\n    },\n    \n    // Minor Arcana - Cups\n    {\n        name: \"Ace of Cups\",\n        number: 1,\n        suit: \"Cups\",\n        element: \"Water\",\n        astrology: \"Water signs (Cancer, Scorpio, Pisces)\",\n        numerology: 1,\n        image: \"img/big/cups01.jpg\",\n        keywords: {\n            upright: [\"New emotions\", \"Intuition\", \"Love\", \"Compassion\", \"Creativity\"],\n            reversed: [\"Blocked emotions\", \"Emptiness\", \"Lack of love\", \"Creative block\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Ace of Cups represents new emotions, intuition, love, compassion, and creative beginnings. It signifies a fresh outpouring of emotional energy.\",\n                love: \"In love, it represents new love, emotional fulfillment, or a deepening of emotional connection in existing relationships.\",\n                career: \"Professionally, it suggests creative inspiration, working with compassion, or new opportunities in caring professions.\",\n                spiritual: \"Spiritually, it represents emotional awakening, divine love, or new intuitive abilities opening up.\"\n            },\n            reversed: {\n                general: \"Reversed, the Ace of Cups suggests blocked emotions, emptiness, or a creative block affecting emotional expression.\",\n                love: \"In relationships, reversed may indicate emotional numbness, unrequited love, or difficulty expressing feelings.\",\n                career: \"Career-wise, it suggests creative blocks, lack of inspiration, or difficulty connecting emotionally with work.\",\n                spiritual: \"Spiritually reversed, it indicates emotional blockages preventing spiritual growth or disconnection from divine love.\"\n            }\n        }\n    },\n    {\n        name: \"Two of Cups\",\n        number: 2,\n        suit: \"Cups\",\n        element: \"Water\",\n        astrology: \"Venus in Cancer\",\n        numerology: 2,\n        image: \"img/big/cups02.jpg\",\n        keywords: {\n            upright: [\"Unity\", \"Partnership\", \"Connection\", \"Mutual attraction\", \"Cooperation\"],\n            reversed: [\"Disharmony\", \"Imbalance\", \"Broken partnership\", \"Self-love issues\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Two of Cups signifies unity, partnership, connection, and mutual attraction. It represents a harmonious bond built on mutual respect and understanding.\",\n                love: \"In love, it's one of the most positive cards, indicating soul mate connections, engagement, or deep mutual love and respect.\",\n                career: \"Professionally, it suggests successful partnerships, teamwork, or finding the perfect business partner or collaborator.\",\n                spiritual: \"Spiritually, it represents spiritual partnerships, finding your spiritual community, or balance between giving and receiving spiritually.\"\n            },\n            reversed: {\n                general: \"When reversed, the Two of Cups suggests discord, imbalance, or a broken partnership affecting harmony.\",\n                love: \"Reversed in love, it indicates relationship problems, breakups, incompatibility, or unrequited love.\",\n                career: \"Career-wise, it suggests partnership problems, workplace conflicts, or difficulties with teamwork and collaboration.\",\n                spiritual: \"Spiritually reversed, it indicates spiritual isolation, difficulty finding spiritual community, or imbalance in spiritual relationships.\"\n            }\n        }\n    },\n    \n    // Minor Arcana - Swords\n    {\n        name: \"Ace of Swords\",\n        number: 1,\n        suit: \"Swords\",\n        element: \"Air\",\n        astrology: \"Air signs (Gemini, Libra, Aquarius)\",\n        numerology: 1,\n        image: \"img/big/swords01.jpg\",\n        keywords: {\n            upright: [\"New ideas\", \"Mental clarity\", \"Breakthrough\", \"Communication\", \"Truth\"],\n            reversed: [\"Confusion\", \"Chaos\", \"Lack of clarity\", \"Misinformation\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Ace of Swords represents new ideas, clarity, a breakthrough, and truth. It signifies a moment of mental clarity or a decisive insight.\",\n                love: \"In love, it suggests clear communication, breakthrough understanding in relationships, or new intellectual connections with partners.\",\n                career: \"Professionally, it indicates new ideas, breakthrough innovations, clear thinking, or success through mental acuity and communication.\",\n                spiritual: \"Spiritually, it represents mental clarity about spiritual matters, breakthrough insights, or truth revelation.\"\n            },\n            reversed: {\n                general: \"Reversed, the Ace of Swords suggests confusion, chaos, or misused mental power leading to poor decisions.\",\n                love: \"In relationships, reversed may indicate miscommunication, mental games, or unclear thinking affecting relationship decisions.\",\n                career: \"Career-wise, it suggests confusion, poor communication, or mental fog affecting professional judgment.\",\n                spiritual: \"Spiritually reversed, it indicates mental confusion about spiritual matters, false insights, or overthinking spiritual concepts.\"\n            }\n        }\n    },\n    {\n        name: \"Two of Swords\",\n        number: 2,\n        suit: \"Swords\",\n        element: \"Air\",\n        astrology: \"Moon in Libra\",\n        numerology: 2,\n        image: \"img/big/swords02.jpg\",\n        keywords: {\n            upright: [\"Indecision\", \"Stalemate\", \"Blocked emotions\", \"Difficult choice\"],\n            reversed: [\"Decision made\", \"Confusion cleared\", \"Information revealed\", \"Emotional release\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Two of Swords signifies indecision, a stalemate, or being at a crossroads where a difficult choice needs to be made.\",\n                love: \"In love, it suggests indecision about a relationship, avoiding difficult conversations, or being torn between two people.\",\n                career: \"Professionally, it indicates difficult career choices, workplace dilemmas, or avoiding necessary business decisions.\",\n                spiritual: \"Spiritually, it represents being torn between different spiritual paths or avoiding difficult spiritual truths.\"\n            },\n            reversed: {\n                general: \"When reversed, the Two of Swords suggests finally making a decision, confusion clearing, or information being revealed.\",\n                love: \"Reversed in love, it indicates making a relationship decision, ending indecision, or communication opening up.\",\n                career: \"Career-wise, reversed suggests breaking through indecision, new information helping career choices, or resolving workplace dilemmas.\",\n                spiritual: \"Spiritually reversed, it indicates spiritual clarity emerging, making spiritual decisions, or releasing spiritual confusion.\"\n            }\n        }\n    },\n    \n    // Minor Arcana - Pentacles\n    {\n        name: \"Ace of Pentacles\",\n        number: 1,\n        suit: \"Pentacles\",\n        element: \"Earth\",\n        astrology: \"Earth signs (Taurus, Virgo, Capricorn)\",\n        numerology: 1,\n        image: \"img/big/pents01.jpg\",\n        keywords: {\n            upright: [\"New opportunities\", \"Manifestation\", \"Financial opportunity\", \"Material gain\", \"Prosperity\"],\n            reversed: [\"Missed opportunity\", \"Financial loss\", \"Poor planning\", \"Greed\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Ace of Pentacles represents new financial opportunities, security, and manifestation of material goals. It signifies a fresh start in material matters.\",\n                love: \"In love, it may suggest a relationship that offers security and stability, or the manifestation of a desired romantic situation.\",\n                career: \"Professionally, it indicates new job opportunities, financial gains, business ventures, or the manifestation of career goals.\",\n                spiritual: \"Spiritually, it represents grounding spiritual energy into material reality and finding abundance through spiritual practice.\"\n            },\n            reversed: {\n                general: \"Reversed, the Ace of Pentacles suggests missed opportunities, financial insecurity, or poor material planning.\",\n                love: \"In relationships, reversed may indicate financial stress affecting love, or relationships lacking stability and security.\",\n                career: \"Career-wise, it suggests missed opportunities, financial setbacks, or poor planning affecting professional success.\",\n                spiritual: \"Spiritually reversed, it indicates difficulty manifesting spiritual goals in material reality or spiritual materialism.\"\n            }\n        }\n    },\n    {\n        name: \"Two of Pentacles\",\n        number: 2,\n        suit: \"Pentacles\",\n        element: \"Earth\",\n        astrology: \"Jupiter in Capricorn\",\n        numerology: 2,\n        image: \"img/big/pents02.jpg\",\n        keywords: {\n            upright: [\"Balance\", \"Adaptability\", \"Time management\", \"Flexibility\", \"Juggling priorities\"],\n            reversed: [\"Imbalance\", \"Overwhelmed\", \"Financial stress\", \"Poor time management\"]\n        },\n        meanings: {\n            upright: {\n                general: \"The Two of Pentacles signifies balance, adaptability, juggling responsibilities, and maintaining equilibrium amidst life's demands.\",\n                love: \"In love, it suggests balancing relationship needs with other life responsibilities, or adapting to changes in romantic situations.\",\n                career: \"Professionally, it indicates managing multiple projects, work-life balance, or adapting to changing workplace demands.\",\n                spiritual: \"Spiritually, it represents balancing spiritual practice with material responsibilities and adapting spiritual beliefs to life changes.\"\n            },\n            reversed: {\n                general: \"When reversed, the Two of Pentacles suggests imbalance, being overwhelmed, or struggling to manage multiple responsibilities.\",\n                love: \"Reversed in love, it may indicate relationship imbalance, neglecting romantic needs due to other priorities, or relationship instability.\",\n                career: \"Career-wise, it suggests being overwhelmed at work, poor work-life balance, or inability to manage professional responsibilities.\",\n                spiritual: \"Spiritually reversed, it indicates imbalance between spiritual and material life, or being overwhelmed by spiritual responsibilities.\"\n            }\n        }\n    }\n];","mtime":1752835111332.057,"doc":"","modulePath":"","elements":["general: \"Reversed","The Lovers can indicate disharmony","imbalance","or a misalignment of values within relationships. It might suggest a difficult choice or conflict.\"","love: \"In relationships","reversed suggests relationship problems","incompatibility","infidelity","or a difficult choice between two lovers.\"","career: \"Career-wise","it may indicate workplace conflicts","poor partnerships","or making career choices that conflict with personal values.\"","spiritual: \"Spiritually reversed","it suggests internal conflict","misaligned choices","or difficulty integrating different aspects of yourself.\""],"relationships":{"dependsOn":"","imports":["general: \"Reversed","The Lovers can indicate disharmony","imbalance","or a misalignment of values within relationships. It might suggest a difficult choice or conflict.\"","love: \"In relationships","reversed suggests relationship problems","incompatibility","infidelity","or a difficult choice between two lovers.\"","career: \"Career-wise","it may indicate workplace conflicts","poor partnerships","or making career choices that conflict with personal values.\"","spiritual: \"Spiritually reversed","it suggests internal conflict","misaligned choices","or difficulty integrating different aspects of yourself.\""]},"embedding":[-0.05576483905315399,0.012652347795665264,0.016299638897180557,0.0029735187999904156,-0.004278705921024084,0.020220095291733742,0.039048146456480026,0.047170184552669525,0.08590281754732132,0.04319445416331291,-0.022416338324546814,0.005204999353736639,-0.023698505014181137,-0.021597709506750107,0.08474225550889969,0.039468906819820404,-0.02427487075328827,-0.015390164218842983,-0.10927144438028336,0.04567044600844383,-0.057891517877578735,-0.09197752922773361,-0.044137656688690186,-0.0023314212448894978,-0.04066109657287598,0.04332081973552704,0.02676161751151085,0.020833002403378487,-0.03587910905480385,0.01994466409087181,0.01271691545844078,0.10145370662212372,0.14481152594089508,0.041614022105932236,-0.079229436814785,0.09617211669683456,-0.07264016568660736,-0.03757714852690697,0.046531565487384796,-0.055505674332380295,-0.030424093827605247,-0.057059962302446365,0.053656723350286484,0.029628219082951546,-0.02692776545882225,-0.04104239121079445,-0.0015569509705528617,-0.030107419937849045,-0.02898828126490116,0.002997684758156538,-0.11009646207094193,-0.001997081795707345,-0.09133831411600113,-0.012163622304797173,0.03993998467922211,0.04570147022604942,0.00765654630959034,-0.07644826918840408,0.05239494517445564,-0.019692163914442062,0.09747637063264847,0.08480780571699142,0.02409549057483673,0.07103634625673294,-0.031821783632040024,-0.0555817186832428,0.02786562591791153,0.055964790284633636,-0.08922354876995087,0.04717615619301796,0.014093817211687565,0.03153414651751518,0.0006589252734556794,-0.006307951640337706,-0.004653402138501406,-0.0026428522542119026,0.0032278168946504593,-0.07718875259160995,0.045599546283483505,-0.05347966030240059,-0.0975489541888237,0.02043241634964943,-0.05980502441525459,0.010102799162268639,0.025389203801751137,0.027670353651046753,-0.0019359051948413253,-0.06512731313705444,-0.028271812945604324,-0.006000368855893612,-0.05756286159157753,-0.09753818064928055,-0.012747718952596188,-0.03043745644390583,-0.042015910148620605,0.03830265626311302,-0.03897237777709961,-0.03652464970946312,-0.0403171069920063,0.011488178744912148,-0.032603919506073,0.04445118084549904,-0.08148690313100815,0.03638291358947754,-0.04690156131982803,-0.05247944965958595,-0.04492271691560745,0.011656480841338634,0.02273399941623211,-0.03268875926733017,-0.025333423167467117,-0.07082302868366241,0.04693502560257912,0.009021257981657982,0.0724685862660408,0.046189501881599426,0.04537919536232948,0.0027086264453828335,0.1559159755706787,0.10598050057888031,-0.04420244321227074,-0.0002642583567649126,-0.034176990389823914,-0.07589679956436157,-0.10315567255020142,-0.09157120436429977,0.021487994119524956,-2.4270742265404784e-33,-0.06314513087272644,-0.05611404404044151,0.036799702793359756,0.0285195279866457,-0.07981938123703003,-0.06667646020650864,-0.02134013921022415,-0.03706875443458557,-0.08459101617336273,0.06768311560153961,-0.0334245041012764,0.08151953667402267,0.04776845872402191,0.07544321566820145,-0.0077146198600530624,-0.015117409639060497,-0.042183391749858856,-0.032045844942331314,-0.09351146966218948,-0.000030787927244091406,-0.03097030706703663,0.025803430005908012,-0.033827610313892365,-0.03958648070693016,-0.08127189427614212,-0.04270036518573761,-0.029263021424412727,0.04343809187412262,-0.022943753749132156,0.00030427833553403616,-0.04471965506672859,0.03606673330068588,0.010264694690704346,-0.031602490693330765,0.005831248592585325,0.0367935411632061,-0.10072419047355652,-0.054785359650850296,-0.004580250009894371,0.037031933665275574,-0.06617061793804169,-0.0029238464776426554,-0.11868032068014145,0.08569549769163132,0.045881036669015884,0.12784740328788757,-0.04002324491739273,0.017269782721996307,0.017402788624167442,-0.05960191786289215,-0.026866180822253227,0.0019704969599843025,0.020472362637519836,-0.00008737405732972547,-0.1011345162987709,0.09307578206062317,0.0832887664437294,0.02306462824344635,-0.024724647402763367,-0.006247428711503744,-0.0045969365164637566,-0.10357431322336197,0.028236346319317818,-0.050998836755752563,0.05072992667555809,0.011570324189960957,0.0026698727160692215,-0.038637805730104446,0.02513262629508972,0.02620561793446541,-0.05509539321064949,0.09028224647045135,-0.016729839146137238,0.03947587311267853,-0.004358053207397461,0.0017667977372184396,0.0718633309006691,-0.03813141584396362,0.041940830647945404,-0.0033025704324245453,-0.07498320192098618,0.02224399521946907,0.04621497914195061,0.01841769553720951,-0.03484321013092995,-0.04672413691878319,0.056406039744615555,-0.05736401304602623,-0.05174044519662857,0.09098535031080246,-0.06037666276097298,0.051868095993995667,0.009088982827961445,-0.07390065491199493,0.003403465263545513,7.328989742045438e-35,0.002583486959338188,0.0054013472981750965,0.022883011028170586,0.0811343565583229,0.07129913568496704,0.002693791640922427,-0.01462668925523758,-0.09379793703556061,0.07926959544420242,0.0768590196967125,0.008318332955241203,-0.06565035134553909,0.03270985558629036,-0.015822427347302437,0.03440620005130768,-0.04176763445138931,-0.0681389570236206,-0.051018282771110535,0.05588803067803383,0.09180878102779388,0.06218526139855385,0.027343329042196274,-0.0959261953830719,0.04733701050281525,-0.05073525756597519,0.016474837437272072,-0.0009230315336026251,-0.046720825135707855,0.017553921788930893,-0.05723969638347626,0.03285246342420578,-0.013336127623915672,-0.07423508167266846,-0.0312516950070858,0.012618052773177624,-0.012227700091898441,0.057026974856853485,-0.050804343074560165,-0.04136171564459801,0.047547098249197006,-0.032372042536735535,0.03665776923298836,-0.048255905508995056,0.04125889390707016,-0.0018793662311509252,-0.01563294231891632,0.04412289336323738,-0.006304309703409672,-0.043394785374403,0.030172962695360184,0.03272728621959686,0.0027012068312615156,-0.09542563557624817,-0.016624227166175842,0.024820782244205475,-0.007854757830500603,0.0605972521007061,0.04011654853820801,0.03006123937666416,0.04901827499270439,-0.008387408219277859,0.03554675728082657,0.08568136394023895,0.07212531566619873,-0.017539607360959053,0.05186072364449501,0.026760509237647057,0.026594020426273346,-0.02467780001461506,-0.023560475558042526,-0.061783257871866226,-0.06932798773050308,-0.025528717786073685,0.029126513749361038,0.04172205179929733,-0.11425649374723434,-0.07082345336675644,-0.08234750479459763,0.06263235956430435,0.02751208283007145,0.026144886389374733,0.025028670206665993,-0.010342931374907494,0.09386412799358368,-0.03480022773146629,0.011142184026539326,-0.04219791293144226,0.03387964889407158,-0.041897743940353394,-0.08118032664060593,-0.051653724163770676,0.03197935223579407,0.00465061329305172,-0.06747475266456604,-0.043912578374147415,-3.8039878802464955e-8,-0.054300688207149506,-0.05324678122997284,-0.05457692593336105,-0.024491406977176666,-0.05974460020661354,-0.02514597214758396,-0.004457968752831221,-0.07964309304952621,0.01949281059205532,0.09088556468486786,-0.0031368061900138855,0.05070573464035988,-0.05023171752691269,-0.02527504600584507,0.04932546243071556,-0.01970747858285904,0.06708250194787979,0.0016078270273283124,-0.007276764139533043,0.012733223848044872,0.05425487086176872,0.05275392159819603,-0.011843548156321049,-0.029352009296417236,0.02194942906498909,0.06685297191143036,-0.019911859184503555,0.0378749817609787,-0.027333274483680725,0.04051776975393295,0.06948462128639221,0.030193733051419258,0.10858090966939926,-0.018148303031921387,0.04872822016477585,0.07079538702964783,-0.03640167787671089,-0.017935851588845253,0.048514872789382935,0.04842616990208626,0.09287447482347488,0.041947558522224426,-0.055208463221788406,0.01049022562801838,-0.031604863703250885,0.018895665183663368,0.09091868996620178,0.02848200686275959,-0.05849846825003624,-0.020048657432198524,-0.06310096383094788,0.027614811435341835,-0.031029770150780678,0.0028773981612175703,-0.0005939227412454784,-0.05585523694753647,-0.013250523246824741,-0.004414769355207682,0.0925612673163414,-0.06783881783485413,0.074452705681324,0.05605831742286682,0.02809925563633442,-0.025540748611092567]},{"id":"aW1wb3J0LTM4NTYy","type":"import","qualifiedName":"important now.\"\n};","file":"/mnt/c/dev/tarot/tarot-data.js","startLine":570,"endLine":571,"lines":2,"code":"important now.\"\n};","mtime":1752835111332.057,"doc":"","modulePath":"","elements":[],"relationships":{"dependsOn":"","imports":[]},"embedding":[-0.019776033237576485,0.055893659591674805,-0.03959571570158005,-0.01729971542954445,0.03999398276209831,0.047741133719682693,0.0985061526298523,0.026620151475071907,-0.0863611176609993,0.008930080570280552,0.04089831933379173,0.06119940057396889,-0.04129477217793465,-0.01607372798025608,0.06613492965698242,0.0457601472735405,0.027108652517199516,-0.003305337391793728,-0.15256308019161224,-0.058522049337625504,0.015209720470011234,-0.03239964321255684,-0.027766762301325798,0.027944277971982956,0.056064754724502563,0.03469372168183327,-0.03502360358834267,0.0008779564523138106,0.06555329263210297,-0.012070855125784874,-0.05499042570590973,0.07954723387956619,0.06787180155515671,0.0320834144949913,-0.003888198873028159,0.09464655816555023,-0.02545318379998207,-0.06224268674850464,0.03541211038827896,-0.03251413628458977,-0.05653480067849159,-0.04705023020505905,-0.045704517513513565,0.018597111105918884,0.02383006177842617,-0.07178784906864166,0.00300509762018919,-0.014983078464865685,0.04843567684292793,-0.04275044798851013,-0.06059037894010544,-0.06213093176484108,-0.06483782827854156,-0.06717783957719803,0.04544144496321678,0.04507084935903549,0.07938449084758759,-0.05706145241856575,0.008145513013005257,-0.042653411626815796,0.015851657837629318,0.039171990007162094,0.034657496958971024,0.10121062397956848,-0.014682474546134472,-0.012302222661674023,-0.01064774114638567,-0.00798739306628704,-0.07143725454807281,0.09539934247732162,-0.03521523252129555,0.0028610308654606342,0.02781369350850582,-0.0033461516723036766,0.018319621682167053,-0.04844316095113754,-0.01062782946974039,0.020530929788947105,0.0821719616651535,-0.061737507581710815,-0.00774485245347023,-0.048026036471128464,-0.04216521605849266,0.039035771042108536,0.048349976539611816,0.06864093244075775,0.0296627189964056,-0.026371968910098076,0.03100273199379444,0.0016327733173966408,-0.03998546674847603,-0.07587600499391556,0.08898386359214783,0.03764389082789421,-0.00023446694831363857,-0.04757160320878029,-0.071653351187706,-0.06981263309717178,-0.05767153203487396,0.016901900991797447,-0.04105125740170479,0.04679920896887779,-0.008767971768975258,-0.018172767013311386,0.02972365729510784,-0.03422689810395241,0.03965960815548897,0.04753248021006584,0.05318300426006317,0.007134683895856142,-0.04632239416241646,0.0005185107584111392,-0.028178764507174492,-0.08068819344043732,-0.0004698614066001028,0.10006863623857498,-0.020868124440312386,0.013419757597148418,0.07478613406419754,0.10681232064962387,0.03015454299747944,0.051438719034194946,-0.08649685233831406,-0.0774279236793518,-0.03103058412671089,-0.04514707997441292,0.08906065672636032,-6.562096561761631e-33,0.01795697584748268,-0.003776115830987692,-0.03870787099003792,0.07257009297609329,-0.013969470746815205,-0.04554643854498863,0.014050263911485672,0.0037762471474707127,-0.10261441022157669,-0.010547826066613197,0.04324156790971756,-0.04907532408833504,0.016283804550766945,0.04257870092988014,-0.07715731859207153,-0.0027723456732928753,-0.01951621100306511,-0.046828676015138626,0.01553478091955185,-0.01026249397546053,-0.023122411221265793,-0.008574075065553188,0.00502728670835495,-0.022717773914337158,0.03449144586920738,0.04038058593869209,0.05765051394701004,-0.013441917486488819,-0.036761071532964706,0.04234052821993828,0.000591575400903821,-0.052735406905412674,-0.004199720919132233,-0.0071488358080387115,0.020439572632312775,0.08581079542636871,-0.06263072043657303,-0.10837500542402267,0.019301893189549446,0.016306176781654358,-0.04648636281490326,-0.021397754549980164,-0.08630349487066269,-0.024406922981142998,0.07125610113143921,-0.00673647178336978,-0.03421479091048241,0.04094231128692627,0.008906368166208267,0.01039485540241003,0.01120203547179699,0.11012647300958633,-0.013939435593783855,0.014407114125788212,-0.0713716372847557,-0.00467165932059288,0.001748133567161858,0.01600028946995735,0.00913812406361103,-0.03369317948818207,-0.04390288144350052,-0.048677265644073486,0.0766538605093956,-0.007125618401914835,0.06562625616788864,0.019114162772893906,-0.025143558159470558,-0.03005715273320675,-0.010588630102574825,0.0038737370632588863,-0.023092521354556084,-0.0031392371747642756,-0.07376622408628464,0.07585503160953522,-0.02809678204357624,0.034132152795791626,0.051091715693473816,-0.04384841397404671,0.04311210662126541,-0.028777876868844032,-0.0054465485736727715,-0.04919414967298508,-0.03542541339993477,0.05687752738595009,0.008903774432837963,-0.018094561994075775,0.11721055209636688,-0.0950779989361763,-0.08026587963104248,0.1094086617231369,-0.11943983286619186,0.006104780361056328,0.028651513159275055,-0.033483948558568954,-0.10360381752252579,2.8204370643248408e-33,0.06821068376302719,0.033494964241981506,-0.060528747737407684,0.04999720677733421,-0.045580748468637466,-0.06590963155031204,-0.020013460889458656,-0.0685989186167717,0.00020530857727862895,0.0851854681968689,-0.01744830794632435,-0.01410714816302061,-0.02641461417078972,-0.0970652848482132,0.10481862723827362,0.026245445013046265,-0.05085428059101105,-0.033853910863399506,0.0075319623574614525,0.08872388303279877,0.01169917918741703,-0.04752678796648979,-0.0710192546248436,0.03294067084789276,-0.019578414037823677,0.020655889064073563,-0.026390038430690765,0.061471253633499146,-0.03958294913172722,-0.06718968600034714,-0.07234597206115723,0.013040956109762192,-0.06503980606794357,0.017652234062552452,0.006634771823883057,0.015599054284393787,0.12497355043888092,-0.14690247178077698,0.01344518642872572,0.03307923302054405,0.029281049966812134,0.01946205645799637,-0.07901373505592346,0.035743776708841324,-0.04608004167675972,0.018921732902526855,0.003314100205898285,-0.004366446752101183,-0.06028206646442413,0.03974666818976402,0.08314019441604614,-0.01989784464240074,0.008587749674916267,-0.034145355224609375,0.015899350866675377,0.11298713088035583,-0.07745343446731567,-0.039084602147340775,-0.024049481377005577,0.07052118331193924,-0.01634199544787407,-0.018270783126354218,0.05983445793390274,0.004758517723530531,-0.0006871282239444554,-0.04968418926000595,-0.028609804809093475,0.05599411204457283,-0.042931605130434036,-0.0328388512134552,0.0721030905842781,0.022372622042894363,-0.11244901269674301,0.011491194367408752,-0.1566007286310196,-0.000003888522314809961,0.02339279092848301,0.03111371584236622,-0.00902820099145174,0.041575878858566284,0.08335250616073608,0.019145993515849113,0.027477623894810677,-0.028112679719924927,0.031082311645150185,0.10423551499843597,0.03430904075503349,-0.012751281261444092,-0.023548897355794907,-0.12105865031480789,-0.10198196023702621,0.05295059457421303,0.001176163088530302,-0.00956638902425766,-0.03904986009001732,-2.000169452287537e-8,-0.02951015904545784,0.01991267129778862,-0.08000306785106659,-0.02918335050344467,0.049130313098430634,-0.010289926081895828,-0.07295136153697968,0.05563254654407501,-0.09399914741516113,-0.01092152763158083,0.13776399195194244,0.018521640449762344,-0.007858301512897015,0.023300133645534515,0.03963995352387428,-0.002397526754066348,-0.019744180142879486,-0.08256833255290985,-0.018189460039138794,-0.015643229708075523,-0.04262150079011917,0.041383277624845505,0.008854362182319164,0.024427559226751328,-0.009236622601747513,0.058430664241313934,0.04422634840011597,0.11142285168170929,0.04993613064289093,0.08404113352298737,0.037549953907728195,0.03672459349036217,0.022399401292204857,-0.01634114980697632,0.020883746445178986,-0.05969102308154106,0.003356307977810502,-0.05782632902264595,0.04090052843093872,0.012677465565502644,0.039594072848558426,0.00028609478613361716,-0.060545776039361954,0.06969315558671951,-0.01792755164206028,0.017207665368914604,0.045059286057949066,-0.0313267707824707,-0.0918671116232872,-0.06653857976198196,-0.034521348774433136,0.017410246655344963,-0.03319532424211502,0.035383615642786026,0.03491678833961487,0.055963095277547836,-0.009274470619857311,-0.010006953030824661,0.00495164655148983,-0.0042588659562170506,0.049601711332798004,0.08457624912261963,0.032667383551597595,0.014545697718858719]},{"id":"ZXhwb3J0LTkzMjI0","type":"export","qualifiedName":"exports) {\n    module.exports = TarotAppController;","file":"/mnt/c/dev/tarot/js/tarot-app-controller.js","startLine":2176,"endLine":2177,"lines":2,"code":"exports) {\n    module.exports = TarotAppController;","mtime":1753008922904.6213,"doc":"","modulePath":"","elements":[],"embedding":[-0.08051843196153641,0.005369577556848526,-0.13661523163318634,0.0018833029316738248,0.10135067254304886,0.015626829117536545,0.006055084522813559,0.11250144243240356,-0.036861006170511246,-0.04865128546953201,0.07394697517156601,-0.046396445482969284,-0.056759949773550034,-0.038389500230550766,0.02659059688448906,0.04604087769985199,-0.03211096674203873,0.012036598287522793,0.0518282949924469,0.005967678967863321,0.035410113632678986,0.06120052933692932,0.0729420930147171,-0.002768070437014103,-0.04117981716990471,-0.008185616694390774,-0.03971397131681442,0.024575134739279747,0.04444773122668266,-0.035477444529533386,-0.08311683684587479,0.07746682316064835,-0.058926742523908615,0.02702491171658039,0.02557208016514778,0.09958010911941528,0.05015863478183746,-0.05561206489801407,-0.0337604284286499,-0.11831026524305344,0.06295502185821533,0.043022267520427704,-0.027687858790159225,-0.04335089400410652,-0.040021080523729324,-0.027989037334918976,0.000691954861395061,0.015018323436379433,0.02186162769794464,0.0030326759442687035,-0.014608834870159626,-0.00768342474475503,-0.02374284155666828,-0.03299134224653244,0.02643248625099659,-0.04446028172969818,-0.027955466881394386,-0.0580892413854599,0.07705220580101013,0.031103746965527534,-0.021783383563160896,0.09036610275506973,0.008835037238895893,-0.016194060444831848,0.060542650520801544,-0.05852486938238144,-0.0775369256734848,0.06561547517776489,0.01528380997478962,-0.05049452185630798,-0.07586540281772614,-0.02197420410811901,0.03198205679655075,-0.006341933738440275,-0.06950382143259048,-0.08213280886411667,0.010053124278783798,0.0721370130777359,-0.04557507485151291,-0.04258427768945694,-0.09711800515651703,0.03571712598204613,0.0009630775894038379,0.04048825427889824,-0.03851829841732979,-0.0032413494773209095,0.06306558847427368,0.045618023723363876,0.10332878679037094,0.007603592239320278,0.02527518756687641,-0.0661587193608284,0.0175034049898386,0.06357260048389435,-0.08792836219072342,-0.003682094858959317,0.04241690784692764,0.023699088022112846,-0.10241133719682693,0.02256402000784874,-0.04964929446578026,-0.027121124789118767,0.01779414340853691,-0.05891532078385353,0.05275513604283333,-0.0018403707072138786,0.02093690074980259,0.004958420991897583,0.011963868513703346,-0.01695963181555271,-0.05466315522789955,0.017822636291384697,-0.05971827358007431,-0.03675780072808266,0.05211543291807175,-0.0532655268907547,-0.0971989780664444,-0.008629387244582176,-0.02608400210738182,0.09495310485363007,0.07535558193922043,0.033997926861047745,0.14702658355236053,0.004953035153448582,-0.01390224602073431,-0.02596176229417324,0.010469297878444195,5.4628427541527614e-34,0.012322254478931427,0.017785005271434784,-0.049543656408786774,0.09207136183977127,0.011669253930449486,0.038580574095249176,0.03133491054177284,0.027974190190434456,0.00035027609555982053,0.04379914700984955,-0.09941448271274567,0.029232462868094444,-0.040202297270298004,0.1146470457315445,-0.01917971856892109,-0.056855350732803345,-0.027946116402745247,-0.030197056010365486,0.08709923923015594,-0.07917298376560211,0.008860263042151928,0.027836130931973457,0.037550561130046844,-0.044135984033346176,0.012445020489394665,0.10401615500450134,0.02973252907395363,-0.008514276705682278,0.0358915813267231,0.05431337654590607,0.11674308031797409,-0.023210689425468445,0.010871730744838715,-0.02169768139719963,0.05202321708202362,0.06694105267524719,-0.023205364122986794,-0.016422221437096596,-0.11131434887647629,0.099660724401474,-0.11176851391792297,-0.06296752393245697,-0.0927327498793602,-0.05827243626117706,0.007303026970475912,-0.05339529365301132,0.06612458825111389,0.014036828652024269,-0.027101755142211914,-0.010598043911159039,-0.1458248645067215,0.040686316788196564,0.08602381497621536,-0.04778297245502472,0.0015207264805212617,-0.06828076392412186,0.05665398761630058,-0.028994916006922722,0.012157340534031391,-0.07573363929986954,-0.054663851857185364,0.027425630018115044,-0.045188866555690765,-0.02731175534427166,-0.02654263563454151,0.0837346613407135,-0.036543793976306915,-0.06754059344530106,0.01746797189116478,-0.010838686488568783,-0.013082216493785381,0.0077680000104010105,0.040935877710580826,0.08490022271871567,0.005795897450298071,-0.006253035273402929,-0.0145888552069664,0.023657524958252907,-0.04059383273124695,-0.05322018638253212,-0.15454557538032532,-0.043779924511909485,-0.04608302563428879,-0.0196591317653656,-0.012006746605038643,-0.03841552883386612,0.02811403200030327,0.020776458084583282,0.0018096608109772205,0.018376726657152176,-0.06370935589075089,0.020848538726568222,0.004103872925043106,-0.09036646783351898,0.010405763983726501,-2.6998140788571964e-33,0.06499379873275757,-0.00388528173789382,-0.08257421106100082,-0.047230906784534454,0.0035716956481337547,-0.02333185076713562,0.020959271118044853,0.03300921618938446,-0.007565747480839491,-0.02708413451910019,-0.07991887629032135,0.0013260324485599995,0.03793869540095329,0.013160306960344315,0.002435691887512803,0.07537955790758133,-0.049417633563280106,0.01243685930967331,0.06956042349338531,-0.09741298854351044,-0.12747131288051605,0.06286578625440598,-0.010562465526163578,0.06385412812232971,-0.03802570328116417,0.015369530767202377,0.02501542493700981,0.009873846545815468,0.03248549997806549,-0.03701513633131981,0.07758680731058121,0.009466161951422691,0.00436312286183238,0.011010516434907913,-0.0629318505525589,0.042747531086206436,0.04106847941875458,0.013524153269827366,-0.020410146564245224,-0.010387973859906197,0.06579238921403885,-0.05984274297952652,-0.055637896060943604,-0.047145307064056396,-0.06944901496171951,-0.06400427222251892,-0.03807266429066658,0.023495646193623543,-0.009227949194610119,-0.006966241169720888,0.06957677006721497,-0.057482894510030746,-0.01798177696764469,-0.1099667102098465,0.05693132057785988,0.02648332715034485,0.053248386830091476,0.035029467195272446,-0.033572837710380554,0.06277018785476685,0.05242413654923439,-0.07348625361919403,0.03690601885318756,-0.043149929493665695,-0.012499285861849785,-0.0242608692497015,-0.01541241817176342,0.023891255259513855,0.03920115903019905,0.007189430762082338,-0.04186706990003586,0.009885997511446476,0.02554192766547203,0.01673302985727787,-0.03404765576124191,0.0028026343788951635,0.0031162691302597523,0.005136716645210981,0.09839633107185364,-0.0961393341422081,0.030454395338892937,-0.06941854953765869,0.020124172791838646,0.044180382043123245,-0.017065586522221565,-0.032091449946165085,0.00832380447536707,0.021919161081314087,0.06661488115787506,-0.025654390454292297,0.017669497057795525,0.001575544010847807,0.026190290227532387,0.08410166203975677,0.0017369373235851526,-2.388885533832763e-8,-0.01766045019030571,0.05527356266975403,-0.004683975130319595,0.014279952272772789,-0.09377510100603104,0.03801354393362999,0.04273327440023422,0.011790959164500237,-0.013773802667856216,0.01771237514913082,-0.006371339317411184,0.06073907017707825,-0.020771870389580727,0.03794873133301735,0.02438700571656227,0.028642356395721436,-0.010112575255334377,0.12594419717788696,-0.021918311715126038,-0.06080666556954384,0.020374279469251633,-0.01314540021121502,0.03280874714255333,0.02893979474902153,0.043406788259744644,-0.046996984630823135,-0.003422701731324196,0.025462185963988304,0.01723434403538704,-0.054327309131622314,-0.0016694548539817333,0.06223011016845703,-0.006997089367359877,-0.0194272268563509,0.03244149684906006,0.11115394532680511,-0.014698709361255169,-0.058541830629110336,0.06709635257720947,0.1114247739315033,-0.01499199215322733,0.03814521059393883,-0.08033806830644608,-0.08511912822723389,-0.02574971504509449,0.005026152357459068,-0.03760740906000137,-0.0092654163017869,-0.07173481583595276,-0.021606503054499626,0.01377748791128397,0.026815315708518028,-0.001974075101315975,0.044166918843984604,0.03199397772550583,0.09210214018821716,-0.024463938549160957,-0.08204611390829086,0.03394734859466553,-0.021532805636525154,0.012866273522377014,0.06212899088859558,0.06655361503362656,0.007633094675838947]}]